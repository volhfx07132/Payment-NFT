{
	"id": "588a247b99aad79ffdda9d4de0d9f763",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\n\r\n\r\ncontract Presale is ReentrancyGuard{\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        IERC20 saleToken;\r\n        IERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 valueSwapERC20;\r\n        uint256 feeTransaction;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n        bool saleIsBaseToken;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        bool isRefund;\r\n        bool isClaim;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numByer;\r\n        uint256 totalFee;\r\n        address[] whileList;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n\r\n    constructor() payable {\r\n        WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        IERC20 _saleToken,\r\n        IERC20 _baseTOken,\r\n        uint256[9] memory datas\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0];\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.valueSwapERC20 = datas[3];\r\n        saleInfor.feeTransaction = datas[4];\r\n        saleInfor.minSpendPerBuyer = datas[5];\r\n        saleInfor.maxSpendPerBuyer = datas[6];\r\n        saleInfor.refundFee = datas[7];\r\n        saleInfor.claimFee = datas[8];\r\n        saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken);\r\n    } \r\n\r\n    function status() public view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    }\r\n\r\n    function depodit(uint256 _amount) external payable nonReentrant {\r\n        require(status() == 1, \"NOT ACTIVE\"); // ACTIVE\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        uint256 amount_in = saleInfor.saleIsBaseToken ? msg.value : _amount;\r\n        uint256 real_amount_in = amount_in;\r\n        uint256 fee = 0;\r\n        require(real_amount_in >= saleInfor.minSpendPerBuyer, \r\n                \"Not enough value\"\r\n        );\r\n\r\n    }\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function transferETH(uint256 amount) external payable {\r\n        payable(msg.sender).transfer(msg.value - amount);\r\n    }\r\n}"
			},
			"Utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    // function safeTransfer(\r\n    //     address token,\r\n    //     address to,\r\n    //     uint256 value\r\n    // ) internal {\r\n    //     (bool success, bytes memory data) = token.call(\r\n    //         abi.encodeWithSelector(0xa9059cbb, to, value)\r\n    //     );\r\n    //     require(\r\n    //         success && (data.length == 0 || abi.decode(data, (bool))),\r\n    //         \"TransferHelper: TRANSFER_FAILED\"\r\n    //     );\r\n    // }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRefund",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numByer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valueSwapERC20",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeTransaction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "saleIsBaseToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":272:3549  contract Presale is ReentrancyGuard{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Ethereum/Presale.sol\":1512:1516  WETH */\n  0x17\n    /* \"Ethereum/Presale.sol\":1512:1569  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Ethereum/Presale.sol\":1526:1568  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n    /* \"Ethereum/Presale.sol\":1512:1569  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":272:3549  contract Presale is ReentrancyGuard{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":272:3549  contract Presale is ReentrancyGuard{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x861faf5f\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f1eae4c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x18856a2f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4329db46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x79647833\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1419:1445  SaleInfor public saleInfor */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sload(0x0a)\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      sload(0x15)\n      sload(0x16)\n      tag_15\n      swap13\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap13\n      dup2\n      and\n      swap12\n      and\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup14\n      jump\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2312:2344   */\n      swap15\n      dup16\n      and\n        /* \"#utility.yul\":2294:2345   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2381:2413   */\n      swap13\n      dup15\n      and\n        /* \"#utility.yul\":2376:2378   */\n      0x20\n        /* \"#utility.yul\":2361:2379   */\n      dup15\n      add\n        /* \"#utility.yul\":2354:2414   */\n      mstore\n        /* \"#utility.yul\":2450:2482   */\n      swap11\n      swap1\n      swap13\n      and\n        /* \"#utility.yul\":2430:2448   */\n      swap10\n      dup12\n      add\n        /* \"#utility.yul\":2423:2483   */\n      swap10\n      swap1\n      swap10\n      mstore\n        /* \"#utility.yul\":2514:2516   */\n      0x60\n        /* \"#utility.yul\":2499:2517   */\n      dup11\n      add\n        /* \"#utility.yul\":2492:2526   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":2557:2560   */\n      0x80\n        /* \"#utility.yul\":2542:2561   */\n      dup10\n      add\n        /* \"#utility.yul\":2535:2570   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":2332:2335   */\n      0xa0\n        /* \"#utility.yul\":2586:2605   */\n      dup9\n      add\n        /* \"#utility.yul\":2579:2614   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2645:2648   */\n      0xc0\n        /* \"#utility.yul\":2630:2649   */\n      dup8\n      add\n        /* \"#utility.yul\":2623:2658   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2689:2692   */\n      0xe0\n        /* \"#utility.yul\":2674:2693   */\n      dup7\n      add\n        /* \"#utility.yul\":2667:2702   */\n      mstore\n        /* \"#utility.yul\":2733:2736   */\n      0x0100\n        /* \"#utility.yul\":2718:2737   */\n      dup6\n      add\n        /* \"#utility.yul\":2711:2746   */\n      mstore\n        /* \"#utility.yul\":2777:2780   */\n      0x0120\n        /* \"#utility.yul\":2762:2781   */\n      dup5\n      add\n        /* \"#utility.yul\":2755:2790   */\n      mstore\n        /* \"#utility.yul\":2821:2824   */\n      0x0140\n        /* \"#utility.yul\":2806:2825   */\n      dup4\n      add\n        /* \"#utility.yul\":2799:2835   */\n      mstore\n        /* \"#utility.yul\":2866:2869   */\n      0x0160\n        /* \"#utility.yul\":2851:2870   */\n      dup3\n      add\n        /* \"#utility.yul\":2844:2880   */\n      mstore\n        /* \"#utility.yul\":2924:2939   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2917:2940   */\n      iszero\n        /* \"#utility.yul\":2911:2914   */\n      0x0180\n        /* \"#utility.yul\":2896:2915   */\n      dup3\n      add\n        /* \"#utility.yul\":2889:2941   */\n      mstore\n        /* \"#utility.yul\":2281:2284   */\n      0x01a0\n        /* \"#utility.yul\":2266:2285   */\n      add\n        /* \"Ethereum/Presale.sol\":1419:1445  SaleInfor public saleInfor */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":2384:2721  function status() public view returns(uint256) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":4363:4388   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"Ethereum/Presale.sol\":2384:2721  function status() public view returns(uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4318:4394   */\n      jump\n        /* \"Ethereum/Presale.sol\":3425:3546  function transferETH(uint256 amount) external payable {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Ethereum/Presale.sol\":1329:1371  mapping(address => uint256) public userFee */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_20\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":2729:3179  function depodit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":3309:3417  function backToken() external payable {\r... */\n    tag_7:\n      tag_24\n      tag_38\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1585:2375  function initialSaleInfor(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_24\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Ethereum/Presale.sol\":1768:1777  saleInfor */\n      0x0a\n        /* \"Ethereum/Presale.sol\":1768:1806  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":1817:1836  saleInfor.saleToken */\n      0x0b\n        /* \"Ethereum/Presale.sol\":1817:1849  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup7\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Ethereum/Presale.sol\":1860:1879  saleInfor.baseToken */\n      0x0c\n        /* \"Ethereum/Presale.sol\":1860:1892  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap2\n      dup5\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/Presale.sol\":1926:1934  datas[0] */\n      dup2\n      mload\n        /* \"Ethereum/Presale.sol\":1903:1923  saleInfor.tokenPrice */\n      0x0d\n        /* \"Ethereum/Presale.sol\":1903:1934  saleInfor.tokenPrice = datas[0] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1926:1934  datas[0] */\n      0x20\n        /* \"Ethereum/Presale.sol\":1967:1975  datas[1] */\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1945:1964  saleInfor.startSale */\n      0x0e\n        /* \"Ethereum/Presale.sol\":1945:1975  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2006:2014  datas[2] */\n      0x40\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1986:2003  saleInfor.endSale */\n      0x0f\n        /* \"Ethereum/Presale.sol\":1986:2014  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2052:2060  datas[3] */\n      0x60\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2025:2049  saleInfor.valueSwapERC20 */\n      0x10\n        /* \"Ethereum/Presale.sol\":2025:2060  saleInfor.valueSwapERC20 = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2098:2106  datas[4] */\n      0x80\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2071:2095  saleInfor.feeTransaction */\n      0x11\n        /* \"Ethereum/Presale.sol\":2071:2106  saleInfor.feeTransaction = datas[4] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2146:2154  datas[5] */\n      0xa0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2117:2143  saleInfor.minSpendPerBuyer */\n      0x12\n        /* \"Ethereum/Presale.sol\":2117:2154  saleInfor.minSpendPerBuyer = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2194:2202  datas[6] */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2165:2191  saleInfor.maxSpendPerBuyer */\n      0x13\n        /* \"Ethereum/Presale.sol\":2165:2202  saleInfor.maxSpendPerBuyer = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2235:2243  datas[7] */\n      0xe0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2213:2232  saleInfor.refundFee */\n      0x14\n        /* \"Ethereum/Presale.sol\":2213:2243  saleInfor.refundFee = datas[7] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2275:2283  datas[8] */\n      0x0100\n      swap1\n      swap2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2254:2272  saleInfor.claimFee */\n      0x15\n        /* \"Ethereum/Presale.sol\":2254:2283  saleInfor.claimFee = datas[8] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2330:2334  WETH */\n      sload(0x17)\n        /* \"Ethereum/Presale.sol\":2294:2319  saleInfor.saleIsBaseToken */\n      0x16\n        /* \"Ethereum/Presale.sol\":2294:2367  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Ethereum/Presale.sol\":2330:2334  WETH */\n      swap2\n      swap1\n      swap4\n      and\n        /* \"Ethereum/Presale.sol\":2322:2367  address(WETH) == address(saleInfor.baseToken) */\n      swap1\n      swap2\n      eq\n        /* \"Ethereum/Presale.sol\":2294:2367  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":1585:2375  function initialSaleInfor(\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":1378:1412  PresaleStatus public presaleStatus */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sload(0x03)\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      tag_45\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      dup7\n      jump\n    tag_45:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5246:5271   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":5302:5304   */\n      0x20\n        /* \"#utility.yul\":5287:5305   */\n      dup8\n      add\n        /* \"#utility.yul\":5280:5314   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":5330:5348   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":5323:5357   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5388:5390   */\n      0x60\n        /* \"#utility.yul\":5373:5391   */\n      dup5\n      add\n        /* \"#utility.yul\":5366:5400   */\n      mstore\n        /* \"#utility.yul\":5431:5434   */\n      0x80\n        /* \"#utility.yul\":5416:5435   */\n      dup4\n      add\n        /* \"#utility.yul\":5409:5444   */\n      mstore\n        /* \"#utility.yul\":5475:5478   */\n      0xa0\n        /* \"#utility.yul\":5460:5479   */\n      dup3\n      add\n        /* \"#utility.yul\":5453:5488   */\n      mstore\n        /* \"#utility.yul\":5233:5236   */\n      0xc0\n        /* \"#utility.yul\":5218:5237   */\n      add\n        /* \"Ethereum/Presale.sol\":1378:1412  PresaleStatus public presaleStatus */\n      tag_17\n        /* \"#utility.yul\":5200:5494   */\n      jump\n        /* \"Ethereum/Presale.sol\":1452:1470  IERC20 public WETH */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      sload(0x17)\n      tag_50\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3129:3161   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3111:3162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3099:3101   */\n      0x20\n        /* \"#utility.yul\":3084:3102   */\n      add\n        /* \"Ethereum/Presale.sol\":1452:1470  IERC20 public WETH */\n      tag_17\n        /* \"#utility.yul\":3066:3168   */\n      jump\n        /* \"Ethereum/Presale.sol\":1276:1322  mapping(address => BuyerInfo) public buyerInfo */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_56:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup7\n      jump\n    tag_55:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4674:4699   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":4730:4732   */\n      0x20\n        /* \"#utility.yul\":4715:4733   */\n      dup8\n      add\n        /* \"#utility.yul\":4708:4742   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":4758:4776   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":4751:4785   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4816:4818   */\n      0x60\n        /* \"#utility.yul\":4801:4819   */\n      dup5\n      add\n        /* \"#utility.yul\":4794:4828   */\n      mstore\n        /* \"#utility.yul\":4872:4886   */\n      iszero\n        /* \"#utility.yul\":4865:4887   */\n      iszero\n        /* \"#utility.yul\":4859:4862   */\n      0x80\n        /* \"#utility.yul\":4844:4863   */\n      dup4\n      add\n        /* \"#utility.yul\":4837:4888   */\n      mstore\n        /* \"#utility.yul\":4932:4946   */\n      iszero\n        /* \"#utility.yul\":4925:4947   */\n      iszero\n        /* \"#utility.yul\":4919:4922   */\n      0xa0\n        /* \"#utility.yul\":4904:4923   */\n      dup3\n      add\n        /* \"#utility.yul\":4897:4948   */\n      mstore\n        /* \"#utility.yul\":4661:4664   */\n      0xc0\n        /* \"#utility.yul\":4646:4665   */\n      add\n        /* \"Ethereum/Presale.sol\":1276:1322  mapping(address => BuyerInfo) public buyerInfo */\n      tag_17\n        /* \"#utility.yul\":4628:4954   */\n      jump\n        /* \"Ethereum/Presale.sol\":3187:3298  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_20\n      tag_62\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3274:3290  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":3187:3298  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":2384:2721  function status() public view returns(uint256) {\r... */\n    tag_21:\n        /* \"Ethereum/Presale.sol\":2463:2482  saleInfor.startSale */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":2422:2429  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2445:2460  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2445:2482  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":2442:2714  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_66\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2506:2507  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2384:2721  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2442:2714  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_66:\n        /* \"Ethereum/Presale.sol\":2573:2590  saleInfor.endSale */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":2555:2570  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2555:2590  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":2552:2703  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_68\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2618:2619  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":2384:2721  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2552:2703  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_68:\n      pop\n        /* \"Ethereum/Presale.sol\":2676:2677  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":2384:2721  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3425:3546  function transferETH(uint256 amount) external payable {\r... */\n    tag_27:\n        /* \"Ethereum/Presale.sol\":3498:3508  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3490:3538  payable(msg.sender).transfer(msg.value - amount) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":3519:3537  msg.value - amount */\n      tag_71\n        /* \"Ethereum/Presale.sol\":3531:3537  amount */\n      dup4\n        /* \"Ethereum/Presale.sol\":3519:3528  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":3519:3537  msg.value - amount */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"Ethereum/Presale.sol\":3490:3538  payable(msg.sender).transfer(msg.value - amount) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n        /* \"Ethereum/Presale.sol\":3425:3546  function transferETH(uint256 amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2729:3179  function depodit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_36:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4059:4061   */\n      0x20\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4062   */\n      mstore\n        /* \"#utility.yul\":4098:4100   */\n      0x1f\n        /* \"#utility.yul\":4078:4096   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4071:4101   */\n      mstore\n        /* \"#utility.yul\":4137:4170   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4117:4135   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4110:4171   */\n      mstore\n        /* \"#utility.yul\":4188:4206   */\n      0x64\n      add\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":2812:2820  status() */\n      tag_80\n        /* \"Ethereum/Presale.sol\":2812:2818  status */\n      tag_21\n        /* \"Ethereum/Presale.sol\":2812:2820  status() */\n      jump\t// in\n    tag_80:\n        /* \"Ethereum/Presale.sol\":2824:2825  1 */\n      0x01\n        /* \"Ethereum/Presale.sol\":2812:2825  status() == 1 */\n      eq\n        /* \"Ethereum/Presale.sol\":2804:2840  require(status() == 1, \"NOT ACTIVE\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3375:3377   */\n      0x20\n        /* \"Ethereum/Presale.sol\":2804:2840  require(status() == 1, \"NOT ACTIVE\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3357:3378   */\n      mstore\n        /* \"#utility.yul\":3414:3416   */\n      0x0a\n        /* \"#utility.yul\":3394:3412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3387:3417   */\n      mstore\n      shl(0xb0, 0x4e4f5420414354495645)\n        /* \"#utility.yul\":3433:3451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3426:3466   */\n      mstore\n        /* \"#utility.yul\":3483:3501   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":2804:2840  require(status() == 1, \"NOT ACTIVE\") */\n      tag_77\n        /* \"#utility.yul\":3347:3507   */\n      jump\n        /* \"Ethereum/Presale.sol\":2804:2840  require(status() == 1, \"NOT ACTIVE\") */\n    tag_81:\n        /* \"Ethereum/Presale.sol\":2897:2907  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":2861:2884  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":2887:2908  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":2887:2896  buyerInfo */\n      0x01\n        /* \"Ethereum/Presale.sol\":2887:2908  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Ethereum/Presale.sol\":2939:2964  saleInfor.saleIsBaseToken */\n      sload(0x16)\n        /* \"Ethereum/Presale.sol\":2887:2908  buyerInfo[msg.sender] */\n      swap1\n      swap2\n        /* \"Ethereum/Presale.sol\":2861:2884  BuyerInfo storage buyer */\n      swap1\n        /* \"Ethereum/Presale.sol\":2939:2964  saleInfor.saleIsBaseToken */\n      0xff\n      and\n        /* \"Ethereum/Presale.sol\":2939:2986  saleInfor.saleIsBaseToken ? msg.value : _amount */\n      tag_84\n      jumpi\n        /* \"Ethereum/Presale.sol\":2979:2986  _amount */\n      dup3\n        /* \"Ethereum/Presale.sol\":2939:2986  saleInfor.saleIsBaseToken ? msg.value : _amount */\n      jump(tag_85)\n    tag_84:\n        /* \"Ethereum/Presale.sol\":2967:2976  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":2939:2986  saleInfor.saleIsBaseToken ? msg.value : _amount */\n    tag_85:\n        /* \"Ethereum/Presale.sol\":3094:3120  saleInfor.minSpendPerBuyer */\n      sload(0x12)\n        /* \"Ethereum/Presale.sol\":2919:2986  uint256 amount_in = saleInfor.saleIsBaseToken ? msg.value : _amount */\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"Ethereum/Presale.sol\":2997:3019  uint256 real_amount_in */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":3076:3120  real_amount_in >= saleInfor.minSpendPerBuyer */\n      dup3\n      lt\n      iszero\n        /* \"Ethereum/Presale.sol\":3068:3169  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3714:3716   */\n      0x20\n        /* \"Ethereum/Presale.sol\":3068:3169  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3696:3717   */\n      mstore\n        /* \"#utility.yul\":3753:3755   */\n      0x10\n        /* \"#utility.yul\":3733:3751   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3726:3756   */\n      mstore\n      shl(0x80, 0x4e6f7420656e6f7567682076616c7565)\n        /* \"#utility.yul\":3772:3790   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3765:3811   */\n      mstore\n        /* \"#utility.yul\":3828:3846   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":3068:3169  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_77\n        /* \"#utility.yul\":3686:3852   */\n      jump\n        /* \"Ethereum/Presale.sol\":3068:3169  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n    tag_86:\n      pop\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":2729:3179  function depodit(uint256 _amount) external payable nonReentrant {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3309:3417  function backToken() external payable {\r... */\n    tag_38:\n        /* \"Ethereum/Presale.sol\":3358:3409  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":3366:3376  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":3387:3408  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":3358:3409  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":3387:3408  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":3366:3376  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":3358:3409  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n        /* \"Ethereum/Presale.sol\":3309:3417  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:271   */\n    tag_31:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_105:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_106\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":260:265   */\n      swap4\n        /* \"#utility.yul\":84:271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:1572   */\n    tag_42:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":474:477   */\n      0x0180\n        /* \"#utility.yul\":518:520   */\n      dup1\n        /* \"#utility.yul\":506:515   */\n      dup7\n        /* \"#utility.yul\":497:504   */\n      dup9\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:488   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":539:545   */\n      dup4\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":524:546   */\n      revert\n        /* \"#utility.yul\":486:488   */\n    tag_109:\n        /* \"#utility.yul\":583:592   */\n      dup6\n        /* \"#utility.yul\":570:593   */\n      calldataload\n        /* \"#utility.yul\":602:633   */\n      tag_110\n        /* \"#utility.yul\":627:632   */\n      dup2\n        /* \"#utility.yul\":602:633   */\n      tag_107\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":652:657   */\n      swap5\n      pop\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":715:733   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":702:734   */\n      calldataload\n        /* \"#utility.yul\":743:776   */\n      tag_111\n        /* \"#utility.yul\":702:734   */\n      dup2\n        /* \"#utility.yul\":743:776   */\n      tag_107\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":795:802   */\n      swap5\n      pop\n        /* \"#utility.yul\":854:856   */\n      0x40\n        /* \"#utility.yul\":839:857   */\n      dup8\n      add\n        /* \"#utility.yul\":826:858   */\n      calldataload\n        /* \"#utility.yul\":867:900   */\n      tag_112\n        /* \"#utility.yul\":826:858   */\n      dup2\n        /* \"#utility.yul\":867:900   */\n      tag_107\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":919:926   */\n      swap4\n      pop\n        /* \"#utility.yul\":964:967   */\n      0x7f\n        /* \"#utility.yul\":949:968   */\n      dup8\n      add\n        /* \"#utility.yul\":945:978   */\n      dup9\n      sgt\n        /* \"#utility.yul\":935:937   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":997:1003   */\n      dup3\n        /* \"#utility.yul\":989:995   */\n      dup4\n        /* \"#utility.yul\":982:1004   */\n      revert\n        /* \"#utility.yul\":935:937   */\n    tag_113:\n        /* \"#utility.yul\":1035:1037   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      mload\n        /* \"#utility.yul\":1077:1080   */\n      0x0120\n        /* \"#utility.yul\":1069:1075   */\n      dup2\n        /* \"#utility.yul\":1065:1081   */\n      add\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1135:1145   */\n      dup2\n        /* \"#utility.yul\":1132:1154   */\n      lt\n        /* \"#utility.yul\":1111:1129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1099:1109   */\n      dup3\n        /* \"#utility.yul\":1096:1130   */\n      gt\n        /* \"#utility.yul\":1093:1155   */\n      or\n        /* \"#utility.yul\":1090:1092   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1158:1176   */\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1194:1196   */\n      0x40\n        /* \"#utility.yul\":1187:1209   */\n      mstore\n        /* \"#utility.yul\":1229:1235   */\n      dup1\n        /* \"#utility.yul\":1270:1272   */\n      0x60\n        /* \"#utility.yul\":1255:1273   */\n      dup10\n      add\n        /* \"#utility.yul\":1288:1306   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":1285:1316   */\n      dup12\n      lt\n        /* \"#utility.yul\":1282:1284   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1334:1340   */\n      dup6\n        /* \"#utility.yul\":1326:1332   */\n      dup7\n        /* \"#utility.yul\":1319:1341   */\n      revert\n        /* \"#utility.yul\":1282:1284   */\n    tag_117:\n        /* \"#utility.yul\":1361:1367   */\n      dup6\n        /* \"#utility.yul\":1352:1367   */\n      swap5\n      pop\n        /* \"#utility.yul\":1376:1541   */\n    tag_118:\n        /* \"#utility.yul\":1390:1394   */\n      0x09\n        /* \"#utility.yul\":1387:1388   */\n      dup6\n        /* \"#utility.yul\":1384:1395   */\n      lt\n        /* \"#utility.yul\":1376:1541   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":1449:1466   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1437:1467   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1410:1411   */\n      0x01\n        /* \"#utility.yul\":1403:1412   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":1487:1499   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1519:1531   */\n      dup4\n      add\n        /* \"#utility.yul\":1376:1541   */\n      jump(tag_118)\n    tag_120:\n        /* \"#utility.yul\":1380:1383   */\n      pop\n      pop\n        /* \"#utility.yul\":1560:1566   */\n      dup1\n        /* \"#utility.yul\":1550:1566   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":454:1572   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1577:1767   */\n    tag_26:\n        /* \"#utility.yul\":1636:1642   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1677:1686   */\n      dup3\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1664:1687   */\n      sub\n        /* \"#utility.yul\":1660:1692   */\n      slt\n        /* \"#utility.yul\":1657:1659   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1710:1716   */\n      dup1\n        /* \"#utility.yul\":1702:1708   */\n      dup2\n        /* \"#utility.yul\":1695:1717   */\n      revert\n        /* \"#utility.yul\":1657:1659   */\n    tag_122:\n      pop\n        /* \"#utility.yul\":1738:1761   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1647:1767   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5499:5727   */\n    tag_72:\n        /* \"#utility.yul\":5539:5543   */\n      0x00\n        /* \"#utility.yul\":5567:5568   */\n      dup3\n        /* \"#utility.yul\":5564:5565   */\n      dup3\n        /* \"#utility.yul\":5561:5569   */\n      lt\n        /* \"#utility.yul\":5558:5560   */\n      iszero\n      tag_132\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5592:5626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5649:5653   */\n      0x11\n        /* \"#utility.yul\":5646:5647   */\n      0x04\n        /* \"#utility.yul\":5639:5654   */\n      mstore\n        /* \"#utility.yul\":5680:5684   */\n      0x24\n        /* \"#utility.yul\":5599:5603   */\n      dup2\n        /* \"#utility.yul\":5667:5685   */\n      revert\n        /* \"#utility.yul\":5558:5560   */\n    tag_132:\n      pop\n        /* \"#utility.yul\":5712:5721   */\n      sub\n      swap1\n        /* \"#utility.yul\":5548:5727   */\n      jump\t// out\n        /* \"#utility.yul\":5732:5859   */\n    tag_116:\n        /* \"#utility.yul\":5793:5803   */\n      0x4e487b71\n        /* \"#utility.yul\":5788:5791   */\n      0xe0\n        /* \"#utility.yul\":5784:5804   */\n      shl\n        /* \"#utility.yul\":5781:5782   */\n      0x00\n        /* \"#utility.yul\":5774:5805   */\n      mstore\n        /* \"#utility.yul\":5824:5828   */\n      0x41\n        /* \"#utility.yul\":5821:5822   */\n      0x04\n        /* \"#utility.yul\":5814:5829   */\n      mstore\n        /* \"#utility.yul\":5848:5852   */\n      0x24\n        /* \"#utility.yul\":5845:5846   */\n      0x00\n        /* \"#utility.yul\":5838:5853   */\n      revert\n        /* \"#utility.yul\":5864:5995   */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5939:5970   */\n      dup2\n      and\n        /* \"#utility.yul\":5929:5971   */\n      dup2\n      eq\n        /* \"#utility.yul\":5919:5921   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":5985:5986   */\n      0x00\n        /* \"#utility.yul\":5982:5983   */\n      dup1\n        /* \"#utility.yul\":5975:5987   */\n      revert\n\n    auxdata: 0xa26469706673582212202df2a54c46100543915b33e842e04da3717abc7adbb92ebb157afbcbb21942e464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001600055601780546001600160a01b03191673c778417e063141139fce010982780140aa0cd5ab1790556107178061003e6000396000f3fe60806040526004361061009c5760003560e01c8063861faf5f11610064578063861faf5f146101e95780638f1eae4c146101f1578063acfb2355146102a9578063ad5c464814610301578063e2d3f42314610339578063f8b2cb4f146103bf57600080fd5b806318856a2f146100a1578063200d2ed2146101715780634329db461461019457806356c5f349146101a957806379647833146101d6575b600080fd5b3480156100ad57600080fd5b50600a54600b54600c54600d54600e54600f546010546011546012546013546014546015546016546100f99c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b34801561017d57600080fd5b506101866103e7565b604051908152602001610168565b6101a76101a236600461067b565b610410565b005b3480156101b557600080fd5b506101866101c4366004610597565b60026020526000908152604090205481565b6101a76101e436600461067b565b61044a565b6101a7610568565b3480156101fd57600080fd5b506101a761020c3660046105ba565b600a80546001600160a01b03199081166001600160a01b0396871617909155600b8054821694861694909417909355600c80549093169184169182179092558151600d556020820151600e556040820151600f556060820151601055608082015160115560a082015160125560c082015160135560e0820151601455610100909101516015556017546016805460ff191691909316909114179055565b3480156102b557600080fd5b506003546004546005546006546007546008546102d495949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610168565b34801561030d57600080fd5b50601754610321906001600160a01b031681565b6040516001600160a01b039091168152602001610168565b34801561034557600080fd5b5061038e610354366004610597565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610168565b3480156103cb57600080fd5b506101866103da366004610597565b6001600160a01b03163190565b600e546000904210156103fa5750600090565b600f5442111561040a5750600290565b50600190565b336108fc61041e8334610693565b6040518115909202916000818181858888f19350505050158015610446573d6000803e3d6000fd5b5050565b600260005414156104a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556104af6103e7565b6001146104eb5760405162461bcd60e51b815260206004820152600a6024820152694e4f542041435449564560b01b6044820152606401610499565b33600090815260016020526040812060165490919060ff1661050d578261050f565b345b601254909150819060009082101561055c5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610499565b50506001600055505050565b60405133904780156108fc02916000818181858888f19350505050158015610594573d6000803e3d6000fd5b50565b6000602082840312156105a8578081fd5b81356105b3816106cc565b9392505050565b6000806000806101808086880312156105d1578384fd5b85356105dc816106cc565b94506020868101356105ed816106cc565b945060408701356105fd816106cc565b9350607f8701881361060d578283fd5b604051610120810181811067ffffffffffffffff82111715610631576106316106b6565b6040528060608901848a018b1015610647578586fd5b8594505b600985101561066a57803582526001949094019390830190830161064b565b505080935050505092959194509250565b60006020828403121561068c578081fd5b5035919050565b6000828210156106b157634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461059457600080fdfea26469706673582212202df2a54c46100543915b33e842e04da3717abc7adbb92ebb157afbcbb21942e464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB OR SWAP1 SSTORE PUSH2 0x717 DUP1 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH2 0xF9 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x568 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH1 0xD SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xE SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x14 SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x15 SSTORE PUSH1 0x17 SLOAD PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 SWAP2 EQ OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2D4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x321 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x3FA JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0x40A JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x41E DUP4 CALLVALUE PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x4AF PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E4F5420414354495645 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x16 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x50D JUMPI DUP3 PUSH2 0x50F JUMP JUMPDEST CALLVALUE JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP3 LT ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x594 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5B3 DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5D1 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x5DC DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x5ED DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x5FD DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x60D JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x631 JUMPI PUSH2 0x631 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x647 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x66A JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x64B JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D CALLCODE 0xA5 0x4C CHAINID LT SDIV NUMBER SWAP2 JUMPDEST CALLER 0xE8 TIMESTAMP 0xE0 0x4D LOG3 PUSH18 0x7ABC7ADBB92EBB157AFBCBB21942E464736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "272:3277:1:-:0;;;1734:1:3;1845:7;:22;1512:4:1;:57;;-1:-1:-1;;;;;;1512:57:1;1526:42;1512:57;;;272:3277;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5997:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nodeType": "YulIf",
															"src": "94:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:257:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1118:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:13:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "474:3:5",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "468:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "531:6:5"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "518:2:5"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:5"
															},
															"nodeType": "YulIf",
															"src": "486:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "557:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "583:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "570:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "561:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "627:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "602:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "652:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "666:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "676:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "670:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:47:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "702:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:32:5"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "691:7:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:7:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "743:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "785:17:5",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "795:7:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "811:47:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "826:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:5"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "815:7:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "892:7:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "867:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:17:5",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "919:7:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "989:6:5"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "997:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "964:3:5",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "949:19:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:33:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:41:5"
															},
															"nodeType": "YulIf",
															"src": "935:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1015:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1019:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1047:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:3:5",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:16:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1051:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1158:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1099:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1096:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1135:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1132:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1093:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:62:5"
															},
															"nodeType": "YulIf",
															"src": "1090:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1198:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:22:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1218:17:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1229:6:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1222:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1244:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:18:5"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1248:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1326:6:5"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1334:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1292:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1303:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1308:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1285:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:31:5"
															},
															"nodeType": "YulIf",
															"src": "1282:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1352:15:5",
															"value": {
																"name": "value3",
																"nodeType": "YulIdentifier",
																"src": "1361:6:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1356:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1423:118:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1444:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:5"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1449:12:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1449:17:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1437:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1437:30:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1480:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1496:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1487:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1480:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1512:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1523:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1528:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1519:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1519:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1512:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1387:1:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:4:5",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1384:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:11:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1396:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1398:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1407:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1403:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1403:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1398:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1380:3:5",
																"statements": []
															},
															"src": "1376:165:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:16:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1560:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:5",
														"type": ""
													}
												],
												"src": "276:1296:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1647:120:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1693:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1702:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1710:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1695:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1695:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1695:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1677:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1660:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:32:5"
															},
															"nodeType": "YulIf",
															"src": "1657:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1751:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1738:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1613:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1624:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1636:6:5",
														"type": ""
													}
												],
												"src": "1577:190:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:699:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2258:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2270:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2281:3:5",
																		"type": "",
																		"value": "416"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2258:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2316:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2332:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2337:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2328:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2328:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2341:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2324:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2324:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2312:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2312:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2365:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2376:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2361:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2361:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2385:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2401:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2406:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2397:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2397:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2410:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2393:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2393:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2381:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2381:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2354:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:60:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2354:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2470:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2475:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2466:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2466:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2479:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2462:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2462:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2450:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2423:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:60:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2423:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2503:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2514:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2519:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2546:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2557:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2542:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2542:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2563:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2535:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2590:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2601:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2586:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2586:19:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2607:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2579:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2579:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2645:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2630:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2630:19:5"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "2651:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2623:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2678:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2689:3:5",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:19:5"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2667:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2722:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2733:3:5",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2718:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2718:19:5"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "2739:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2711:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2777:3:5",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2762:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2762:19:5"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2755:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2810:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2821:3:5",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2806:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2806:19:5"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "2827:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2799:36:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:3:5",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:19:5"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "2872:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:36:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:3:5",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2896:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2896:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value12",
																						"nodeType": "YulIdentifier",
																						"src": "2931:7:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2924:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2924:15:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2917:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:52:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2118:9:5",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "2129:7:5",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "2138:7:5",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "2147:7:5",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "2156:6:5",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "2164:6:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2172:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2180:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2188:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2196:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2204:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2212:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2220:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2228:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2239:4:5",
														"type": ""
													}
												],
												"src": "1772:1175:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3066:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3076:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3118:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3133:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3149:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3154:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3145:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3145:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3158:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3141:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3111:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3035:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3046:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3057:4:5",
														"type": ""
													}
												],
												"src": "2952:216:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:160:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3364:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:2:5",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3448:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3433:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3453:12:5",
																		"type": "",
																		"value": "NOT ACTIVE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:40:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3475:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3487:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3475:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3324:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3338:4:5",
														"type": ""
													}
												],
												"src": "3173:334:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3686:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3703:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3714:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3696:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3737:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3748:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3733:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3776:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3787:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3792:18:5",
																		"type": "",
																		"value": "Not enough value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3765:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3765:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3820:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3820:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3663:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3677:4:5",
														"type": ""
													}
												],
												"src": "3512:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4031:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4048:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4059:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4041:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4082:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4093:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4078:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4078:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4098:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4071:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4071:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4071:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4121:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4132:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4117:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4117:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4137:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4110:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4110:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4180:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4192:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4188:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4180:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4008:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4022:4:5",
														"type": ""
													}
												],
												"src": "3857:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4318:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4328:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4370:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4381:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4363:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4287:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4298:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4309:4:5",
														"type": ""
													}
												],
												"src": "4217:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4628:326:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4638:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4650:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4646:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4638:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4681:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4692:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4674:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4730:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4715:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4735:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4708:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4762:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4773:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4758:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4778:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4751:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4805:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4816:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4801:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4801:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4821:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4848:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4859:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4844:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4844:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "4879:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4872:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4872:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4865:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4865:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4837:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4908:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4919:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "4939:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4932:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4932:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4925:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4925:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4897:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4557:9:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4568:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4576:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4584:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4592:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4600:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4619:4:5",
														"type": ""
													}
												],
												"src": "4399:555:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5200:294:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5210:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5222:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5233:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5218:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5210:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5253:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5264:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5246:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5246:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5246:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5291:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5287:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5307:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5280:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5280:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5334:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5345:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5350:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5323:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5323:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5377:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5388:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5373:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5373:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5366:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5366:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5437:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5464:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5475:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5460:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:19:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5481:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5453:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5453:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5129:9:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5140:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5148:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5156:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5164:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5172:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5180:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5191:4:5",
														"type": ""
													}
												],
												"src": "4959:535:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5548:179:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5578:117:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "5599:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5609:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5614:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5605:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5605:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5592:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5592:34:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5592:34:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5646:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5649:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5639:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5639:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "5674:4:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5680:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5667:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5667:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5667:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5564:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5567:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5561:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5561:8:5"
															},
															"nodeType": "YulIf",
															"src": "5558:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5704:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5716:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5719:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5712:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5704:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5530:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5533:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5539:4:5",
														"type": ""
													}
												],
												"src": "5499:228:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5764:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5781:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5788:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5793:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5774:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5774:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5821:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5824:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5814:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5814:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5848:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5732:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5909:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5973:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5982:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5985:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5975:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5975:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5975:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5932:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5943:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5958:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5963:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5954:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5954:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5967:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "5950:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5950:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5939:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5929:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5929:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5922:50:5"
															},
															"nodeType": "YulIf",
															"src": "5919:2:5"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5898:5:5",
														"type": ""
													}
												],
												"src": "5864:131:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _2 := 32\n        let value_1 := calldataload(add(headStart, _2))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        if gt(add(headStart, _1), dataEnd) { revert(value3, value3) }\n        let i := value3\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), iszero(iszero(value12)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"NOT ACTIVE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not enough value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009c5760003560e01c8063861faf5f11610064578063861faf5f146101e95780638f1eae4c146101f1578063acfb2355146102a9578063ad5c464814610301578063e2d3f42314610339578063f8b2cb4f146103bf57600080fd5b806318856a2f146100a1578063200d2ed2146101715780634329db461461019457806356c5f349146101a957806379647833146101d6575b600080fd5b3480156100ad57600080fd5b50600a54600b54600c54600d54600e54600f546010546011546012546013546014546015546016546100f99c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b34801561017d57600080fd5b506101866103e7565b604051908152602001610168565b6101a76101a236600461067b565b610410565b005b3480156101b557600080fd5b506101866101c4366004610597565b60026020526000908152604090205481565b6101a76101e436600461067b565b61044a565b6101a7610568565b3480156101fd57600080fd5b506101a761020c3660046105ba565b600a80546001600160a01b03199081166001600160a01b0396871617909155600b8054821694861694909417909355600c80549093169184169182179092558151600d556020820151600e556040820151600f556060820151601055608082015160115560a082015160125560c082015160135560e0820151601455610100909101516015556017546016805460ff191691909316909114179055565b3480156102b557600080fd5b506003546004546005546006546007546008546102d495949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610168565b34801561030d57600080fd5b50601754610321906001600160a01b031681565b6040516001600160a01b039091168152602001610168565b34801561034557600080fd5b5061038e610354366004610597565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610168565b3480156103cb57600080fd5b506101866103da366004610597565b6001600160a01b03163190565b600e546000904210156103fa5750600090565b600f5442111561040a5750600290565b50600190565b336108fc61041e8334610693565b6040518115909202916000818181858888f19350505050158015610446573d6000803e3d6000fd5b5050565b600260005414156104a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556104af6103e7565b6001146104eb5760405162461bcd60e51b815260206004820152600a6024820152694e4f542041435449564560b01b6044820152606401610499565b33600090815260016020526040812060165490919060ff1661050d578261050f565b345b601254909150819060009082101561055c5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610499565b50506001600055505050565b60405133904780156108fc02916000818181858888f19350505050158015610594573d6000803e3d6000fd5b50565b6000602082840312156105a8578081fd5b81356105b3816106cc565b9392505050565b6000806000806101808086880312156105d1578384fd5b85356105dc816106cc565b94506020868101356105ed816106cc565b945060408701356105fd816106cc565b9350607f8701881361060d578283fd5b604051610120810181811067ffffffffffffffff82111715610631576106316106b6565b6040528060608901848a018b1015610647578586fd5b8594505b600985101561066a57803582526001949094019390830190830161064b565b505080935050505092959194509250565b60006020828403121561068c578081fd5b5035919050565b6000828210156106b157634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461059457600080fdfea26469706673582212202df2a54c46100543915b33e842e04da3717abc7adbb92ebb157afbcbb21942e464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH2 0xF9 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x568 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH1 0xD SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xE SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x14 SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x15 SSTORE PUSH1 0x17 SLOAD PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 SWAP2 EQ OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2D4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x321 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x3FA JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0x40A JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x41E DUP4 CALLVALUE PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x4AF PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E4F5420414354495645 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x16 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x50D JUMPI DUP3 PUSH2 0x50F JUMP JUMPDEST CALLVALUE JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP3 LT ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x594 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5B3 DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5D1 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x5DC DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x5ED DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x5FD DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x60D JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x631 JUMPI PUSH2 0x631 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x647 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x66A JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x64B JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D CALLCODE 0xA5 0x4C CHAINID LT SDIV NUMBER SWAP2 JUMPDEST CALLER 0xE8 TIMESTAMP 0xE0 0x4D LOG3 PUSH18 0x7ABC7ADBB92EBB157AFBCBB21942E464736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "272:3277:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1419:26;;;;;;;;;;-1:-1:-1;1419:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1419:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2312:32:5;;;2294:51;;2381:32;;;2376:2;2361:18;;2354:60;2450:32;;;;2430:18;;;2423:60;;;;2514:2;2499:18;;2492:34;;;;2557:3;2542:19;;2535:35;;;;2332:3;2586:19;;2579:35;;;;2645:3;2630:19;;2623:35;;;;2689:3;2674:19;;2667:35;2733:3;2718:19;;2711:35;2777:3;2762:19;;2755:35;2821:3;2806:19;;2799:36;2866:3;2851:19;;2844:36;2924:15;;2917:23;2911:3;2896:19;;2889:52;2281:3;2266:19;1419:26:1;;;;;;;;2384:337;;;;;;;;;;;;;:::i;:::-;;;4363:25:5;;;4351:2;4336:18;2384:337:1;4318:76:5;3425:121:1;;;;;;:::i;:::-;;:::i;:::-;;1329:42;;;;;;;;;;-1:-1:-1;1329:42:1;;;;;:::i;:::-;;;;;;;;;;;;;;2729:450;;;;;;:::i;:::-;;:::i;3309:108::-;;;:::i;1585:790::-;;;;;;;;;;-1:-1:-1;1585:790:1;;;;;:::i;:::-;1768:9;:38;;-1:-1:-1;;;;;;1768:38:1;;;-1:-1:-1;;;;;1768:38:1;;;;;;;1817:19;:32;;;;;;;;;;;;;;1860:19;:32;;;;;;;;;;;;;;1926:8;;1903:20;:31;1926:8;1967;;;1945:19;:30;2006:8;;;;1986:17;:28;2052:8;;;;2025:24;:35;2098:8;;;;2071:24;:35;2146:8;;;;2117:26;:37;2194:8;;;;2165:26;:37;2235:8;;;;2213:19;:30;2275:8;;;;;2254:18;:29;2330:4;;2294:25;:73;;-1:-1:-1;;2294:73:1;2330:4;;;;2322:45;;;2294:73;;;1585:790;1378:34;;;;;;;;;;-1:-1:-1;1378:34:1;;;;;;;;;;;;;;;;;;;;;;;;;5246:25:5;;;5302:2;5287:18;;5280:34;;;;5330:18;;;5323:34;;;;5388:2;5373:18;;5366:34;5431:3;5416:19;;5409:35;5475:3;5460:19;;5453:35;5233:3;5218:19;1378:34:1;5200:294:5;1452:18:1;;;;;;;;;;-1:-1:-1;1452:18:1;;;;-1:-1:-1;;;;;1452:18:1;;;;;;-1:-1:-1;;;;;3129:32:5;;;3111:51;;3099:2;3084:18;1452::1;3066:102:5;1276:46:1;;;;;;;;;;-1:-1:-1;1276:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4674:25:5;;;4730:2;4715:18;;4708:34;;;;4758:18;;;4751:34;;;;4816:2;4801:18;;4794:34;4872:14;4865:22;4859:3;4844:19;;4837:51;4932:14;4925:22;4919:3;4904:19;;4897:51;4661:3;4646:19;1276:46:1;4628:326:5;3187:111:1;;;;;;;;;;-1:-1:-1;3187:111:1;;;;;:::i;:::-;-1:-1:-1;;;;;3274:16:1;;;3187:111;2384:337;2463:19;;2422:7;;2445:15;:37;2442:272;;;-1:-1:-1;2506:1:1;;2384:337::o;2442:272::-;2573:17;;2555:15;:35;2552:151;;;-1:-1:-1;2618:1:1;;2384:337::o;2552:151::-;-1:-1:-1;2676:1:1;;2384:337::o;3425:121::-;3498:10;3490:48;3519:18;3531:6;3519:9;:18;:::i;:::-;3490:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3425:121;:::o;2729:450::-;1778:1:3;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:3;;4059:2:5;2368:63:3;;;4041:21:5;4098:2;4078:18;;;4071:30;4137:33;4117:18;;;4110:61;4188:18;;2368:63:3;;;;;;;;;1778:1;2509:7;:18;2812:8:1::1;:6;:8::i;:::-;2824:1;2812:13;2804:36;;;::::0;-1:-1:-1;;;2804:36:1;;3375:2:5;2804:36:1::1;::::0;::::1;3357:21:5::0;3414:2;3394:18;;;3387:30;-1:-1:-1;;;3433:18:5;;;3426:40;3483:18;;2804:36:1::1;3347:160:5::0;2804:36:1::1;2897:10;2861:23;2887:21:::0;;;:9:::1;:21;::::0;;;;2939:25;;2887:21;;2861:23;2939:25:::1;;:47;;2979:7;2939:47;;;2967:9;2939:47;3094:26:::0;;2919:67;;-1:-1:-1;2919:67:1;;2997:22:::1;::::0;3076:44;::::1;;3068:101;;;::::0;-1:-1:-1;;;3068:101:1;;3714:2:5;3068:101:1::1;::::0;::::1;3696:21:5::0;3753:2;3733:18;;;3726:30;-1:-1:-1;;;3772:18:5;;;3765:46;3828:18;;3068:101:1::1;3686:166:5::0;3068:101:1::1;-1:-1:-1::0;;1734:1:3;2688:7;:22;-1:-1:-1;;;2729:450:1:o;3309:108::-;3358:51;;3366:10;;3387:21;3358:51;;;;;;;;;3387:21;3366:10;3358:51;;;;;;;;;;;;;;;;;;;;;3309:108::o;14:257:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:5:o;276:1296::-;419:6;427;435;443;474:3;518:2;506:9;497:7;493:23;489:32;486:2;;;539:6;531;524:22;486:2;583:9;570:23;602:31;627:5;602:31;:::i;:::-;652:5;-1:-1:-1;676:2:5;715:18;;;702:32;743:33;702:32;743:33;:::i;:::-;795:7;-1:-1:-1;854:2:5;839:18;;826:32;867:33;826:32;867:33;:::i;:::-;919:7;-1:-1:-1;964:3:5;949:19;;945:33;-1:-1:-1;935:2:5;;997:6;989;982:22;935:2;1035;1029:9;1077:3;1069:6;1065:16;1147:6;1135:10;1132:22;1111:18;1099:10;1096:34;1093:62;1090:2;;;1158:18;;:::i;:::-;1194:2;1187:22;1229:6;1270:2;1255:18;;1288;;;1285:31;-1:-1:-1;1282:2:5;;;1334:6;1326;1319:22;1282:2;1361:6;1352:15;;1376:165;1390:4;1387:1;1384:11;1376:165;;;1449:17;;1437:30;;1410:1;1403:9;;;;;1487:12;;;;1519;;1376:165;;;1380:3;;1560:6;1550:16;;;;;454:1118;;;;;;;:::o;1577:190::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;-1:-1:-1;1738:23:5;;1647:120;-1:-1:-1;1647:120:5:o;5499:228::-;5539:4;5567:1;5564;5561:8;5558:2;;;-1:-1:-1;;;5592:34:5;;5649:4;5646:1;5639:15;5680:4;5599;5667:18;5558:2;-1:-1:-1;5712:9:5;;5548:179::o;5732:127::-;5793:10;5788:3;5784:20;5781:1;5774:31;5824:4;5821:1;5814:15;5848:4;5845:1;5838:15;5864:131;-1:-1:-1;;;;;5939:31:5;;5929:42;;5919:2;;5985:1;5982;5975:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363000",
								"executionCost": "41217",
								"totalCost": "404217"
							},
							"external": {
								"WETH()": "1103",
								"backToken()": "infinite",
								"buyerInfo(address)": "4701",
								"depodit(uint256)": "29605",
								"getBalance(address)": "1172",
								"initialSaleInfor(address,address,address,uint256[9])": "infinite",
								"presaleStatus()": "5168",
								"saleInfor()": "10978",
								"status()": "1888",
								"transferETH(uint256)": "infinite",
								"userFee(address)": "1280"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 272,
									"end": 3549,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1512,
									"end": 1516,
									"name": "PUSH",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1512,
									"end": 1569,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1569,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 1569,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1568,
									"name": "PUSH",
									"source": 1,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": 1512,
									"end": 1569,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1569,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1569,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 3549,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202df2a54c46100543915b33e842e04da3717abc7adbb92ebb157afbcbb21942e464736f6c63430008040033",
									".code": [
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "8F1EAE4C"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "ACFB2355"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "AD5C4648"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "E2D3F423"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "18856A2F"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "200D2ED2"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "4329DB46"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "56C5F349"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "79647833"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 3549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "SWAP15",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "DUP16",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2413,
											"name": "SWAP13",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2413,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2413,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP13",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2560,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2542,
											"end": 2561,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2586,
											"end": 2605,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2674,
											"end": 2693,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2736,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2746,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2777,
											"end": 2780,
											"name": "PUSH",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2806,
											"end": 2825,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2825,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2851,
											"end": 2870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2880,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2940,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2914,
											"name": "PUSH",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "PUSH",
											"source": 5,
											"value": "1A0"
										},
										{
											"begin": 2266,
											"end": 2285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1445,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4318,
											"end": 4394,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1371,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1806,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1903,
											"end": 1934,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1945,
											"end": 1975,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1986,
											"end": 2014,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2049,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2025,
											"end": 2060,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2071,
											"end": 2106,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2146,
											"end": 2154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2117,
											"end": 2154,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2165,
											"end": 2202,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2235,
											"end": 2243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2213,
											"end": 2243,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2294,
											"end": 2367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2367,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2367,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 2375,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5271,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5271,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5314,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5314,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5357,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5357,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5373,
											"end": 5391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5373,
											"end": 5391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5434,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5416,
											"end": 5435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5416,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5478,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5218,
											"end": 5237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5200,
											"end": 5494,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3168,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4742,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4742,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4865,
											"end": 4887,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4862,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4888,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4904,
											"end": 4923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4664,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4646,
											"end": 4665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4628,
											"end": 4954,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3274,
											"end": 3290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3290,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3298,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2482,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2463,
											"end": 2482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2442,
											"end": 2714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2714,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2442,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2590,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2703,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2552,
											"end": 2703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2703,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2552,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2721,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3508,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3546,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4061,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4098,
											"end": 4100,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4101,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4170,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2812,
											"end": 2820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2812,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3414,
											"end": 3416,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3417,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E4F5420414354495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3347,
											"end": 3507,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2804,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2907,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2939,
											"end": 2964,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2939,
											"end": 2964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2939,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3094,
											"end": 3120,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2919,
											"end": 2986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3120,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3755,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F7567682076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3686,
											"end": 3852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3068,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3376,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3408,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3408,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3376,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 84,
											"end": 271,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 271,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 486,
											"end": 488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 524,
											"end": 546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 486,
											"end": 488,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 592,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 570,
											"end": 593,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 715,
											"end": 733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 702,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 702,
											"end": 734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 795,
											"end": 802,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 856,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 826,
											"end": 858,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 826,
											"end": 858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 967,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 949,
											"end": 968,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 949,
											"end": 968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 945,
											"end": 978,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 935,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1129,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1130,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1093,
											"end": 1155,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1316,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1692,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1717,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5499,
											"end": 5727,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5499,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5653,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5646,
											"end": 5647,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5639,
											"end": 5654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5599,
											"end": 5603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5685,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5727,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5732,
											"end": 5859,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5732,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5803,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5788,
											"end": 5791,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5784,
											"end": 5804,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5824,
											"end": 5828,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5814,
											"end": 5829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5853,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5995,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5864,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5939,
											"end": 5970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5971,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5919,
											"end": 5921,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"depodit(uint256)": "79647833",
							"getBalance(address)": "f8b2cb4f",
							"initialSaleInfor(address,address,address,uint256[9])": "8f1eae4c",
							"presaleStatus()": "acfb2355",
							"saleInfor()": "18856a2f",
							"status()": "200d2ed2",
							"transferETH(uint256)": "4329db46",
							"userFee(address)": "56c5f349"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRefund\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numByer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueSwapERC20\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"saleIsBaseToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0x6f1ce3a43fbd22b67bc2f6ff904a273417dafb78923aff921b63414e70d36abc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c2e93089bb369a12dd2c36601002602c13351e1ac3fdcdd7700857e992f687d\",\"dweb:/ipfs/QmXiGqvyBCxZMKt73hqsS7xKktMFtwmA88Ny4KhUMtgroF\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1030,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 152,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)131_storage)"
							},
							{
								"astId": 156,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 159,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(PresaleStatus)147_storage"
							},
							{
								"astId": 162,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(SaleInfor)118_storage"
							},
							{
								"astId": 165,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "23",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)131_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)131_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(BuyerInfo)131_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 120,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 122,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 124,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 126,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 128,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isRefund",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 130,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isClaim",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PresaleStatus)147_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 133,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 135,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 137,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 139,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 141,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numByer",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 143,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 146,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "whileList",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(SaleInfor)118_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 91,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 94,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 97,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 99,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 101,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 103,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 105,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "valueSwapERC20",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 107,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "feeTransaction",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 109,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 111,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 113,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 115,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 117,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleIsBaseToken",
										"offset": 0,
										"slot": "12",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "416"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 EXTCODECOPY 0x49 JUMPDEST 0xBC 0xB9 JUMPDEST 0x26 CALLDATACOPY MSIZE ORIGIN PUSH5 0x1AEBC5C4C0 0xC1 DUP5 0xB4 PUSH10 0x1D7201B38F69C15214BD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1265:11783:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1265:11783:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 EXTCODECOPY 0x49 JUMPDEST 0xBC 0xB9 JUMPDEST 0x26 CALLDATACOPY MSIZE ORIGIN PUSH5 0x1AEBC5C4C0 0xC1 DUP5 0xB4 PUSH10 0x1D7201B38F69C15214BD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1265:11783:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
									".code": [
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1030,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1892:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Ethereum/Presale.sol:95:9:\n   |\n95 |         BuyerInfo storage buyer = buyerInfo[msg.sender];\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2884,
					"file": "Ethereum/Presale.sol",
					"start": 2861
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Ethereum/Presale.sol:98:9:\n   |\n98 |         uint256 fee = 0;\n   |         ^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3053,
					"file": "Ethereum/Presale.sol",
					"start": 3042
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0",
							"usedErrors": []
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1019
						],
						"IERC20": [
							77
						],
						"Presale": [
							420
						],
						"ReentrancyGuard": [
							1059
						],
						"TransferHelper": [
							1208
						]
					},
					"id": 421,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 421,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 421,
							"sourceUnit": 1060,
							"src": "151:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 421,
							"sourceUnit": 1209,
							"src": "191:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 421,
							"sourceUnit": 1020,
							"src": "230:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 84,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1059,
										"src": "292:15:1"
									},
									"id": 85,
									"nodeType": "InheritanceSpecifier",
									"src": "292:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420,
								1059
							],
							"name": "Presale",
							"nameLocation": "281:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 89,
									"libraryName": {
										"id": 86,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1019,
										"src": "320:13:1"
									},
									"nodeType": "UsingForDirective",
									"src": "314:49:1",
									"typeName": {
										"id": 88,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 87,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 732,
											"src": "338:24:1"
										},
										"referencedDeclaration": 732,
										"src": "338:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 118,
									"members": [
										{
											"constant": false,
											"id": 91,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "415:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "399:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 90,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "445:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "438:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 93,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 92,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "438:6:1"
												},
												"referencedDeclaration": 77,
												"src": "438:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "472:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "465:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 96,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 95,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "465:6:1"
												},
												"referencedDeclaration": 77,
												"src": "465:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 99,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "500:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "492:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 98,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "492:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "529:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "521:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "521:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "557:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "549:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "valueSwapERC20",
											"nameLocation": "583:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "575:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 107,
											"mutability": "mutable",
											"name": "feeTransaction",
											"nameLocation": "616:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "608:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "608:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "649:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "641:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 108,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "641:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "684:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "676:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 110,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "676:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "719:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "711:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "711:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "747:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "739:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "739:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "saleIsBaseToken",
											"nameLocation": "771:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 118,
											"src": "766:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 116,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "766:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "378:9:1",
									"nodeType": "StructDefinition",
									"scope": 420,
									"src": "371:423:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 131,
									"members": [
										{
											"constant": false,
											"id": 120,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "838:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 131,
											"src": "830:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 119,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "830:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 122,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "868:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 131,
											"src": "860:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "860:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 124,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "897:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 131,
											"src": "889:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "889:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "928:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 131,
											"src": "920:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "isRefund",
											"nameLocation": "962:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 131,
											"src": "957:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 127,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "957:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "isClaim",
											"nameLocation": "986:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 131,
											"src": "981:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 129,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "981:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "809:9:1",
									"nodeType": "StructDefinition",
									"scope": 420,
									"src": "802:199:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 147,
									"members": [
										{
											"constant": false,
											"id": 133,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "1049:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1041:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1041:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 135,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "1086:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1078:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 134,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1078:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 137,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1119:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1111:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1111:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1156:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1148:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 138,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1148:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "numByer",
											"nameLocation": "1192:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1184:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1184:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "totalFee",
											"nameLocation": "1218:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1210:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 142,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1210:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "whileList",
											"nameLocation": "1247:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 147,
											"src": "1237:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 145,
												"nodeType": "ArrayTypeName",
												"src": "1237:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "1016:13:1",
									"nodeType": "StructDefinition",
									"scope": 420,
									"src": "1009:255:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 152,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1313:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "1276:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$131_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 151,
										"keyType": {
											"id": 148,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1284:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1276:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$131_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 150,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 149,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 131,
												"src": "1295:9:1"
											},
											"referencedDeclaration": 131,
											"src": "1295:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$131_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 156,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1364:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "1329:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 155,
										"keyType": {
											"id": 153,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1337:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1329:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 154,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1348:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 159,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1399:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "1378:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$147_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 158,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 157,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 147,
											"src": "1378:13:1"
										},
										"referencedDeclaration": 147,
										"src": "1378:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$147_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 162,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1436:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "1419:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 161,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 160,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 118,
											"src": "1419:9:1"
										},
										"referencedDeclaration": 118,
										"src": "1419:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$118_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 165,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1466:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 420,
									"src": "1452:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1452:6:1"
										},
										"referencedDeclaration": 77,
										"src": "1452:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1501:76:1",
										"statements": [
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1512:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1526:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 169,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1519:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1512:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1512:57:1"
											}
										]
									},
									"id": 175,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1501:0:1"
									},
									"scope": 420,
									"src": "1479:98:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "1757:618:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 190,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1768:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 91,
														"src": "1768:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "1793:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1768:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1768:38:1"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 196,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1817:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "1817:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1839:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1817:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1817:32:1"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 202,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1860:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "1860:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1882:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1860:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1860:32:1"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 208,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1903:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "1903:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 211,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1926:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 213,
														"indexExpression": {
															"hexValue": "30",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1932:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1926:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1903:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1903:31:1"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 216,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1945:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "1945:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 219,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 221,
														"indexExpression": {
															"hexValue": "31",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1973:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1967:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1945:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1945:30:1"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 224,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1986:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "1986:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 229,
														"indexExpression": {
															"hexValue": "32",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2012:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2006:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1986:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1986:28:1"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 232,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2025:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "valueSwapERC20",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "2025:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 235,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2052:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 237,
														"indexExpression": {
															"hexValue": "33",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2058:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2052:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2025:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "2025:35:1"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 240,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2071:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "2071:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 243,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 245,
														"indexExpression": {
															"hexValue": "34",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2104:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2098:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2071:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2071:35:1"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 248,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2117:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "2117:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 251,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2146:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 253,
														"indexExpression": {
															"hexValue": "35",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2152:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2146:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2117:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2117:37:1"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 256,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2165:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "2165:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 259,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2194:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 261,
														"indexExpression": {
															"hexValue": "36",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2200:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2194:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2165:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2165:37:1"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 264,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2213:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "2213:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 267,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2235:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 269,
														"indexExpression": {
															"hexValue": "37",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2235:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2213:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2213:30:1"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2254:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "2254:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 275,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "2275:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 277,
														"indexExpression": {
															"hexValue": "38",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2281:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2275:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2254:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2254:29:1"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 280,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 117,
														"src": "2294:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 285,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "2330:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2322:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 283,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2322:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2322:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 289,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2347:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "baseToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 97,
																	"src": "2347:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2339:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2339:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2339:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2322:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2294:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "2294:73:1"
											}
										]
									},
									"functionSelector": "8f1eae4c",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "1594:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "1637:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1621:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "1668:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1661:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 178,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1661:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1661:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "1696:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1689:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 181,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1689:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1689:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "1735:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1717:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 184,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1717:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 186,
													"length": {
														"hexValue": "39",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1725:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "1717:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:137:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:0:1"
									},
									"scope": 420,
									"src": "1585:790:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2431:290:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 301,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2445:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 303,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2463:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "2463:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2445:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "2537:177:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 309,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2555:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2555:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 311,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2573:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 103,
																	"src": "2573:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2555:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 319,
																"nodeType": "Block",
																"src": "2650:53:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2676:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 300,
																		"id": 318,
																		"nodeType": "Return",
																		"src": "2669:8:1"
																	}
																]
															},
															"id": 320,
															"nodeType": "IfStatement",
															"src": "2552:151:1",
															"trueBody": {
																"id": 316,
																"nodeType": "Block",
																"src": "2592:54:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2618:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 300,
																		"id": 315,
																		"nodeType": "Return",
																		"src": "2611:8:1"
																	}
																]
															}
														}
													]
												},
												"id": 322,
												"nodeType": "IfStatement",
												"src": "2442:272:1",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "2484:49:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 300,
															"id": 307,
															"nodeType": "Return",
															"src": "2499:8:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "2393:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:2:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2422:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:9:1"
									},
									"scope": 420,
									"src": "2384:337:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2793:386:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 332,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "2812:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2812:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2824:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2812:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f5420414354495645",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2827:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd",
																"typeString": "literal_string \"NOT ACTIVE\""
															},
															"value": "NOT ACTIVE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd",
																"typeString": "literal_string \"NOT ACTIVE\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2804:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2804:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2804:36:1"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "2879:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "2861:23:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$131_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 340,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 339,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 131,
																"src": "2861:9:1"
															},
															"referencedDeclaration": 131,
															"src": "2861:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$131_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"baseExpression": {
														"id": 342,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2887:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$131_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 345,
													"indexExpression": {
														"expression": {
															"id": 343,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2897:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2887:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$131_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2861:47:1"
											},
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "amount_in",
														"nameLocation": "2927:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "2919:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2919:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"condition": {
														"expression": {
															"id": 349,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2939:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 117,
														"src": "2939:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 353,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2979:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2939:47:1",
													"trueExpression": {
														"expression": {
															"id": 351,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2967:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2967:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2919:67:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "real_amount_in",
														"nameLocation": "3005:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "2997:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2997:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"id": 358,
													"name": "amount_in",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "3022:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2997:34:1"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3050:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "3042:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3042:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"hexValue": "30",
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3056:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3042:15:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "3076:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 366,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "3094:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$118_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "minSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 109,
																"src": "3094:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3076:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682076616c7565",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3140:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															},
															"value": "Not enough value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "3068:101:1"
											}
										]
									},
									"functionSelector": "79647833",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 328,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "2780:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2780:12:1"
										}
									],
									"name": "depodit",
									"nameLocation": "2738:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2754:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2746:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:17:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2793:0:1"
									},
									"scope": 420,
									"src": "2729:450:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "3256:42:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 380,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3274:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3274:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 382,
												"nodeType": "Return",
												"src": "3267:23:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3196:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3215:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3207:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3206:18:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:1"
									},
									"scope": 420,
									"src": "3187:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "3347:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 395,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3395:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$420",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$420",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3387:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 393,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3387:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3387:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3387:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 389,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3366:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3366:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3358:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3358:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3358:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3358:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3358:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "3358:51:1"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "3318:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3327:2:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:0:1"
									},
									"scope": 420,
									"src": "3309:108:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "3479:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 412,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3519:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3519:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 414,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "3531:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3519:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 408,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3498:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3490:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3490:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3490:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3490:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "3490:48:1"
											}
										]
									},
									"functionSelector": "4329db46",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferETH",
									"nameLocation": "3434:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3454:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3446:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:0:1"
									},
									"scope": 420,
									"src": "3425:121:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 421,
							"src": "272:3277:1",
							"usedErrors": []
						}
					],
					"src": "93:3456:1"
				},
				"id": 1
			},
			"Utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1019
						]
					},
					"id": 1020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 422,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 423,
								"nodeType": "StructuredDocumentation",
								"src": "145:1118:2",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1019,
							"linearizedBaseContracts": [
								1019
							],
							"name": "EnumerableSet",
							"nameLocation": "1273:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 431,
									"members": [
										{
											"constant": false,
											"id": 426,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1809:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 431,
											"src": "1799:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 425,
												"nodeType": "ArrayTypeName",
												"src": "1799:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 430,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1980:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 431,
											"src": "1952:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 429,
												"keyType": {
													"id": 427,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1952:27:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1750:3:2",
									"nodeType": "StructDefinition",
									"scope": 1019,
									"src": "1743:253:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2243:345:2",
										"statements": [
											{
												"condition": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2258:22:2",
													"subExpression": {
														"arguments": [
															{
																"id": 443,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "2269:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 444,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "2274:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 442,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "2259:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 470,
													"nodeType": "Block",
													"src": "2542:39:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 441,
															"id": 469,
															"nodeType": "Return",
															"src": "2557:12:2"
														}
													]
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "2254:327:2",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "2282:254:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2314:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 447,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "2297:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 426,
																		"src": "2297:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2297:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 454,
															"nodeType": "ExpressionStatement",
															"src": "2297:23:2"
														},
														{
															"expression": {
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 455,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "2458:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 430,
																		"src": "2458:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 459,
																	"indexExpression": {
																		"id": 457,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2471:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2458:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 460,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "2480:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 426,
																		"src": "2480:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2480:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "2458:40:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 441,
															"id": 466,
															"nodeType": "Return",
															"src": "2513:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2004:164:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2183:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2200:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2188:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 431,
														"src": "2188:3:2"
													},
													"referencedDeclaration": 431,
													"src": "2188:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2213:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2205:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2237:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2237:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:6:2"
									},
									"scope": 1019,
									"src": "2174:414:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2836:1348:2",
										"statements": [
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2956:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2948:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2948:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 486,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "2969:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 430,
														"src": "2969:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 489,
													"indexExpression": {
														"id": 488,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2982:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:40:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3005:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3019:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3005:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "4138:39:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4160:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 483,
															"id": 553,
															"nodeType": "Return",
															"src": "4153:12:2"
														}
													]
												},
												"id": 555,
												"nodeType": "IfStatement",
												"src": "3001:1176:2",
												"trueBody": {
													"id": 551,
													"nodeType": "Block",
													"src": "3022:1110:2",
													"statements": [
														{
															"assignments": [
																495
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 495,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3388:13:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 551,
																	"src": "3380:21:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 494,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3380:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 496,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "3404:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3404:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3380:38:2"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3441:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 551,
																	"src": "3433:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3433:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 507,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 502,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "3453:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 426,
																		"src": "3453:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3453:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3453:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3433:42:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 508,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3496:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 509,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "3509:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3496:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 535,
															"nodeType": "IfStatement",
															"src": "3492:405:2",
															"trueBody": {
																"id": 534,
																"nodeType": "Block",
																"src": "3524:373:2",
																"statements": [
																	{
																		"assignments": [
																			512
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 512,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 534,
																				"src": "3543:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 511,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 517,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 513,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 477,
																					"src": "3563:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 514,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 426,
																				"src": "3563:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 516,
																			"indexExpression": {
																				"id": 515,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "3575:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:2"
																	},
																	{
																		"expression": {
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 518,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "3688:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 521,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 426,
																					"src": "3688:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 522,
																				"indexExpression": {
																					"id": 520,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 495,
																					"src": "3700:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 523,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "3717:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3688:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 525,
																		"nodeType": "ExpressionStatement",
																		"src": "3688:38:2"
																	},
																	{
																		"expression": {
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 526,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "3802:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 529,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 430,
																					"src": "3802:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 530,
																				"indexExpression": {
																					"id": 528,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 512,
																					"src": "3815:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3802:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 531,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "3828:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3802:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 533,
																		"nodeType": "ExpressionStatement",
																		"src": "3802:36:2"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 536,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "3978:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 426,
																		"src": "3978:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3978:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "ExpressionStatement",
															"src": "3978:17:2"
														},
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4066:26:2",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 543,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "4073:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 430,
																		"src": "4073:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 546,
																	"indexExpression": {
																		"id": 545,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "4086:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4073:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "4066:26:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4116:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 483,
															"id": 550,
															"nodeType": "Return",
															"src": "4109:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2596:162:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2773:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2793:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2781:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 431,
														"src": "2781:3:2"
													},
													"referencedDeclaration": 431,
													"src": "2781:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2798:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:32:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2830:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:2"
									},
									"scope": 1019,
									"src": "2764:1420:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4349:50:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 568,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "4367:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 430,
															"src": "4367:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 571,
														"indexExpression": {
															"id": 570,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4380:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4367:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4390:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4367:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 574,
												"nodeType": "Return",
												"src": "4360:31:2"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4279:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4301:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4289:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 560,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 559,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 431,
														"src": "4289:3:2"
													},
													"referencedDeclaration": 431,
													"src": "4289:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4314:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4306:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 562,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:32:2"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4343:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:6:2"
									},
									"scope": 1019,
									"src": "4270:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "4550:44:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 585,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4568:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 426,
														"src": "4568:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4568:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 588,
												"nodeType": "Return",
												"src": "4561:25:2"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4407:72:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4494:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4514:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4502:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 431,
														"src": "4502:3:2"
													},
													"referencedDeclaration": 431,
													"src": "4502:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:17:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4541:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:9:2"
									},
									"scope": 1019,
									"src": "4485:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "5024:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 601,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5042:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 426,
														"src": "5042:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 604,
													"indexExpression": {
														"id": 603,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "5054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5042:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 600,
												"id": 605,
												"nodeType": "Return",
												"src": "5035:25:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "4602:340:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4957:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4973:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4961:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 592,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 431,
														"src": "4961:3:2"
													},
													"referencedDeclaration": 431,
													"src": "4961:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4986:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4978:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:32:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "5015:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 598,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:2"
									},
									"scope": 1019,
									"src": "4948:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "5692:37:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 617,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "5710:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 426,
													"src": "5710:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 616,
												"id": 619,
												"nodeType": "Return",
												"src": "5703:18:2"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "5076:536:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5627:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5647:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "5635:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 431,
														"src": "5635:3:2"
													},
													"referencedDeclaration": 431,
													"src": "5635:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:17:2"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "5674:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 613,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 614,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:18:2"
									},
									"scope": 1019,
									"src": "5618:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 625,
									"members": [
										{
											"constant": false,
											"id": 624,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5791:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "5787:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 623,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 622,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 431,
													"src": "5787:3:2"
												},
												"referencedDeclaration": 431,
												"src": "5787:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5765:10:2",
									"nodeType": "StructDefinition",
									"scope": 1019,
									"src": "5758:47:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "6059:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 637,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "6082:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "6082:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 639,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "6094:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 636,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6077:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 635,
												"id": 641,
												"nodeType": "Return",
												"src": "6070:30:2"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "5813:164:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5992:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6015:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5996:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 627,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "5996:10:2"
													},
													"referencedDeclaration": 625,
													"src": "5996:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:39:2"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 633,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:2"
									},
									"scope": 1019,
									"src": "5983:125:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "6363:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 655,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "6389:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "6389:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6401:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 654,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "6381:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 653,
												"id": 659,
												"nodeType": "Return",
												"src": "6374:33:2"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "6116:162:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6293:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6319:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6300:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "6300:10:2"
													},
													"referencedDeclaration": 625,
													"src": "6300:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6324:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:39:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6357:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6357:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:6:2"
									},
									"scope": 1019,
									"src": "6284:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6587:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 673,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "6615:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "6615:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6627:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 672,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "6605:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 677,
												"nodeType": "Return",
												"src": "6598:35:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "6423:72:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6510:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6538:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6519:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "6519:10:2"
													},
													"referencedDeclaration": 625,
													"src": "6519:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6543:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:39:2"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6581:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:6:2"
									},
									"scope": 1019,
									"src": "6501:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "6799:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 689,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "6825:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "6825:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 688,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "6817:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 687,
												"id": 692,
												"nodeType": "Return",
												"src": "6810:26:2"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6649:72:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6736:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6762:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6743:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "6743:10:2"
													},
													"referencedDeclaration": 625,
													"src": "6743:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6742:24:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:2"
									},
									"scope": 1019,
									"src": "6727:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "7281:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 706,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "7303:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "7303:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 708,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "7315:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7299:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 704,
												"id": 710,
												"nodeType": "Return",
												"src": "7292:29:2"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "6852:340:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7207:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7229:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "7210:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 697,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 696,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "7210:10:2"
													},
													"referencedDeclaration": 625,
													"src": "7210:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "7234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:39:2"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "7272:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 702,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:9:2"
									},
									"scope": 1019,
									"src": "7198:131:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "7960:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 723,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "7986:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "7986:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 722,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "7978:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 721,
												"id": 726,
												"nodeType": "Return",
												"src": "7971:26:2"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "7337:536:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7888:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7914:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "7895:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 714,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "7895:10:2"
													},
													"referencedDeclaration": 625,
													"src": "7895:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$625_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:24:2"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "7942:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 718,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7942:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 719,
													"nodeType": "ArrayTypeName",
													"src": "7942:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:18:2"
									},
									"scope": 1019,
									"src": "7879:126:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 732,
									"members": [
										{
											"constant": false,
											"id": 731,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8067:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 732,
											"src": "8063:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 730,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 729,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 431,
													"src": "8063:3:2"
												},
												"referencedDeclaration": 431,
												"src": "8063:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8041:10:2",
									"nodeType": "StructDefinition",
									"scope": 1019,
									"src": "8034:47:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "8335:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 744,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "8358:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "8358:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "8394:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8386:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 750,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8386:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8378:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 748,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8378:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8370:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 746,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8370:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8370:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 743,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "8353:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 742,
												"id": 757,
												"nodeType": "Return",
												"src": "8346:57:2"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "8089:164:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8268:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8291:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8272:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "8272:10:2"
													},
													"referencedDeclaration": 732,
													"src": "8272:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:39:2"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8329:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:6:2"
									},
									"scope": 1019,
									"src": "8259:152:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "8666:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 771,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "8692:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "8692:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 779,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 765,
																					"src": "8728:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8720:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 777,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8720:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8720:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8712:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 775,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8712:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8712:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8704:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 773,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8704:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8704:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 770,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "8684:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 769,
												"id": 784,
												"nodeType": "Return",
												"src": "8677:60:2"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "8419:162:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8596:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8622:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "8603:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 762,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 761,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "8603:10:2"
													},
													"referencedDeclaration": 732,
													"src": "8603:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8635:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "8627:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8602:39:2"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "8660:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:2"
									},
									"scope": 1019,
									"src": "8587:158:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "8917:81:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 798,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "8945:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "8945:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 806,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "8981:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8973:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 804,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8973:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8973:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8965:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8965:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8965:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 800,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 797,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "8935:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 796,
												"id": 811,
												"nodeType": "Return",
												"src": "8928:62:2"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "8753:72:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8840:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8868:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "8849:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 788,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "8849:10:2"
													},
													"referencedDeclaration": 732,
													"src": "8849:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8881:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "8873:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:39:2"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "8911:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8911:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:6:2"
									},
									"scope": 1019,
									"src": "8831:167:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "9156:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 823,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "9182:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "9182:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 822,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "9174:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 821,
												"id": 826,
												"nodeType": "Return",
												"src": "9167:26:2"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "9006:72:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9093:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9119:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "9100:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 815,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "9100:10:2"
													},
													"referencedDeclaration": 732,
													"src": "9100:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:24:2"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "9147:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9146:9:2"
									},
									"scope": 1019,
									"src": "9084:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "9638:75:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 846,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 832,
																						"src": "9684:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 847,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 731,
																					"src": "9684:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$431_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 848,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 834,
																					"src": "9696:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$431_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 845,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "9680:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9680:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9672:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 843,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9672:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9672:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9664:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 841,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9664:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9664:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9656:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 839,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 838,
												"id": 853,
												"nodeType": "Return",
												"src": "9649:56:2"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "9209:340:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "9567:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "9567:10:2"
													},
													"referencedDeclaration": 732,
													"src": "9567:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "9591:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:2"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "9629:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:2"
									},
									"scope": 1019,
									"src": "9555:158:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "10344:229:2",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10372:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "10355:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 867,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10355:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 868,
															"nodeType": "ArrayTypeName",
															"src": "10355:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 871,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "10388:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "10388:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 870,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "10380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10355:44:2"
											},
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10427:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "10410:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10410:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 878,
															"nodeType": "ArrayTypeName",
															"src": "10410:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10499:41:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10514:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10524:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 879,
														"isOffset": false,
														"isSlot": false,
														"src": "10514:6:2",
														"valueSize": 1
													},
													{
														"declaration": 869,
														"isOffset": false,
														"isSlot": false,
														"src": "10524:5:2",
														"valueSize": 1
													}
												],
												"id": 881,
												"nodeType": "InlineAssembly",
												"src": "10490:50:2"
											},
											{
												"expression": {
													"id": 882,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 879,
													"src": "10559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 864,
												"id": 883,
												"nodeType": "Return",
												"src": "10552:13:2"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "9721:536:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10272:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10298:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "10279:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 857,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "10279:10:2"
													},
													"referencedDeclaration": 732,
													"src": "10279:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$732_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:24:2"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "10326:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 861,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10326:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 862,
													"nodeType": "ArrayTypeName",
													"src": "10326:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:18:2"
									},
									"scope": 1019,
									"src": "10263:310:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 889,
									"members": [
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10629:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 889,
											"src": "10625:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 887,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 886,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 431,
													"src": "10625:3:2"
												},
												"referencedDeclaration": 431,
												"src": "10625:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$431_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10606:7:2",
									"nodeType": "StructDefinition",
									"scope": 1019,
									"src": "10599:44:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "10894:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 901,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "10917:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 888,
															"src": "10917:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 905,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "10937:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10929:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 903,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10929:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10929:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 900,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "10912:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 899,
												"id": 908,
												"nodeType": "Return",
												"src": "10905:39:2"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "10651:164:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10830:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10850:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10834:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 892,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 891,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "10834:7:2"
													},
													"referencedDeclaration": 889,
													"src": "10834:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10855:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:36:2"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10888:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10888:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:6:2"
									},
									"scope": 1019,
									"src": "10821:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "11204:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 922,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11230:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 888,
															"src": "11230:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 926,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "11250:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11242:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 924,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11242:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11242:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 921,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "11222:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 920,
												"id": 929,
												"nodeType": "Return",
												"src": "11215:42:2"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "10960:162:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11137:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11160:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "11144:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 912,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "11144:7:2"
													},
													"referencedDeclaration": 889,
													"src": "11144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11173:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "11165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:36:2"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "11198:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11198:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:6:2"
									},
									"scope": 1019,
									"src": "11128:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "11434:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 943,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "11462:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 888,
															"src": "11462:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "11482:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11474:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 945,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11474:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11474:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 942,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "11452:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 941,
												"id": 950,
												"nodeType": "Return",
												"src": "11445:44:2"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "11273:72:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11360:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11385:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "11369:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 933,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "11369:7:2"
													},
													"referencedDeclaration": 889,
													"src": "11369:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11398:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "11390:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11390:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:36:2"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "11428:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11428:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11427:6:2"
									},
									"scope": 1019,
									"src": "11351:146:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "11652:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 962,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "11678:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 888,
															"src": "11678:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 961,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "11670:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 960,
												"id": 965,
												"nodeType": "Return",
												"src": "11663:26:2"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "11505:72:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11592:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11615:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "11599:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 955,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 954,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "11599:7:2"
													},
													"referencedDeclaration": 889,
													"src": "11599:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:21:2"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "11643:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11642:9:2"
									},
									"scope": 1019,
									"src": "11583:114:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "12131:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 981,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "12161:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 888,
																	"src": "12161:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$431_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 983,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "12173:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$431_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 980,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "12157:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12157:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12149:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 977,
												"id": 986,
												"nodeType": "Return",
												"src": "12142:38:2"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "11705:340:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12060:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12079:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "12063:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 969,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "12063:7:2"
													},
													"referencedDeclaration": 889,
													"src": "12063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12092:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "12084:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:36:2"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "12122:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:9:2"
									},
									"scope": 1019,
									"src": "12051:137:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "12816:229:2",
										"statements": [
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12844:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "12827:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1000,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12827:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1001,
															"nodeType": "ArrayTypeName",
															"src": "12827:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1007,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1004,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "12860:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 888,
															"src": "12860:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$431_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1003,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "12852:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$431_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12827:44:2"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12899:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "12882:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1010,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1011,
															"nodeType": "ArrayTypeName",
															"src": "12882:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"nodeType": "VariableDeclarationStatement",
												"src": "12882:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12971:41:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12986:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12996:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1012,
														"isOffset": false,
														"isSlot": false,
														"src": "12986:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1002,
														"isOffset": false,
														"isSlot": false,
														"src": "12996:5:2",
														"valueSize": 1
													}
												],
												"id": 1014,
												"nodeType": "InlineAssembly",
												"src": "12962:50:2"
											},
											{
												"expression": {
													"id": 1015,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1012,
													"src": "13031:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 997,
												"id": 1016,
												"nodeType": "Return",
												"src": "13024:13:2"
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "12196:536:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12747:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12770:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "12754:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 991,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 990,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 889,
														"src": "12754:7:2"
													},
													"referencedDeclaration": 889,
													"src": "12754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$889_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:21:2"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "12798:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 994,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12798:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 995,
													"nodeType": "ArrayTypeName",
													"src": "12798:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:18:2"
									},
									"scope": 1019,
									"src": "12738:307:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1020,
							"src": "1265:11783:2",
							"usedErrors": []
						}
					],
					"src": "118:12930:2"
				},
				"id": 2
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1059
						]
					},
					"id": 1060,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1022,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1059,
							"linearizedBaseContracts": [
								1059
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1025,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1059,
									"src": "1694:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1023,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1024,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1028,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1059,
									"src": "1742:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1026,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1027,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1030,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1059,
									"src": "1788:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1029,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1834:41:3",
										"statements": [
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1033,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "1845:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1034,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "1855:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:3"
											}
										]
									},
									"id": 1038,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:3"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:3"
									},
									"scope": 1059,
									"src": "1820:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "2285:433:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1042,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "2376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1043,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2387:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:3"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1048,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2519:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:3"
											},
											{
												"id": 1052,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:3"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "2688:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1054,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2698:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:3"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1058,
									"name": "nonReentrant",
									"nameLocation": "2270:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:3"
									},
									"src": "2261:457:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1060,
							"src": "894:1827:3",
							"usedErrors": []
						}
					],
					"src": "100:2621:3"
				},
				"id": 3
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							1208
						]
					},
					"id": 1209,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1061,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:4",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 1208,
							"linearizedBaseContracts": [
								1208
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "380:284:4",
										"statements": [
											{
												"assignments": [
													1072,
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1104,
														"src": "392:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1071,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1104,
														"src": "406:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1073,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 1080,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "487:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1081,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "491:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1077,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1075,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "427:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "541:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1087,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1074,
																					"src": "553:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1093,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1074,
																					"src": "584:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1095,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1094,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1096,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1091,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "519:137:4"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "305:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "329:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "350:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:4"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:4"
									},
									"scope": 1208,
									"src": "274:390:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "1246:296:4",
										"statements": [
											{
												"assignments": [
													1117,
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1263:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "1258:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1116,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1258:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1285:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "1272:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1118,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1272:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1341:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1125,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "1353:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1126,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "1359:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1127,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "1363:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1122,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1318:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1318:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1318:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1120,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1293:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1293:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1257:123:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1132,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "1413:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1133,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1119,
																					"src": "1425:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1425:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1440:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1425:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1119,
																					"src": "1456:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1141,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1463:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1140,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1463:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1462:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1137,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1445:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1445:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1425:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1424:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1413:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1485:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:143:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "1391:143:4"
											}
										]
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1121:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1156:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1148:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1180:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1172:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1195:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1224:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1216:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:99:4"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:4"
									},
									"scope": 1208,
									"src": "1112:430:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "1733:400:4",
										"statements": [
											{
												"condition": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1748:8:4",
													"subExpression": {
														"id": 1162,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "1749:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1204,
													"nodeType": "Block",
													"src": "1809:317:4",
													"statements": [
														{
															"assignments": [
																1172,
																1174
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1172,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1830:7:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1204,
																	"src": "1825:12:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1171,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1825:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1174,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1852:4:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1204,
																	"src": "1839:17:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1839:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1184,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1912:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 1180,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "1924:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 1181,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "1928:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1177,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1889:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1889:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:45:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1175,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "1860:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1860:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:89:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1824:125:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1186,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1990:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1187,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1174,
																								"src": "2002:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 1188,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "2002:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2017:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2002:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1193,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1174,
																								"src": "2033:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 1195,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2040:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 1194,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2040:4:4",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 1196,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2039:6:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 1191,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "2022:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1192,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "2022:10:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1197,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2022:24:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2002:44:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1199,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2001:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1990:57:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2066:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 1185,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1964:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:150:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "1964:150:4"
														}
													]
												},
												"id": 1205,
												"nodeType": "IfStatement",
												"src": "1744:382:4",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "1758:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1167,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "1785:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1164,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "1773:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1773:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1773:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1169,
															"nodeType": "ExpressionStatement",
															"src": "1773:18:4"
														}
													]
												}
											}
										]
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1595:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1635:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1627:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1651:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1688:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1680:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1704:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:107:4"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:4"
									},
									"scope": 1208,
									"src": "1586:547:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1209,
							"src": "244:1892:4",
							"usedErrors": []
						}
					],
					"src": "35:2103:4"
				},
				"id": 4
			}
		}
	}
}