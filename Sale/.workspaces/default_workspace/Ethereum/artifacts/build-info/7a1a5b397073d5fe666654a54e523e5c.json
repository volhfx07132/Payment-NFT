{
	"id": "7a1a5b397073d5fe666654a54e523e5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\nimport \"../Utils/Ownable.sol\";\r\n\r\n\r\n\r\ncontract Presale is ReentrancyGuard, Ownable{\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        IERC20 saleToken;\r\n        IERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 valueSwapToken;\r\n        uint256 feeTransaction;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n        bool saleIsBaseToken;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        bool isRefund;\r\n        bool isClaim;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numByer;\r\n        uint256 totalFee;\r\n        address[] admin;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n    EnumerableSet.AddressSet private admins; \r\n\r\n    modifier onlyAdmin() {\r\n        require(admins.contains(_msgSender()), \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlySaleOwner() {\r\n        require(_msgSender() == saleInfor.presaleOwner, \"Not sale owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() payable {\r\n        WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n\r\n        admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD);\r\n        admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016);\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        IERC20 _saleToken,\r\n        IERC20 _baseTOken,\r\n        uint256[9] memory datas\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0];\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.valueSwapToken = datas[3];\r\n        saleInfor.feeTransaction = datas[4];\r\n        saleInfor.minSpendPerBuyer = datas[5];\r\n        saleInfor.maxSpendPerBuyer = datas[6];\r\n        saleInfor.refundFee = datas[7];\r\n        saleInfor.claimFee = datas[8];\r\n        saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken);\r\n    } \r\n\r\n    function status() public view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    } \r\n\r\n    function checkAdminAddress() public view returns(bool) {\r\n        return admins.contains(_msgSender());\r\n    }\r\n\r\n    function depodit(uint256 _amount) external payable nonReentrant {\r\n        require(status() == 1, \"NOT ACTIVE\"); // ACTIVE\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        uint256 amount_in = saleInfor.saleIsBaseToken ? msg.value : _amount;\r\n        uint256 real_amount_in = amount_in;\r\n        uint256 fee = 0;\r\n        require(real_amount_in >= saleInfor.minSpendPerBuyer, \r\n                \"Not enough value\"\r\n        );\r\n        if(checkAdminAddress()) {\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function transferETH(uint256 amount) external payable {\r\n        payable(msg.sender).transfer(msg.value - amount);\r\n    }\r\n}"
			},
			"Utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    // function safeTransfer(\r\n    //     address token,\r\n    //     address to,\r\n    //     uint256 value\r\n    // ) internal {\r\n    //     (bool success, bytes memory data) = token.call(\r\n    //         abi.encodeWithSelector(0xa9059cbb, to, value)\r\n    //     );\r\n    //     require(\r\n    //         success && (data.length == 0 || abi.decode(data, (bool))),\r\n    //         \"TransferHelper: TRANSFER_FAILED\"\r\n    //     );\r\n    // }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			},
			"Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRefund",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkAdminAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numByer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valueSwapToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeTransaction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "saleIsBaseToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":306:4186  contract Presale is ReentrancyGuard, Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_9\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"Ethereum/Presale.sol\":1838:1842  WETH */\n  0x18\n    /* \"Ethereum/Presale.sol\":1838:1895  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n    /* \"Ethereum/Presale.sol\":1852:1894  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Ethereum/Presale.sol\":1838:1895  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":1908:1962  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  tag_11\n    /* \"Ethereum/Presale.sol\":1908:1914  admins */\n  0x19\n    /* \"Ethereum/Presale.sol\":1919:1961  0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD */\n  0x6ccb41eeda5a073076f3e7dc1614c185b5fa41ed\n    /* \"Ethereum/Presale.sol\":1908:1918  admins.add */\n  tag_12\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_88\n  or\n    /* \"Ethereum/Presale.sol\":1908:1962  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  swap1\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"Ethereum/Presale.sol\":1973:2027  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  tag_13\n    /* \"Ethereum/Presale.sol\":1984:2026  0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016 */\n  0x4f0b12bbf40fc182559822a5b1db6d34dbc3e016\n    /* \"Ethereum/Presale.sol\":1973:1979  admins */\n  0x19\n    /* \"Ethereum/Presale.sol\":1973:1983  admins.add */\n  or(tag_0_88, shl(0x20, tag_12))\n  swap1\n    /* \"Ethereum/Presale.sol\":1973:2027  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"Ethereum/Presale.sol\":306:4186  contract Presale is ReentrancyGuard, Ownable{\r... */\n  jump(tag_14)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_9:\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap2\n  and\n  swap2\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  swap1\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  dup3\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_12:\n    /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_18\n    /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n  tag_19\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_18:\n    /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_17:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\ntag_19:\n    /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  dup2\n  dup2\n  mstore\n    /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n  0x01\n  dup4\n  add\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n  tag_23\n  jumpi\n  pop\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n  dup5\n  sload\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n  jump(tag_17)\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\ntag_23:\n  pop\n    /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n  jump(tag_17)\n    /* \"Ethereum/Presale.sol\":306:4186  contract Presale is ReentrancyGuard, Ownable{\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":306:4186  contract Presale is ReentrancyGuard, Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xcad5b0f7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcad5b0f7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8f1eae4c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x56c5f349\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79647833\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x18856a2f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4329db46\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1458:1484  SaleInfor public saleInfor */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      sload(0x15)\n      sload(0x16)\n      sload(0x17)\n      tag_21\n      swap13\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap13\n      dup2\n      and\n      swap12\n      and\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup14\n      jump\n    tag_21:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2520:2552   */\n      swap15\n      dup16\n      and\n        /* \"#utility.yul\":2502:2553   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2589:2621   */\n      swap13\n      dup15\n      and\n        /* \"#utility.yul\":2584:2586   */\n      0x20\n        /* \"#utility.yul\":2569:2587   */\n      dup15\n      add\n        /* \"#utility.yul\":2562:2622   */\n      mstore\n        /* \"#utility.yul\":2658:2690   */\n      swap11\n      swap1\n      swap13\n      and\n        /* \"#utility.yul\":2638:2656   */\n      swap10\n      dup12\n      add\n        /* \"#utility.yul\":2631:2691   */\n      swap10\n      swap1\n      swap10\n      mstore\n        /* \"#utility.yul\":2722:2724   */\n      0x60\n        /* \"#utility.yul\":2707:2725   */\n      dup11\n      add\n        /* \"#utility.yul\":2700:2734   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":2765:2768   */\n      0x80\n        /* \"#utility.yul\":2750:2769   */\n      dup10\n      add\n        /* \"#utility.yul\":2743:2778   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":2540:2543   */\n      0xa0\n        /* \"#utility.yul\":2794:2813   */\n      dup9\n      add\n        /* \"#utility.yul\":2787:2822   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2853:2856   */\n      0xc0\n        /* \"#utility.yul\":2838:2857   */\n      dup8\n      add\n        /* \"#utility.yul\":2831:2866   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2897:2900   */\n      0xe0\n        /* \"#utility.yul\":2882:2901   */\n      dup7\n      add\n        /* \"#utility.yul\":2875:2910   */\n      mstore\n        /* \"#utility.yul\":2941:2944   */\n      0x0100\n        /* \"#utility.yul\":2926:2945   */\n      dup6\n      add\n        /* \"#utility.yul\":2919:2954   */\n      mstore\n        /* \"#utility.yul\":2985:2988   */\n      0x0120\n        /* \"#utility.yul\":2970:2989   */\n      dup5\n      add\n        /* \"#utility.yul\":2963:2998   */\n      mstore\n        /* \"#utility.yul\":3029:3032   */\n      0x0140\n        /* \"#utility.yul\":3014:3033   */\n      dup4\n      add\n        /* \"#utility.yul\":3007:3043   */\n      mstore\n        /* \"#utility.yul\":3074:3077   */\n      0x0160\n        /* \"#utility.yul\":3059:3078   */\n      dup3\n      add\n        /* \"#utility.yul\":3052:3088   */\n      mstore\n        /* \"#utility.yul\":3132:3147   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3125:3148   */\n      iszero\n        /* \"#utility.yul\":3119:3122   */\n      0x0180\n        /* \"#utility.yul\":3104:3123   */\n      dup3\n      add\n        /* \"#utility.yul\":3097:3149   */\n      mstore\n        /* \"#utility.yul\":2489:2492   */\n      0x01a0\n        /* \"#utility.yul\":2474:2493   */\n      add\n        /* \"Ethereum/Presale.sol\":1458:1484  SaleInfor public saleInfor */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":2842:3179  function status() public view returns(uint256) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":5531:5556   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5519:5521   */\n      0x20\n        /* \"#utility.yul\":5504:5522   */\n      add\n        /* \"Ethereum/Presale.sol\":2842:3179  function status() public view returns(uint256) {\r... */\n      tag_23\n        /* \"#utility.yul\":5486:5562   */\n      jump\n        /* \"Ethereum/Presale.sol\":4062:4183  function transferETH(uint256 amount) external payable {\r... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"Ethereum/Presale.sol\":1368:1410  mapping(address => uint256) public userFee */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_26\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_30\n      tag_42\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":3306:3816  function depodit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_7:\n      tag_30\n      tag_44\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":3946:4054  function backToken() external payable {\r... */\n    tag_8:\n      tag_30\n      tag_47\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_49:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1936:1968   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1918:1969   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1906:1908   */\n      0x20\n        /* \"#utility.yul\":1891:1909   */\n      add\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      tag_23\n        /* \"#utility.yul\":1873:1975   */\n      jump\n        /* \"Ethereum/Presale.sol\":2043:2833  function initialSaleInfor(\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_30\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"Ethereum/Presale.sol\":2226:2235  saleInfor */\n      0x0b\n        /* \"Ethereum/Presale.sol\":2226:2264  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":2275:2294  saleInfor.saleToken */\n      0x0c\n        /* \"Ethereum/Presale.sol\":2275:2307  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup7\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Ethereum/Presale.sol\":2318:2337  saleInfor.baseToken */\n      0x0d\n        /* \"Ethereum/Presale.sol\":2318:2350  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap2\n      dup5\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/Presale.sol\":2384:2392  datas[0] */\n      dup2\n      mload\n        /* \"Ethereum/Presale.sol\":2361:2381  saleInfor.tokenPrice */\n      0x0e\n        /* \"Ethereum/Presale.sol\":2361:2392  saleInfor.tokenPrice = datas[0] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2384:2392  datas[0] */\n      0x20\n        /* \"Ethereum/Presale.sol\":2425:2433  datas[1] */\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2403:2422  saleInfor.startSale */\n      0x0f\n        /* \"Ethereum/Presale.sol\":2403:2433  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2464:2472  datas[2] */\n      0x40\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2444:2461  saleInfor.endSale */\n      0x10\n        /* \"Ethereum/Presale.sol\":2444:2472  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2510:2518  datas[3] */\n      0x60\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2483:2507  saleInfor.valueSwapToken */\n      0x11\n        /* \"Ethereum/Presale.sol\":2483:2518  saleInfor.valueSwapToken = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2556:2564  datas[4] */\n      0x80\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2529:2553  saleInfor.feeTransaction */\n      0x12\n        /* \"Ethereum/Presale.sol\":2529:2564  saleInfor.feeTransaction = datas[4] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2604:2612  datas[5] */\n      0xa0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2575:2601  saleInfor.minSpendPerBuyer */\n      0x13\n        /* \"Ethereum/Presale.sol\":2575:2612  saleInfor.minSpendPerBuyer = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2652:2660  datas[6] */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2623:2649  saleInfor.maxSpendPerBuyer */\n      0x14\n        /* \"Ethereum/Presale.sol\":2623:2660  saleInfor.maxSpendPerBuyer = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2693:2701  datas[7] */\n      0xe0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2671:2690  saleInfor.refundFee */\n      0x15\n        /* \"Ethereum/Presale.sol\":2671:2701  saleInfor.refundFee = datas[7] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2733:2741  datas[8] */\n      0x0100\n      swap1\n      swap2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2712:2730  saleInfor.claimFee */\n      0x16\n        /* \"Ethereum/Presale.sol\":2712:2741  saleInfor.claimFee = datas[8] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2788:2792  WETH */\n      sload(0x18)\n        /* \"Ethereum/Presale.sol\":2752:2777  saleInfor.saleIsBaseToken */\n      0x17\n        /* \"Ethereum/Presale.sol\":2752:2825  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Ethereum/Presale.sol\":2788:2792  WETH */\n      swap2\n      swap1\n      swap4\n      and\n        /* \"Ethereum/Presale.sol\":2780:2825  address(WETH) == address(saleInfor.baseToken) */\n      swap1\n      swap2\n      eq\n        /* \"Ethereum/Presale.sol\":2752:2825  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":2043:2833  function initialSaleInfor(\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":1417:1451  PresaleStatus public presaleStatus */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      sload(0x09)\n      tag_59\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      dup7\n      jump\n    tag_59:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6414:6439   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":6470:6472   */\n      0x20\n        /* \"#utility.yul\":6455:6473   */\n      dup8\n      add\n        /* \"#utility.yul\":6448:6482   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":6498:6516   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":6491:6525   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6556:6558   */\n      0x60\n        /* \"#utility.yul\":6541:6559   */\n      dup5\n      add\n        /* \"#utility.yul\":6534:6568   */\n      mstore\n        /* \"#utility.yul\":6599:6602   */\n      0x80\n        /* \"#utility.yul\":6584:6603   */\n      dup4\n      add\n        /* \"#utility.yul\":6577:6612   */\n      mstore\n        /* \"#utility.yul\":6643:6646   */\n      0xa0\n        /* \"#utility.yul\":6628:6647   */\n      dup3\n      add\n        /* \"#utility.yul\":6621:6656   */\n      mstore\n        /* \"#utility.yul\":6401:6404   */\n      0xc0\n        /* \"#utility.yul\":6386:6405   */\n      add\n        /* \"Ethereum/Presale.sol\":1417:1451  PresaleStatus public presaleStatus */\n      tag_23\n        /* \"#utility.yul\":6368:6662   */\n      jump\n        /* \"Ethereum/Presale.sol\":1491:1509  IERC20 public WETH */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sload(0x18)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":3188:3298  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":3325:3339   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3318:3340   */\n      iszero\n        /* \"#utility.yul\":3300:3341   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3288:3290   */\n      0x20\n        /* \"#utility.yul\":3273:3291   */\n      add\n        /* \"Ethereum/Presale.sol\":3188:3298  function checkAdminAddress() public view returns(bool) {\r... */\n      tag_23\n        /* \"#utility.yul\":3255:3347   */\n      jump\n        /* \"Ethereum/Presale.sol\":1315:1361  mapping(address => BuyerInfo) public buyerInfo */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_75:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap4\n      swap3\n      swap1\n      swap2\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup7\n      jump\n    tag_74:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5842:5867   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":5898:5900   */\n      0x20\n        /* \"#utility.yul\":5883:5901   */\n      dup8\n      add\n        /* \"#utility.yul\":5876:5910   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":5926:5944   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":5919:5953   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5984:5986   */\n      0x60\n        /* \"#utility.yul\":5969:5987   */\n      dup5\n      add\n        /* \"#utility.yul\":5962:5996   */\n      mstore\n        /* \"#utility.yul\":6040:6054   */\n      iszero\n        /* \"#utility.yul\":6033:6055   */\n      iszero\n        /* \"#utility.yul\":6027:6030   */\n      0x80\n        /* \"#utility.yul\":6012:6031   */\n      dup4\n      add\n        /* \"#utility.yul\":6005:6056   */\n      mstore\n        /* \"#utility.yul\":6100:6114   */\n      iszero\n        /* \"#utility.yul\":6093:6115   */\n      iszero\n        /* \"#utility.yul\":6087:6090   */\n      0xa0\n        /* \"#utility.yul\":6072:6091   */\n      dup3\n      add\n        /* \"#utility.yul\":6065:6116   */\n      mstore\n        /* \"#utility.yul\":5829:5832   */\n      0xc0\n        /* \"#utility.yul\":5814:5833   */\n      add\n        /* \"Ethereum/Presale.sol\":1315:1361  mapping(address => BuyerInfo) public buyerInfo */\n      tag_23\n        /* \"#utility.yul\":5796:6122   */\n      jump\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_30\n      tag_81\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":3824:3935  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_26\n      tag_85\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3911:3927  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":3824:3935  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":2842:3179  function status() public view returns(uint256) {\r... */\n    tag_27:\n        /* \"Ethereum/Presale.sol\":2921:2940  saleInfor.startSale */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":2880:2887  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2903:2918  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2903:2940  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":2900:3172  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2964:2965  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2842:3179  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2900:3172  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_90:\n        /* \"Ethereum/Presale.sol\":3031:3048  saleInfor.endSale */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":3013:3028  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":3013:3048  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":3010:3161  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_92\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":3076:3077  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":2842:3179  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3010:3161  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_92:\n      pop\n        /* \"Ethereum/Presale.sol\":3134:3135  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":2842:3179  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4062:4183  function transferETH(uint256 amount) external payable {\r... */\n    tag_33:\n        /* \"Ethereum/Presale.sol\":4135:4145  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":4127:4175  payable(msg.sender).transfer(msg.value - amount) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":4156:4174  msg.value - amount */\n      tag_95\n        /* \"Ethereum/Presale.sol\":4168:4174  amount */\n      dup4\n        /* \"Ethereum/Presale.sol\":4156:4165  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":4156:4174  msg.value - amount */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"Ethereum/Presale.sol\":4127:4175  payable(msg.sender).transfer(msg.value - amount) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n        /* \"Ethereum/Presale.sol\":4062:4183  function transferETH(uint256 amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_42:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4866:4868   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4848:4869   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4885:4903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4878:4908   */\n      mstore\n        /* \"#utility.yul\":4944:4978   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4924:4942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4917:4979   */\n      mstore\n        /* \"#utility.yul\":4996:5014   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_107\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_108\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_107:\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3306:3816  function depodit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_45:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5227:5229   */\n      0x20\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5209:5230   */\n      mstore\n        /* \"#utility.yul\":5266:5268   */\n      0x1f\n        /* \"#utility.yul\":5246:5264   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5239:5269   */\n      mstore\n        /* \"#utility.yul\":5305:5338   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5285:5303   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5278:5339   */\n      mstore\n        /* \"#utility.yul\":5356:5374   */\n      0x64\n      add\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_104\n        /* \"#utility.yul\":5199:5380   */\n      jump\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_110:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":3389:3397  status() */\n      tag_114\n        /* \"Ethereum/Presale.sol\":3389:3395  status */\n      tag_27\n        /* \"Ethereum/Presale.sol\":3389:3397  status() */\n      jump\t// in\n    tag_114:\n        /* \"Ethereum/Presale.sol\":3401:3402  1 */\n      0x01\n        /* \"Ethereum/Presale.sol\":3389:3402  status() == 1 */\n      eq\n        /* \"Ethereum/Presale.sol\":3381:3417  require(status() == 1, \"NOT ACTIVE\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4182:4184   */\n      0x20\n        /* \"Ethereum/Presale.sol\":3381:3417  require(status() == 1, \"NOT ACTIVE\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4164:4185   */\n      mstore\n        /* \"#utility.yul\":4221:4223   */\n      0x0a\n        /* \"#utility.yul\":4201:4219   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4194:4224   */\n      mstore\n      shl(0xb0, 0x4e4f5420414354495645)\n        /* \"#utility.yul\":4240:4258   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4233:4273   */\n      mstore\n        /* \"#utility.yul\":4290:4308   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":3381:3417  require(status() == 1, \"NOT ACTIVE\") */\n      tag_104\n        /* \"#utility.yul\":4154:4314   */\n      jump\n        /* \"Ethereum/Presale.sol\":3381:3417  require(status() == 1, \"NOT ACTIVE\") */\n    tag_115:\n        /* \"Ethereum/Presale.sol\":3474:3484  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3438:3461  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":3464:3485  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":3464:3473  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":3464:3485  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Ethereum/Presale.sol\":3516:3541  saleInfor.saleIsBaseToken */\n      sload(0x17)\n        /* \"Ethereum/Presale.sol\":3464:3485  buyerInfo[msg.sender] */\n      swap1\n      swap2\n        /* \"Ethereum/Presale.sol\":3438:3461  BuyerInfo storage buyer */\n      swap1\n        /* \"Ethereum/Presale.sol\":3516:3541  saleInfor.saleIsBaseToken */\n      0xff\n      and\n        /* \"Ethereum/Presale.sol\":3516:3563  saleInfor.saleIsBaseToken ? msg.value : _amount */\n      tag_118\n      jumpi\n        /* \"Ethereum/Presale.sol\":3556:3563  _amount */\n      dup3\n        /* \"Ethereum/Presale.sol\":3516:3563  saleInfor.saleIsBaseToken ? msg.value : _amount */\n      jump(tag_119)\n    tag_118:\n        /* \"Ethereum/Presale.sol\":3544:3553  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":3516:3563  saleInfor.saleIsBaseToken ? msg.value : _amount */\n    tag_119:\n        /* \"Ethereum/Presale.sol\":3671:3697  saleInfor.minSpendPerBuyer */\n      sload(0x13)\n        /* \"Ethereum/Presale.sol\":3496:3563  uint256 amount_in = saleInfor.saleIsBaseToken ? msg.value : _amount */\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"Ethereum/Presale.sol\":3574:3596  uint256 real_amount_in */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":3653:3697  real_amount_in >= saleInfor.minSpendPerBuyer */\n      dup3\n      lt\n      iszero\n        /* \"Ethereum/Presale.sol\":3645:3746  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4521:4523   */\n      0x20\n        /* \"Ethereum/Presale.sol\":3645:3746  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4503:4524   */\n      mstore\n        /* \"#utility.yul\":4560:4562   */\n      0x10\n        /* \"#utility.yul\":4540:4558   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4533:4563   */\n      mstore\n      shl(0x80, 0x4e6f7420656e6f7567682076616c7565)\n        /* \"#utility.yul\":4579:4597   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4572:4618   */\n      mstore\n        /* \"#utility.yul\":4635:4653   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":3645:3746  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_104\n        /* \"#utility.yul\":4493:4659   */\n      jump\n        /* \"Ethereum/Presale.sol\":3645:3746  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n    tag_120:\n        /* \"Ethereum/Presale.sol\":3760:3779  checkAdminAddress() */\n      tag_123\n        /* \"Ethereum/Presale.sol\":3760:3777  checkAdminAddress */\n      tag_70\n        /* \"Ethereum/Presale.sol\":3760:3779  checkAdminAddress() */\n      jump\t// in\n    tag_123:\n        /* \"Ethereum/Presale.sol\":3757:3807  if(checkAdminAddress()) {\r... */\n      pop\n      pop\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":3306:3816  function depodit(uint256 _amount) external payable nonReentrant {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3946:4054  function backToken() external payable {\r... */\n    tag_47:\n        /* \"Ethereum/Presale.sol\":3995:4046  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":4003:4013  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":4024:4045  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":3995:4046  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":4024:4045  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":4003:4013  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":3995:4046  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n        /* \"Ethereum/Presale.sol\":3946:4054  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3188:3298  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_70:\n        /* \"Ethereum/Presale.sol\":3237:3241  bool */\n      0x00\n        /* \"Ethereum/Presale.sol\":3261:3290  admins.contains(_msgSender()) */\n      tag_140\n        /* \"Ethereum/Presale.sol\":3261:3267  admins */\n      0x19\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3261:3276  admins.contains */\n      tag_142\n        /* \"Ethereum/Presale.sol\":3261:3290  admins.contains(_msgSender()) */\n      jump\t// in\n    tag_140:\n        /* \"Ethereum/Presale.sol\":3254:3290  return admins.contains(_msgSender()) */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":3188:3298  function checkAdminAddress() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_82:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4866:4868   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4848:4869   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4885:4903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4878:4908   */\n      mstore\n        /* \"#utility.yul\":4944:4978   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4924:4942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4917:4979   */\n      mstore\n        /* \"#utility.yul\":4996:5014   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n        /* \"#utility.yul\":4838:5020   */\n      jump\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3775:3777   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3757:3778   */\n      mstore\n        /* \"#utility.yul\":3814:3816   */\n      0x26\n        /* \"#utility.yul\":3794:3812   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3787:3817   */\n      mstore\n        /* \"#utility.yul\":3853:3887   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3833:3851   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3826:3888   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3904:3922   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3897:3933   */\n      mstore\n        /* \"#utility.yul\":3950:3969   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_104\n        /* \"#utility.yul\":3747:3975   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_149:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_127\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_108\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_88:\n        /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_155\n        /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n      tag_156\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_155:\n        /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_154:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_108:\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap2\n      and\n      swap2\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      swap1\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      dup3\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/EnumerableSet.sol\":8831:8998  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8965:8988  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"Utils/EnumerableSet.sol\":8911:8915  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":4367:4391  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"Utils/EnumerableSet.sol\":8935:8990  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_155\n        /* \"Utils/EnumerableSet.sol\":4270:4399  function _contains(Set storage set, bytes32 value) private view returns (bool) {\r... */\n      jump\n        /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_156:\n        /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n      tag_164\n      jumpi\n      pop\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n      dup5\n      sload\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n      jump(tag_154)\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n    tag_164:\n      pop\n        /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n      jump(tag_154)\n        /* \"#utility.yul\":14:271   */\n    tag_37:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_170:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_171\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":260:265   */\n      swap4\n        /* \"#utility.yul\":84:271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:1572   */\n    tag_56:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":474:477   */\n      0x0180\n        /* \"#utility.yul\":518:520   */\n      dup1\n        /* \"#utility.yul\":506:515   */\n      dup7\n        /* \"#utility.yul\":497:504   */\n      dup9\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:488   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":539:545   */\n      dup4\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":524:546   */\n      revert\n        /* \"#utility.yul\":486:488   */\n    tag_174:\n        /* \"#utility.yul\":583:592   */\n      dup6\n        /* \"#utility.yul\":570:593   */\n      calldataload\n        /* \"#utility.yul\":602:633   */\n      tag_175\n        /* \"#utility.yul\":627:632   */\n      dup2\n        /* \"#utility.yul\":602:633   */\n      tag_172\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":652:657   */\n      swap5\n      pop\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":715:733   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":702:734   */\n      calldataload\n        /* \"#utility.yul\":743:776   */\n      tag_176\n        /* \"#utility.yul\":702:734   */\n      dup2\n        /* \"#utility.yul\":743:776   */\n      tag_172\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":795:802   */\n      swap5\n      pop\n        /* \"#utility.yul\":854:856   */\n      0x40\n        /* \"#utility.yul\":839:857   */\n      dup8\n      add\n        /* \"#utility.yul\":826:858   */\n      calldataload\n        /* \"#utility.yul\":867:900   */\n      tag_177\n        /* \"#utility.yul\":826:858   */\n      dup2\n        /* \"#utility.yul\":867:900   */\n      tag_172\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":919:926   */\n      swap4\n      pop\n        /* \"#utility.yul\":964:967   */\n      0x7f\n        /* \"#utility.yul\":949:968   */\n      dup8\n      add\n        /* \"#utility.yul\":945:978   */\n      dup9\n      sgt\n        /* \"#utility.yul\":935:937   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":997:1003   */\n      dup3\n        /* \"#utility.yul\":989:995   */\n      dup4\n        /* \"#utility.yul\":982:1004   */\n      revert\n        /* \"#utility.yul\":935:937   */\n    tag_178:\n        /* \"#utility.yul\":1035:1037   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      mload\n        /* \"#utility.yul\":1077:1080   */\n      0x0120\n        /* \"#utility.yul\":1069:1075   */\n      dup2\n        /* \"#utility.yul\":1065:1081   */\n      add\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1135:1145   */\n      dup2\n        /* \"#utility.yul\":1132:1154   */\n      lt\n        /* \"#utility.yul\":1111:1129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1099:1109   */\n      dup3\n        /* \"#utility.yul\":1096:1130   */\n      gt\n        /* \"#utility.yul\":1093:1155   */\n      or\n        /* \"#utility.yul\":1090:1092   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1158:1176   */\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1194:1196   */\n      0x40\n        /* \"#utility.yul\":1187:1209   */\n      mstore\n        /* \"#utility.yul\":1229:1235   */\n      dup1\n        /* \"#utility.yul\":1270:1272   */\n      0x60\n        /* \"#utility.yul\":1255:1273   */\n      dup10\n      add\n        /* \"#utility.yul\":1288:1306   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":1285:1316   */\n      dup12\n      lt\n        /* \"#utility.yul\":1282:1284   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1334:1340   */\n      dup6\n        /* \"#utility.yul\":1326:1332   */\n      dup7\n        /* \"#utility.yul\":1319:1341   */\n      revert\n        /* \"#utility.yul\":1282:1284   */\n    tag_182:\n        /* \"#utility.yul\":1361:1367   */\n      dup6\n        /* \"#utility.yul\":1352:1367   */\n      swap5\n      pop\n        /* \"#utility.yul\":1376:1541   */\n    tag_183:\n        /* \"#utility.yul\":1390:1394   */\n      0x09\n        /* \"#utility.yul\":1387:1388   */\n      dup6\n        /* \"#utility.yul\":1384:1395   */\n      lt\n        /* \"#utility.yul\":1376:1541   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":1449:1466   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1437:1467   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1410:1411   */\n      0x01\n        /* \"#utility.yul\":1403:1412   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":1487:1499   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1519:1531   */\n      dup4\n      add\n        /* \"#utility.yul\":1376:1541   */\n      jump(tag_183)\n    tag_185:\n        /* \"#utility.yul\":1380:1383   */\n      pop\n      pop\n        /* \"#utility.yul\":1560:1566   */\n      dup1\n        /* \"#utility.yul\":1550:1566   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":454:1572   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1577:1767   */\n    tag_32:\n        /* \"#utility.yul\":1636:1642   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1677:1686   */\n      dup3\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1664:1687   */\n      sub\n        /* \"#utility.yul\":1660:1692   */\n      slt\n        /* \"#utility.yul\":1657:1659   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":1710:1716   */\n      dup1\n        /* \"#utility.yul\":1702:1708   */\n      dup2\n        /* \"#utility.yul\":1695:1717   */\n      revert\n        /* \"#utility.yul\":1657:1659   */\n    tag_187:\n      pop\n        /* \"#utility.yul\":1738:1761   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1647:1767   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:6895   */\n    tag_96:\n        /* \"#utility.yul\":6707:6711   */\n      0x00\n        /* \"#utility.yul\":6735:6736   */\n      dup3\n        /* \"#utility.yul\":6732:6733   */\n      dup3\n        /* \"#utility.yul\":6729:6737   */\n      lt\n        /* \"#utility.yul\":6726:6728   */\n      iszero\n      tag_201\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6760:6794   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6817:6821   */\n      0x11\n        /* \"#utility.yul\":6814:6815   */\n      0x04\n        /* \"#utility.yul\":6807:6822   */\n      mstore\n        /* \"#utility.yul\":6848:6852   */\n      0x24\n        /* \"#utility.yul\":6767:6771   */\n      dup2\n        /* \"#utility.yul\":6835:6853   */\n      revert\n        /* \"#utility.yul\":6726:6728   */\n    tag_201:\n      pop\n        /* \"#utility.yul\":6880:6889   */\n      sub\n      swap1\n        /* \"#utility.yul\":6716:6895   */\n      jump\t// out\n        /* \"#utility.yul\":6900:7027   */\n    tag_181:\n        /* \"#utility.yul\":6961:6971   */\n      0x4e487b71\n        /* \"#utility.yul\":6956:6959   */\n      0xe0\n        /* \"#utility.yul\":6952:6972   */\n      shl\n        /* \"#utility.yul\":6949:6950   */\n      0x00\n        /* \"#utility.yul\":6942:6973   */\n      mstore\n        /* \"#utility.yul\":6992:6996   */\n      0x41\n        /* \"#utility.yul\":6989:6990   */\n      0x04\n        /* \"#utility.yul\":6982:6997   */\n      mstore\n        /* \"#utility.yul\":7016:7020   */\n      0x24\n        /* \"#utility.yul\":7013:7014   */\n      0x00\n        /* \"#utility.yul\":7006:7021   */\n      revert\n        /* \"#utility.yul\":7032:7163   */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7107:7138   */\n      dup2\n      and\n        /* \"#utility.yul\":7097:7139   */\n      dup2\n      eq\n        /* \"#utility.yul\":7087:7089   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":7153:7154   */\n      0x00\n        /* \"#utility.yul\":7150:7151   */\n      dup1\n        /* \"#utility.yul\":7143:7155   */\n      revert\n\n    auxdata: 0xa26469706673582212206364bf8d8b867b2367133c1df181ebd19eb8049be77b01e1159c7ed2e5f4755264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600160005561001233610097565b6018805473c778417e063141139fce010982780140aa0cd5ab6001600160a01b03199091161790556100646019736ccb41eeda5a073076f3e7dc1614c185b5fa41ed6100e9602090811b6107a117901c565b50610091734f0b12bbf40fc182559822a5b1db6d34dbc3e01660196100e960201b6107a11790919060201c565b50610156565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006100fe836001600160a01b038416610107565b90505b92915050565b600081815260018301602052604081205461014e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610101565b506000610101565b610a02806101656000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063cad5b0f711610059578063cad5b0f7146103b4578063e2d3f423146103d9578063f2fde38b14610460578063f8b2cb4f1461048057600080fd5b80638da5cb5b146102525780638f1eae4c14610284578063acfb23551461033c578063ad5c46481461039457600080fd5b806356c5f349116100c657806356c5f349146101f5578063715018a6146102225780637964783314610237578063861faf5f1461024a57600080fd5b806318856a2f146100ed578063200d2ed2146101bd5780634329db46146101e0575b600080fd5b3480156100f957600080fd5b50600b54600c54600d54600e54600f546010546011546012546013546014546015546016546017546101459c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b3480156101c957600080fd5b506101d26104a8565b6040519081526020016101b4565b6101f36101ee366004610966565b6104d1565b005b34801561020157600080fd5b506101d2610210366004610882565b60036020526000908152604090205481565b34801561022e57600080fd5b506101f361050b565b6101f3610245366004610966565b610576565b6101f3610698565b34801561025e57600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016101b4565b34801561029057600080fd5b506101f361029f3660046108a5565b600b80546001600160a01b03199081166001600160a01b0396871617909155600c8054821694861694909417909355600d80549093169184169182179092558151600e556020820151600f5560408201516010556060820151601155608082015160125560a082015160135560c082015160145560e0820151601555610100909101516016556018546017805460ff191691909316909114179055565b34801561034857600080fd5b5060045460055460065460075460085460095461036795949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016101b4565b3480156103a057600080fd5b5060185461026c906001600160a01b031681565b3480156103c057600080fd5b506103c96106c7565b60405190151581526020016101b4565b3480156103e557600080fd5b5061042f6103f4366004610882565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c0016101b4565b34801561046c57600080fd5b506101f361047b366004610882565b6106d9565b34801561048c57600080fd5b506101d261049b366004610882565b6001600160a01b03163190565b600f546000904210156104bb5750600090565b6010544211156104cb5750600290565b50600190565b336108fc6104df833461097e565b6040518115909202916000818181858888f19350505050158015610507573d6000803e3d6000fd5b5050565b6001546001600160a01b0316331461056a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61057460006107bf565b565b600260005414156105c95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610561565b60026000556105d66104a8565b6001146106125760405162461bcd60e51b815260206004820152600a6024820152694e4f542041435449564560b01b6044820152606401610561565b33600090815260026020526040812060175490919060ff166106345782610636565b345b60135490915081906000908210156106835760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610561565b61068b6106c7565b5050506001600055505050565b60405133904780156108fc02916000818181858888f193505050501580156106c4573d6000803e3d6000fd5b50565b60006106d4601933610811565b905090565b6001546001600160a01b031633146107335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6001600160a01b0381166107985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610561565b6106c4816107bf565b60006107b6836001600160a01b038416610833565b90505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260018301602052604081205415156107b6565b600081815260018301602052604081205461087a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107b9565b5060006107b9565b600060208284031215610893578081fd5b813561089e816109b7565b9392505050565b6000806000806101808086880312156108bc578384fd5b85356108c7816109b7565b94506020868101356108d8816109b7565b945060408701356108e8816109b7565b9350607f870188136108f8578283fd5b604051610120810181811067ffffffffffffffff8211171561091c5761091c6109a1565b6040528060608901848a018b1015610932578586fd5b8594505b6009851015610955578035825260019490940193908301908301610936565b505080935050505092959194509250565b600060208284031215610977578081fd5b5035919050565b60008282101561099c57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146106c457600080fdfea26469706673582212206364bf8d8b867b2367133c1df181ebd19eb8049be77b01e1159c7ed2e5f4755264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x12 CALLER PUSH2 0x97 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x64 PUSH1 0x19 PUSH20 0x6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED PUSH2 0xE9 PUSH1 0x20 SWAP1 DUP2 SHL PUSH2 0x7A1 OR SWAP1 SHR JUMP JUMPDEST POP PUSH2 0x91 PUSH20 0x4F0B12BBF40FC182559822A5B1DB6D34DBC3E016 PUSH1 0x19 PUSH2 0xE9 PUSH1 0x20 SHL PUSH2 0x7A1 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x156 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x107 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x14E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x101 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x101 JUMP JUMPDEST PUSH2 0xA02 DUP1 PUSH2 0x165 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCAD5B0F7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56C5F349 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x1E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH2 0x145 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x698 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH1 0xE SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x14 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x15 SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x16 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 SWAP2 EQ OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x367 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x4BB JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO PUSH2 0x4CB JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x4DF DUP4 CALLVALUE PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x574 PUSH1 0x0 PUSH2 0x7BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x5D6 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E4F5420414354495645 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x17 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x634 JUMPI DUP3 PUSH2 0x636 JUMP JUMPDEST CALLVALUE JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP3 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x6C7 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D4 PUSH1 0x19 CALLER PUSH2 0x811 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x833 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x87A JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7B9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x893 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x89E DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8BC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x8C7 DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x8D8 DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x8E8 DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x8F8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x91C JUMPI PUSH2 0x91C PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x932 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x955 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x936 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x977 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x99C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x64BF8D8B DUP7 PUSH28 0x2367133C1DF181EBD19EB8049BE77B01E1159C7ED2E5F4755264736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "306:3880:1:-:0;;;1734:1:5;1845:7;:22;942:32:4;736:10:2;942:18:4;:32::i;:::-;1838:4:1;:57;;1852:42;-1:-1:-1;;;;;;1838:57:1;;;;;;1908:54;:6;1919:42;1908:10;;;;;;;:54;;:::i;:::-;;1973;1984:42;1973:6;:10;;;;;;:54;;;;:::i;:::-;;306:3880;;2333:191:4;2426:6;;;-1:-1:-1;;;;;2443:17:4;;;-1:-1:-1;;;;;;2443:17:4;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2333:191;;:::o;8259:152:3:-;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:3;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2174:414::-;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:3;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:3;2557:12;;306:3880:1;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7165:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:7"
															},
															"nodeType": "YulIf",
															"src": "94:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:7",
														"type": ""
													}
												],
												"src": "14:257:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1118:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:13:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "474:3:7",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "468:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "531:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "518:2:7"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:7"
															},
															"nodeType": "YulIf",
															"src": "486:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "557:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "583:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "570:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "561:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "627:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "602:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "652:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "666:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "676:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "670:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "702:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "691:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "743:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "785:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "795:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "811:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "826:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:7"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "815:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "892:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "867:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:17:7",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "919:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "989:6:7"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "997:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "964:3:7",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "949:19:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:41:7"
															},
															"nodeType": "YulIf",
															"src": "935:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1015:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1019:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1047:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:16:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1051:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1158:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1099:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1096:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1135:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1132:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1093:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:62:7"
															},
															"nodeType": "YulIf",
															"src": "1090:2:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1198:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:22:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1218:17:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1229:6:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1222:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1244:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:18:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1248:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1326:6:7"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1334:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1292:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1303:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1308:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1285:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:31:7"
															},
															"nodeType": "YulIf",
															"src": "1282:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1352:15:7",
															"value": {
																"name": "value3",
																"nodeType": "YulIdentifier",
																"src": "1361:6:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1356:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1423:118:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1444:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:7"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1449:12:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1449:17:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1437:30:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1437:30:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1480:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1496:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1487:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1480:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1512:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1523:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1528:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1519:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1519:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1512:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1387:1:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:4:7",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1384:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:11:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1396:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1398:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1407:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1403:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1403:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1398:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1380:3:7",
																"statements": []
															},
															"src": "1376:165:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:16:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1560:6:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:7",
														"type": ""
													}
												],
												"src": "276:1296:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1647:120:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1693:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1702:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1710:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1695:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1695:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1695:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1677:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1660:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:32:7"
															},
															"nodeType": "YulIf",
															"src": "1657:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1751:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1738:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1613:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1624:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1636:6:7",
														"type": ""
													}
												],
												"src": "1577:190:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1883:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1895:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1906:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1891:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1883:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1925:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1956:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1961:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1952:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1952:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1965:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1948:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1948:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1842:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1853:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1864:4:7",
														"type": ""
													}
												],
												"src": "1772:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2456:699:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2466:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2478:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:3:7",
																		"type": "",
																		"value": "416"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2466:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2509:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2524:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2540:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2545:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2536:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2536:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2549:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2532:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2532:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2573:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2584:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2593:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2609:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2614:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2605:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2605:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2618:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2601:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2601:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2589:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2589:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2562:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2653:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2678:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2683:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2674:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2674:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2687:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2670:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2670:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2631:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2631:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2711:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2722:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2727:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2700:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2765:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2771:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2743:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2743:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2798:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2809:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2794:19:7"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2815:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2787:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2853:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2838:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:19:7"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "2859:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2831:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2886:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2897:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2882:19:7"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "2903:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2875:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2930:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2941:3:7",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2926:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:19:7"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "2947:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2919:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2974:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2985:3:7",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2970:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2970:19:7"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "2991:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2963:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2963:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3029:3:7",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:19:7"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "3035:7:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3007:36:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3063:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3074:3:7",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:19:7"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "3080:7:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3052:36:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3108:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3119:3:7",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3104:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3104:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value12",
																						"nodeType": "YulIdentifier",
																						"src": "3139:7:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3132:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3132:15:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3125:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3125:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3097:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3097:52:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2326:9:7",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "2337:7:7",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "2346:7:7",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "2355:7:7",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "2364:6:7",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "2372:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2380:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2388:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2396:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2404:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2412:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2420:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2428:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2436:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2447:4:7",
														"type": ""
													}
												],
												"src": "1980:1175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3255:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3265:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3277:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3265:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3307:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3332:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3325:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3325:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3318:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3318:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3300:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3224:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3235:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3246:4:7",
														"type": ""
													}
												],
												"src": "3160:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3466:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3476:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3488:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3499:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3484:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3476:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3518:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3533:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3549:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3554:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3545:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3545:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3558:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3541:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3541:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3511:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3446:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3457:4:7",
														"type": ""
													}
												],
												"src": "3352:216:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3747:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3764:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3775:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3757:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3798:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3809:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3794:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3794:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3814:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3787:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3787:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3853:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3919:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3904:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3924:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3897:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3897:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3942:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3954:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3965:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3950:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3942:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3724:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3738:4:7",
														"type": ""
													}
												],
												"src": "3573:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4154:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4171:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4182:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4164:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4164:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4164:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4205:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4216:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4201:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4201:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4194:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4244:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4255:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4260:12:7",
																		"type": "",
																		"value": "NOT ACTIVE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4233:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4233:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4233:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4282:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4294:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4282:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4131:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4145:4:7",
														"type": ""
													}
												],
												"src": "3980:334:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4503:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4503:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4503:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4555:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4540:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4540:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4533:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4599:18:7",
																		"type": "",
																		"value": "Not enough value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4572:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4572:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4627:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4639:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4650:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4635:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4627:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4484:4:7",
														"type": ""
													}
												],
												"src": "4319:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4838:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4855:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4848:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4848:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4889:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4900:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4885:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4885:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4878:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4878:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4928:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4944:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4917:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5000:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4815:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4829:4:7",
														"type": ""
													}
												],
												"src": "4664:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5199:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5216:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5209:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5209:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5209:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5250:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5261:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5246:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5246:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5266:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5300:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5285:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5285:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5305:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5278:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5348:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5360:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5371:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5356:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5348:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5176:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5190:4:7",
														"type": ""
													}
												],
												"src": "5025:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5486:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5496:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5508:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5504:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5504:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5496:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5538:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5549:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5531:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5531:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5455:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5466:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5477:4:7",
														"type": ""
													}
												],
												"src": "5385:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5796:326:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5806:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5818:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5829:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5814:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5806:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5849:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5860:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5842:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5842:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5842:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5887:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5898:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5883:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5883:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5903:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5876:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5930:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5941:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5926:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5926:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5946:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5919:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5919:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5919:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5973:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5984:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5969:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5989:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5962:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6016:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6027:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6012:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6012:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "6047:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6040:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6040:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6033:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6005:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6005:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6005:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6076:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6087:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6072:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6072:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "6107:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6100:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6100:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6093:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6093:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6065:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5725:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5736:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5744:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5752:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5760:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5768:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5776:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5787:4:7",
														"type": ""
													}
												],
												"src": "5567:555:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6368:294:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6378:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6390:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6401:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6386:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6378:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6421:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6414:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6470:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6455:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6475:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6448:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6502:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6513:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6518:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6556:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6541:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6561:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6534:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6588:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6599:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6584:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6605:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6577:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:19:7"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6649:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6297:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6308:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6316:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6324:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6332:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6340:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6348:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6359:4:7",
														"type": ""
													}
												],
												"src": "6127:535:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6716:179:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6746:117:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "6767:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6777:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6782:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6773:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6773:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6760:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6760:34:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6760:34:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6814:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6817:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6807:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6807:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6807:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "6842:4:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6848:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6835:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6835:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6835:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6732:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6735:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6729:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:8:7"
															},
															"nodeType": "YulIf",
															"src": "6726:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6872:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6884:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6887:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6880:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6880:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6872:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6698:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6701:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6707:4:7",
														"type": ""
													}
												],
												"src": "6667:228:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6932:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6949:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6956:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6961:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6952:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6942:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6989:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6992:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6982:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7013:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7016:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7006:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7006:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7006:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6900:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7077:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7141:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7150:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7153:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7143:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7143:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7143:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7100:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7111:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7126:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7131:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7122:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7122:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7135:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7118:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7118:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7107:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7107:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7097:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7097:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:50:7"
															},
															"nodeType": "YulIf",
															"src": "7087:2:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7066:5:7",
														"type": ""
													}
												],
												"src": "7032:131:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _2 := 32\n        let value_1 := calldataload(add(headStart, _2))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        if gt(add(headStart, _1), dataEnd) { revert(value3, value3) }\n        let i := value3\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), iszero(iszero(value12)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"NOT ACTIVE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not enough value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063cad5b0f711610059578063cad5b0f7146103b4578063e2d3f423146103d9578063f2fde38b14610460578063f8b2cb4f1461048057600080fd5b80638da5cb5b146102525780638f1eae4c14610284578063acfb23551461033c578063ad5c46481461039457600080fd5b806356c5f349116100c657806356c5f349146101f5578063715018a6146102225780637964783314610237578063861faf5f1461024a57600080fd5b806318856a2f146100ed578063200d2ed2146101bd5780634329db46146101e0575b600080fd5b3480156100f957600080fd5b50600b54600c54600d54600e54600f546010546011546012546013546014546015546016546017546101459c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b3480156101c957600080fd5b506101d26104a8565b6040519081526020016101b4565b6101f36101ee366004610966565b6104d1565b005b34801561020157600080fd5b506101d2610210366004610882565b60036020526000908152604090205481565b34801561022e57600080fd5b506101f361050b565b6101f3610245366004610966565b610576565b6101f3610698565b34801561025e57600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016101b4565b34801561029057600080fd5b506101f361029f3660046108a5565b600b80546001600160a01b03199081166001600160a01b0396871617909155600c8054821694861694909417909355600d80549093169184169182179092558151600e556020820151600f5560408201516010556060820151601155608082015160125560a082015160135560c082015160145560e0820151601555610100909101516016556018546017805460ff191691909316909114179055565b34801561034857600080fd5b5060045460055460065460075460085460095461036795949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016101b4565b3480156103a057600080fd5b5060185461026c906001600160a01b031681565b3480156103c057600080fd5b506103c96106c7565b60405190151581526020016101b4565b3480156103e557600080fd5b5061042f6103f4366004610882565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c0016101b4565b34801561046c57600080fd5b506101f361047b366004610882565b6106d9565b34801561048c57600080fd5b506101d261049b366004610882565b6001600160a01b03163190565b600f546000904210156104bb5750600090565b6010544211156104cb5750600290565b50600190565b336108fc6104df833461097e565b6040518115909202916000818181858888f19350505050158015610507573d6000803e3d6000fd5b5050565b6001546001600160a01b0316331461056a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61057460006107bf565b565b600260005414156105c95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610561565b60026000556105d66104a8565b6001146106125760405162461bcd60e51b815260206004820152600a6024820152694e4f542041435449564560b01b6044820152606401610561565b33600090815260026020526040812060175490919060ff166106345782610636565b345b60135490915081906000908210156106835760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610561565b61068b6106c7565b5050506001600055505050565b60405133904780156108fc02916000818181858888f193505050501580156106c4573d6000803e3d6000fd5b50565b60006106d4601933610811565b905090565b6001546001600160a01b031633146107335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6001600160a01b0381166107985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610561565b6106c4816107bf565b60006107b6836001600160a01b038416610833565b90505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260018301602052604081205415156107b6565b600081815260018301602052604081205461087a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107b9565b5060006107b9565b600060208284031215610893578081fd5b813561089e816109b7565b9392505050565b6000806000806101808086880312156108bc578384fd5b85356108c7816109b7565b94506020868101356108d8816109b7565b945060408701356108e8816109b7565b9350607f870188136108f8578283fd5b604051610120810181811067ffffffffffffffff8211171561091c5761091c6109a1565b6040528060608901848a018b1015610932578586fd5b8594505b6009851015610955578035825260019490940193908301908301610936565b505080935050505092959194509250565b600060208284031215610977578081fd5b5035919050565b60008282101561099c57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146106c457600080fdfea26469706673582212206364bf8d8b867b2367133c1df181ebd19eb8049be77b01e1159c7ed2e5f4755264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCAD5B0F7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56C5F349 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x1E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH2 0x145 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x698 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH1 0xE SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x14 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x15 SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x16 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 SWAP2 EQ OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x367 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x26C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x4BB JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO PUSH2 0x4CB JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x4DF DUP4 CALLVALUE PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x574 PUSH1 0x0 PUSH2 0x7BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x5D6 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E4F5420414354495645 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x17 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x634 JUMPI DUP3 PUSH2 0x636 JUMP JUMPDEST CALLVALUE JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP3 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x6C7 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D4 PUSH1 0x19 CALLER PUSH2 0x811 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x833 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x87A JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7B9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x893 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x89E DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8BC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x8C7 DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x8D8 DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x8E8 DUP2 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x8F8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x91C JUMPI PUSH2 0x91C PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x932 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x955 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x936 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x977 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x99C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x64BF8D8B DUP7 PUSH28 0x2367133C1DF181EBD19EB8049BE77B01E1159C7ED2E5F4755264736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "306:3880:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1458:26;;;;;;;;;;-1:-1:-1;1458:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1458:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2520:32:7;;;2502:51;;2589:32;;;2584:2;2569:18;;2562:60;2658:32;;;;2638:18;;;2631:60;;;;2722:2;2707:18;;2700:34;;;;2765:3;2750:19;;2743:35;;;;2540:3;2794:19;;2787:35;;;;2853:3;2838:19;;2831:35;;;;2897:3;2882:19;;2875:35;2941:3;2926:19;;2919:35;2985:3;2970:19;;2963:35;3029:3;3014:19;;3007:36;3074:3;3059:19;;3052:36;3132:15;;3125:23;3119:3;3104:19;;3097:52;2489:3;2474:19;1458:26:1;;;;;;;;2842:337;;;;;;;;;;;;;:::i;:::-;;;5531:25:7;;;5519:2;5504:18;2842:337:1;5486:76:7;4062:121:1;;;;;;:::i;:::-;;:::i;:::-;;1368:42;;;;;;;;;;-1:-1:-1;1368:42:1;;;;;:::i;:::-;;;;;;;;;;;;;;1714:103:4;;;;;;;;;;;;;:::i;3306:510:1:-;;;;;;:::i;:::-;;:::i;3946:108::-;;;:::i;1063:87:4:-;;;;;;;;;;-1:-1:-1;1136:6:4;;-1:-1:-1;;;;;1136:6:4;1063:87;;;-1:-1:-1;;;;;1936:32:7;;;1918:51;;1906:2;1891:18;1063:87:4;1873:102:7;2043:790:1;;;;;;;;;;-1:-1:-1;2043:790:1;;;;;:::i;:::-;2226:9;:38;;-1:-1:-1;;;;;;2226:38:1;;;-1:-1:-1;;;;;2226:38:1;;;;;;;2275:19;:32;;;;;;;;;;;;;;2318:19;:32;;;;;;;;;;;;;;2384:8;;2361:20;:31;2384:8;2425;;;2403:19;:30;2464:8;;;;2444:17;:28;2510:8;;;;2483:24;:35;2556:8;;;;2529:24;:35;2604:8;;;;2575:26;:37;2652:8;;;;2623:26;:37;2693:8;;;;2671:19;:30;2733:8;;;;;2712:18;:29;2788:4;;2752:25;:73;;-1:-1:-1;;2752:73:1;2788:4;;;;2780:45;;;2752:73;;;2043:790;1417:34;;;;;;;;;;-1:-1:-1;1417:34:1;;;;;;;;;;;;;;;;;;;;;;;;;6414:25:7;;;6470:2;6455:18;;6448:34;;;;6498:18;;;6491:34;;;;6556:2;6541:18;;6534:34;6599:3;6584:19;;6577:35;6643:3;6628:19;;6621:35;6401:3;6386:19;1417:34:1;6368:294:7;1491:18:1;;;;;;;;;;-1:-1:-1;1491:18:1;;;;-1:-1:-1;;;;;1491:18:1;;;3188:110;;;;;;;;;;;;;:::i;:::-;;;3325:14:7;;3318:22;3300:41;;3288:2;3273:18;3188:110:1;3255:92:7;1315:46:1;;;;;;;;;;-1:-1:-1;1315:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5842:25:7;;;5898:2;5883:18;;5876:34;;;;5926:18;;;5919:34;;;;5984:2;5969:18;;5962:34;6040:14;6033:22;6027:3;6012:19;;6005:51;6100:14;6093:22;6087:3;6072:19;;6065:51;5829:3;5814:19;1315:46:1;5796:326:7;1972:201:4;;;;;;;;;;-1:-1:-1;1972:201:4;;;;;:::i;:::-;;:::i;3824:111:1:-;;;;;;;;;;-1:-1:-1;3824:111:1;;;;;:::i;:::-;-1:-1:-1;;;;;3911:16:1;;;3824:111;2842:337;2921:19;;2880:7;;2903:15;:37;2900:272;;;-1:-1:-1;2964:1:1;;2842:337::o;2900:272::-;3031:17;;3013:15;:35;3010:151;;;-1:-1:-1;3076:1:1;;2842:337::o;3010:151::-;-1:-1:-1;3134:1:1;;2842:337::o;4062:121::-;4135:10;4127:48;4156:18;4168:6;4156:9;:18;:::i;:::-;4127:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4062:121;:::o;1714:103:4:-;1136:6;;-1:-1:-1;;;;;1136:6:4;736:10:2;1283:23:4;1275:68;;;;-1:-1:-1;;;1275:68:4;;4866:2:7;1275:68:4;;;4848:21:7;;;4885:18;;;4878:30;4944:34;4924:18;;;4917:62;4996:18;;1275:68:4;;;;;;;;;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;3306:510:1:-;1778:1:5;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:5;;5227:2:7;2368:63:5;;;5209:21:7;5266:2;5246:18;;;5239:30;5305:33;5285:18;;;5278:61;5356:18;;2368:63:5;5199:181:7;2368:63:5;1778:1;2509:7;:18;3389:8:1::1;:6;:8::i;:::-;3401:1;3389:13;3381:36;;;::::0;-1:-1:-1;;;3381:36:1;;4182:2:7;3381:36:1::1;::::0;::::1;4164:21:7::0;4221:2;4201:18;;;4194:30;-1:-1:-1;;;4240:18:7;;;4233:40;4290:18;;3381:36:1::1;4154:160:7::0;3381:36:1::1;3474:10;3438:23;3464:21:::0;;;:9:::1;:21;::::0;;;;3516:25;;3464:21;;3438:23;3516:25:::1;;:47;;3556:7;3516:47;;;3544:9;3516:47;3671:26:::0;;3496:67;;-1:-1:-1;3496:67:1;;3574:22:::1;::::0;3653:44;::::1;;3645:101;;;::::0;-1:-1:-1;;;3645:101:1;;4521:2:7;3645:101:1::1;::::0;::::1;4503:21:7::0;4560:2;4540:18;;;4533:30;-1:-1:-1;;;4579:18:7;;;4572:46;4635:18;;3645:101:1::1;4493:166:7::0;3645:101:1::1;3760:19;:17;:19::i;:::-;3757:50:::0;-1:-1:-1;;1734:1:5;2688:7;:22;-1:-1:-1;;;3306:510:1:o;3946:108::-;3995:51;;4003:10;;4024:21;3995:51;;;;;;;;;4024:21;4003:10;3995:51;;;;;;;;;;;;;;;;;;;;;3946:108::o;3188:110::-;3237:4;3261:29;:6;736:10:2;3261:15:1;:29::i;:::-;3254:36;;3188:110;:::o;1972:201:4:-;1136:6;;-1:-1:-1;;;;;1136:6:4;736:10:2;1283:23:4;1275:68;;;;-1:-1:-1;;;1275:68:4;;4866:2:7;1275:68:4;;;4848:21:7;;;4885:18;;;4878:30;4944:34;4924:18;;;4917:62;4996:18;;1275:68:4;4838:182:7;1275:68:4;-1:-1:-1;;;;;2061:22:4;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:4;;3775:2:7;2053:73:4::1;::::0;::::1;3757:21:7::0;3814:2;3794:18;;;3787:30;3853:34;3833:18;;;3826:62;-1:-1:-1;;;3904:18:7;;;3897:36;3950:19;;2053:73:4::1;3747:228:7::0;2053:73:4::1;2137:28;2156:8;2137:18;:28::i;8259:152:3:-:0;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:3;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2333:191:4:-;2426:6;;;-1:-1:-1;;;;;2443:17:4;;;-1:-1:-1;;;;;;2443:17:4;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2333:191;;:::o;8831:167:3:-;-1:-1:-1;;;;;8965:23:3;;8911:4;4367:19;;;:12;;;:19;;;;;;:24;;8935:55;4270:129;2174:414;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:3;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:3;2557:12;;14:257:7;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:7:o;276:1296::-;419:6;427;435;443;474:3;518:2;506:9;497:7;493:23;489:32;486:2;;;539:6;531;524:22;486:2;583:9;570:23;602:31;627:5;602:31;:::i;:::-;652:5;-1:-1:-1;676:2:7;715:18;;;702:32;743:33;702:32;743:33;:::i;:::-;795:7;-1:-1:-1;854:2:7;839:18;;826:32;867:33;826:32;867:33;:::i;:::-;919:7;-1:-1:-1;964:3:7;949:19;;945:33;-1:-1:-1;935:2:7;;997:6;989;982:22;935:2;1035;1029:9;1077:3;1069:6;1065:16;1147:6;1135:10;1132:22;1111:18;1099:10;1096:34;1093:62;1090:2;;;1158:18;;:::i;:::-;1194:2;1187:22;1229:6;1270:2;1255:18;;1288;;;1285:31;-1:-1:-1;1282:2:7;;;1334:6;1326;1319:22;1282:2;1361:6;1352:15;;1376:165;1390:4;1387:1;1384:11;1376:165;;;1449:17;;1437:30;;1410:1;1403:9;;;;;1487:12;;;;1519;;1376:165;;;1380:3;;1560:6;1550:16;;;;;454:1118;;;;;;;:::o;1577:190::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;-1:-1:-1;1738:23:7;;1647:120;-1:-1:-1;1647:120:7:o;6667:228::-;6707:4;6735:1;6732;6729:8;6726:2;;;-1:-1:-1;;;6760:34:7;;6817:4;6814:1;6807:15;6848:4;6767;6835:18;6726:2;-1:-1:-1;6880:9:7;;6716:179::o;6900:127::-;6961:10;6956:3;6952:20;6949:1;6942:31;6992:4;6989:1;6982:15;7016:4;7013:1;7006:15;7032:131;-1:-1:-1;;;;;7107:31:7;;7097:42;;7087:2;;7153:1;7150;7143:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "512400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "1126",
								"backToken()": "infinite",
								"buyerInfo(address)": "4660",
								"checkAdminAddress()": "1199",
								"depodit(uint256)": "30579",
								"getBalance(address)": "1150",
								"initialSaleInfor(address,address,address,uint256[9])": "infinite",
								"owner()": "1043",
								"presaleStatus()": "5191",
								"renounceOwnership()": "23462",
								"saleInfor()": "11001",
								"status()": "1911",
								"transferETH(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"userFee(address)": "1236"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1838,
									"end": 1842,
									"name": "PUSH",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1894,
									"name": "PUSH",
									"source": 1,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1895,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1908,
									"end": 1914,
									"name": "PUSH",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1919,
									"end": 1961,
									"name": "PUSH",
									"source": 1,
									"value": "6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED"
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551704"
								},
								{
									"begin": 1908,
									"end": 1918,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1984,
									"end": 2026,
									"name": "PUSH",
									"source": 1,
									"value": "4F0B12BBF40FC182559822A5B1DB6D34DBC3E016"
								},
								{
									"begin": 1973,
									"end": 1979,
									"name": "PUSH",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551704"
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 1983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2027,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8329,
									"end": 8333,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 8358,
									"end": 8361,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 8353,
									"end": 8357,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2237,
									"end": 2241,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2308,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2564,
									"end": 2569,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 4186,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206364bf8d8b867b2367133c1df181ebd19eb8049be77b01e1159c7ed2e5f4755264736f6c63430008040033",
									".code": [
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "CAD5B0F7"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "CAD5B0F7"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "E2D3F423"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "8F1EAE4C"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "ACFB2355"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "AD5C4648"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "56C5F349"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "56C5F349"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "79647833"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "18856A2F"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "200D2ED2"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "4329DB46"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 4186,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "SWAP15",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2691,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2691,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2725,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2543,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2822,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2822,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 2838,
											"end": 2857,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2900,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2882,
											"end": 2901,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 2944,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2954,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 2988,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2970,
											"end": 2989,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3088,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3147,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "1A0"
										},
										{
											"begin": 2474,
											"end": 2493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5531,
											"end": 5556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5531,
											"end": 5556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5521,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5486,
											"end": 5562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1410,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1873,
											"end": 1975,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2264,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2350,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2361,
											"end": 2392,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2425,
											"end": 2433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2403,
											"end": 2433,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2461,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2444,
											"end": 2472,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2483,
											"end": 2518,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2529,
											"end": 2564,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2575,
											"end": 2612,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2660,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2652,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2649,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2623,
											"end": 2660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2701,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2693,
											"end": 2701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2730,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2777,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2752,
											"end": 2825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2825,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2752,
											"end": 2825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2825,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2825,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2825,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2833,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6482,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6482,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6599,
											"end": 6602,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6584,
											"end": 6603,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6628,
											"end": 6647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6621,
											"end": 6656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6404,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 6386,
											"end": 6405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6368,
											"end": 6662,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3340,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3255,
											"end": 3347,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5867,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5867,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5953,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5953,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5962,
											"end": 5996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6055,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6030,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6114,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6087,
											"end": 6090,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5832,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5796,
											"end": 6122,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3911,
											"end": 3927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3927,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3935,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2921,
											"end": 2940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2918,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 3172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2900,
											"end": 3172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2900,
											"end": 3172,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2900,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3031,
											"end": 3048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3010,
											"end": 3161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3010,
											"end": 3161,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3010,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 4978,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4924,
											"end": 4942,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4924,
											"end": 4942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4979,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5268,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5246,
											"end": 5264,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5246,
											"end": 5264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5269,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5305,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5199,
											"end": 5380,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3389,
											"end": 3397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3389,
											"end": 3397,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3389,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3389,
											"end": 3402,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E4F5420414354495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4154,
											"end": 4314,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3381,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3516,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3697,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3671,
											"end": 3697,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3697,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F7567682076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4572,
											"end": 4618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4493,
											"end": 4659,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3645,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3760,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3760,
											"end": 3779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3760,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3816,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 4978,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4924,
											"end": 4942,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4924,
											"end": 4942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4979,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4838,
											"end": 5020,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3816,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3794,
											"end": 3812,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3794,
											"end": 3812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3887,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3888,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3969,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3950,
											"end": 3969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3747,
											"end": 3975,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8935,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4270,
											"end": 4399,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 84,
											"end": 271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 271,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 486,
											"end": 488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 524,
											"end": 546,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 486,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 583,
											"end": 592,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 570,
											"end": 593,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 715,
											"end": 733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 702,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 802,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 856,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 826,
											"end": 858,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 826,
											"end": 858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 967,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 949,
											"end": 968,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 949,
											"end": 968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 945,
											"end": 978,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 935,
											"end": 937,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1129,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1130,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1093,
											"end": 1155,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1316,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1692,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1717,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6667,
											"end": 6895,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6667,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6729,
											"end": 6737,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6852,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6895,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6900,
											"end": 7027,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 6900,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6961,
											"end": 6971,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6956,
											"end": 6959,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6952,
											"end": 6972,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6949,
											"end": 6950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6942,
											"end": 6973,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 6996,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6989,
											"end": 6990,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6982,
											"end": 6997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7020,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7163,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7032,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7138,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7139,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7087,
											"end": 7089,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7155,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"checkAdminAddress()": "cad5b0f7",
							"depodit(uint256)": "79647833",
							"getBalance(address)": "f8b2cb4f",
							"initialSaleInfor(address,address,address,uint256[9])": "8f1eae4c",
							"owner()": "8da5cb5b",
							"presaleStatus()": "acfb2355",
							"renounceOwnership()": "715018a6",
							"saleInfor()": "18856a2f",
							"status()": "200d2ed2",
							"transferETH(uint256)": "4329db46",
							"transferOwnership(address)": "f2fde38b",
							"userFee(address)": "56c5f349"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRefund\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAdminAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numByer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueSwapToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"saleIsBaseToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0xa83ff7ab4a280db7fd5277add135b603f61752def0d07ba99b947b6b16bf22df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eec09981d1c516a49dc041245cb5a1ec963cf1a9c4dafe35d7c9cffe8915d5c\",\"dweb:/ipfs/QmUEyH3jErazoAvfezjh5uhCZtWEYWcjU6qp7TAim79bAw\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1217,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1109,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 155,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)134_storage)"
							},
							{
								"astId": 159,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 162,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(PresaleStatus)150_storage"
							},
							{
								"astId": 165,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "11",
								"type": "t_struct(SaleInfor)121_storage"
							},
							{
								"astId": 168,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "24",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 171,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "admins",
								"offset": 0,
								"slot": "25",
								"type": "t_struct(AddressSet)814_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)134_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)134_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)814_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 813,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)513_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(BuyerInfo)134_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 123,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 125,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 127,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 129,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 131,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isRefund",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 133,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isClaim",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PresaleStatus)150_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 136,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 138,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numByer",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 146,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 149,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "admin",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(SaleInfor)121_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 94,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 97,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 100,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 102,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "valueSwapToken",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "feeTransaction",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 112,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 114,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 116,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 118,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 120,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleIsBaseToken",
										"offset": 0,
										"slot": "12",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(Set)513_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 508,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 512,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 EXTCODECOPY 0x49 JUMPDEST 0xBC 0xB9 JUMPDEST 0x26 CALLDATACOPY MSIZE ORIGIN PUSH5 0x1AEBC5C4C0 0xC1 DUP5 0xB4 PUSH10 0x1D7201B38F69C15214BD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1265:11783:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1265:11783:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 EXTCODECOPY 0x49 JUMPDEST 0xBC 0xB9 JUMPDEST 0x26 CALLDATACOPY MSIZE ORIGIN PUSH5 0x1AEBC5C4C0 0xC1 DUP5 0xB4 PUSH10 0x1D7201B38F69C15214BD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1265:11783:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
									".code": [
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1109,
								"contract": "Utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1217,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1892:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Ethereum/Presale.sol:115:9:\n    |\n115 |         BuyerInfo storage buyer = buyerInfo[msg.sender];\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3461,
					"file": "Ethereum/Presale.sol",
					"start": 3438
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Ethereum/Presale.sol:118:9:\n    |\n118 |         uint256 fee = 0;\n    |         ^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3630,
					"file": "Ethereum/Presale.sol",
					"start": 3619
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0",
							"usedErrors": []
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"Context": [
							502
						],
						"EnumerableSet": [
							1101
						],
						"IERC20": [
							77
						],
						"Ownable": [
							1206
						],
						"Presale": [
							480
						],
						"ReentrancyGuard": [
							1246
						],
						"TransferHelper": [
							1395
						]
					},
					"id": 481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 481,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 481,
							"sourceUnit": 1247,
							"src": "151:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 481,
							"sourceUnit": 1396,
							"src": "191:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 481,
							"sourceUnit": 1102,
							"src": "230:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 481,
							"sourceUnit": 1207,
							"src": "268:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 85,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1246,
										"src": "326:15:1"
									},
									"id": 86,
									"nodeType": "InheritanceSpecifier",
									"src": "326:15:1"
								},
								{
									"baseName": {
										"id": 87,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1206,
										"src": "343:7:1"
									},
									"id": 88,
									"nodeType": "InheritanceSpecifier",
									"src": "343:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 480,
							"linearizedBaseContracts": [
								480,
								1206,
								502,
								1246
							],
							"name": "Presale",
							"nameLocation": "315:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 92,
									"libraryName": {
										"id": 89,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1101,
										"src": "363:13:1"
									},
									"nodeType": "UsingForDirective",
									"src": "357:49:1",
									"typeName": {
										"id": 91,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 90,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 814,
											"src": "381:24:1"
										},
										"referencedDeclaration": 814,
										"src": "381:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 121,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "458:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "442:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 93,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "442:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "488:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "481:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 96,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 95,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "481:6:1"
												},
												"referencedDeclaration": 77,
												"src": "481:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "515:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "508:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 99,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 98,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "508:6:1"
												},
												"referencedDeclaration": 77,
												"src": "508:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "543:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "535:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "535:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "572:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "564:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "564:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "600:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "592:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "592:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "valueSwapToken",
											"nameLocation": "626:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "618:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "feeTransaction",
											"nameLocation": "659:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "651:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "651:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "692:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "684:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "684:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "727:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "719:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 113,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "719:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "762:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "754:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 115,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "754:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "790:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "782:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 117,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "782:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 120,
											"mutability": "mutable",
											"name": "saleIsBaseToken",
											"nameLocation": "814:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "809:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 119,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "809:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "421:9:1",
									"nodeType": "StructDefinition",
									"scope": 480,
									"src": "414:423:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 134,
									"members": [
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "881:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 134,
											"src": "873:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 125,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "911:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 134,
											"src": "903:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "903:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 127,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "940:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 134,
											"src": "932:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 126,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "932:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 129,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "971:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 134,
											"src": "963:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "963:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 131,
											"mutability": "mutable",
											"name": "isRefund",
											"nameLocation": "1005:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 134,
											"src": "1000:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 130,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1000:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 133,
											"mutability": "mutable",
											"name": "isClaim",
											"nameLocation": "1029:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 134,
											"src": "1024:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 132,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1024:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "852:9:1",
									"nodeType": "StructDefinition",
									"scope": 480,
									"src": "845:199:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 150,
									"members": [
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "1092:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1084:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1084:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "1129:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1121:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1121:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1162:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1154:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 139,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1154:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1199:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1191:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 141,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1191:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "numByer",
											"nameLocation": "1235:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1227:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1227:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "totalFee",
											"nameLocation": "1261:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1253:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1253:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 149,
											"mutability": "mutable",
											"name": "admin",
											"nameLocation": "1290:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "1280:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 148,
												"nodeType": "ArrayTypeName",
												"src": "1280:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "1059:13:1",
									"nodeType": "StructDefinition",
									"scope": 480,
									"src": "1052:251:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 155,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1352:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 480,
									"src": "1315:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$134_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 154,
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1323:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1315:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$134_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 153,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 152,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "1334:9:1"
											},
											"referencedDeclaration": 134,
											"src": "1334:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$134_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 159,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1403:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 480,
									"src": "1368:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1376:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1368:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1387:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 162,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1438:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 480,
									"src": "1417:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$150_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 161,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 160,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 150,
											"src": "1417:13:1"
										},
										"referencedDeclaration": 150,
										"src": "1417:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$150_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 165,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1475:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 480,
									"src": "1458:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 121,
											"src": "1458:9:1"
										},
										"referencedDeclaration": 121,
										"src": "1458:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$121_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 168,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1505:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 480,
									"src": "1491:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 167,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 166,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1491:6:1"
										},
										"referencedDeclaration": 77,
										"src": "1491:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1549:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 480,
									"src": "1516:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$814_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 170,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 169,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 814,
											"src": "1516:24:1"
										},
										"referencedDeclaration": 814,
										"src": "1516:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1586:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 176,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "1621:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1621:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 174,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "1605:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$814_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 895,
																"src": "1605:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$814_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$814_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1605:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061646d696e",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															},
															"value": "Not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1597:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1597:51:1"
											},
											{
												"id": 182,
												"nodeType": "PlaceholderStatement",
												"src": "1659:1:1"
											}
										]
									},
									"id": 184,
									"name": "onlyAdmin",
									"nameLocation": "1574:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1583:2:1"
									},
									"src": "1565:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1701:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "1720:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 189,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1736:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "presaleOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 94,
																"src": "1736:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1720:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742073616c65206f776e6572",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1760:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															},
															"value": "Not sale owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1712:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "1712:65:1"
											},
											{
												"id": 195,
												"nodeType": "PlaceholderStatement",
												"src": "1788:1:1"
											}
										]
									},
									"id": 197,
									"name": "onlySaleOwner",
									"nameLocation": "1685:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1698:2:1"
									},
									"src": "1676:121:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1827:208:1",
										"statements": [
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 200,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1838:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1852:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 201,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1838:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1838:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836436362343165656441356130373330373646334537644331363134433138356235664134316544",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1919:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 206,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1908:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$814_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "1908:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$814_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$814_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1908:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1908:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307834663042313262424634304663313832353539383232413562316442364433346462433345303136",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1984:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 212,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1973:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$814_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "1973:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$814_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$814_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1973:54:1"
											}
										]
									},
									"id": 219,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:1"
									},
									"scope": 480,
									"src": "1805:230:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "2215:618:1",
										"statements": [
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 234,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2226:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "2226:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 237,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "2251:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2226:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "2226:38:1"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 240,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2275:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "2275:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 243,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2297:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "2275:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2275:32:1"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 246,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2318:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "2318:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "2340:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "2318:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2318:32:1"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 252,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2361:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2361:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 255,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2384:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 257,
														"indexExpression": {
															"hexValue": "30",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2384:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2361:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2361:31:1"
											},
											{
												"expression": {
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 260,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2403:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2403:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 263,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2425:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 265,
														"indexExpression": {
															"hexValue": "31",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2425:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2403:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "2403:30:1"
											},
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 268,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2444:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2444:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 271,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2464:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 273,
														"indexExpression": {
															"hexValue": "32",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2470:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2464:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2444:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2444:28:1"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 276,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2483:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "valueSwapToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "2483:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 279,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2510:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 281,
														"indexExpression": {
															"hexValue": "33",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2516:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2510:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2483:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2483:35:1"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 284,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2529:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2529:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 287,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2556:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 289,
														"indexExpression": {
															"hexValue": "34",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2562:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2556:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2529:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2529:35:1"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 292,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2575:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "2575:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 295,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2604:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 297,
														"indexExpression": {
															"hexValue": "35",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2610:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2604:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2575:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "2575:37:1"
											},
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 300,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2623:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "2623:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 303,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2652:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 305,
														"indexExpression": {
															"hexValue": "36",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2658:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2652:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2623:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2623:37:1"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 308,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2671:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "2671:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 311,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2693:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 313,
														"indexExpression": {
															"hexValue": "37",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2699:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2693:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2671:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "2671:30:1"
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 316,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2712:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "2712:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 319,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 321,
														"indexExpression": {
															"hexValue": "38",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2733:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2712:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2712:29:1"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 324,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2752:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 120,
														"src": "2752:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 329,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "2788:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2780:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2780:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2780:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 333,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "2805:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "baseToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "2805:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2797:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 331,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2797:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2797:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2780:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2752:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2752:73:1"
											}
										]
									},
									"functionSelector": "8f1eae4c",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "2052:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "2095:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2079:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2079:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "2126:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2119:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 222,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2119:6:1"
													},
													"referencedDeclaration": 77,
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "2154:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2147:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 225,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2147:6:1"
													},
													"referencedDeclaration": 77,
													"src": "2147:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "2193:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2175:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 228,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2175:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"length": {
														"hexValue": "39",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2183:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "2175:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:137:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2215:0:1"
									},
									"scope": 480,
									"src": "2043:790:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "2889:290:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 345,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2903:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2903:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 347,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2921:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2921:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2903:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 365,
													"nodeType": "Block",
													"src": "2995:177:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 353,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3013:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 355,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "3031:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 106,
																	"src": "3031:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3013:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 363,
																"nodeType": "Block",
																"src": "3108:53:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3134:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 344,
																		"id": 362,
																		"nodeType": "Return",
																		"src": "3127:8:1"
																	}
																]
															},
															"id": 364,
															"nodeType": "IfStatement",
															"src": "3010:151:1",
															"trueBody": {
																"id": 360,
																"nodeType": "Block",
																"src": "3050:54:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3076:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 344,
																		"id": 359,
																		"nodeType": "Return",
																		"src": "3069:8:1"
																	}
																]
															}
														}
													]
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "2900:272:1",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "2942:49:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 344,
															"id": 351,
															"nodeType": "Return",
															"src": "2957:8:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "2851:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2857:2:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2880:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:9:1"
									},
									"scope": 480,
									"src": "2842:337:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "3243:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 375,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "3277:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3277:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 373,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "3261:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$814_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 895,
														"src": "3261:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$814_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$814_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3261:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 372,
												"id": 378,
												"nodeType": "Return",
												"src": "3254:36:1"
											}
										]
									},
									"functionSelector": "cad5b0f7",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAdminAddress",
									"nameLocation": "3197:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3214:2:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "3237:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3237:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:6:1"
									},
									"scope": 480,
									"src": "3188:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "3370:446:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 388,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "3389:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3389:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3401:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3389:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f5420414354495645",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3404:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd",
																"typeString": "literal_string \"NOT ACTIVE\""
															},
															"value": "NOT ACTIVE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d6d122126ec0f9651beafbd0f488ecfebdba58f580ffa0510b0c9420d00f3cd",
																"typeString": "literal_string \"NOT ACTIVE\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3381:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3381:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "3381:36:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "3456:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "3438:23:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$134_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 396,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 395,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 134,
																"src": "3438:9:1"
															},
															"referencedDeclaration": 134,
															"src": "3438:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$134_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"baseExpression": {
														"id": 398,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "3464:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$134_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 401,
													"indexExpression": {
														"expression": {
															"id": 399,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3474:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3474:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3464:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$134_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3438:47:1"
											},
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "amount_in",
														"nameLocation": "3504:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "3496:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3496:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"condition": {
														"expression": {
															"id": 405,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3516:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 120,
														"src": "3516:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 409,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "3556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3516:47:1",
													"trueExpression": {
														"expression": {
															"id": 407,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3544:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3544:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3496:67:1"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "real_amount_in",
														"nameLocation": "3582:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "3574:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"id": 414,
													"name": "amount_in",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 404,
													"src": "3599:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3574:34:1"
											},
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3627:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "3619:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3619:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"hexValue": "30",
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3633:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3619:15:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 421,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "3653:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 422,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "3671:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$121_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "minSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 112,
																"src": "3671:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3653:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682076616c7565",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3717:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															},
															"value": "Not enough value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3645:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "3645:101:1"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "checkAdminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3760:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "3757:50:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "3781:26:1",
													"statements": []
												}
											}
										]
									},
									"functionSelector": "79647833",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 384,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1245,
												"src": "3357:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3357:12:1"
										}
									],
									"name": "depodit",
									"nameLocation": "3315:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3331:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3323:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:17:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:1"
									},
									"scope": 480,
									"src": "3306:510:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "3893:42:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 440,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "3911:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3911:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 442,
												"nodeType": "Return",
												"src": "3904:23:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3833:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3852:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "3844:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3843:18:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "3884:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3884:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3883:9:1"
									},
									"scope": 480,
									"src": "3824:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "3984:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4032:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$480",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$480",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4024:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4024:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4024:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4024:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 449,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4003:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4003:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3995:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 447,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3995:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3995:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3995:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3995:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "3995:51:1"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "3955:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3964:2:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3984:0:1"
									},
									"scope": 480,
									"src": "3946:108:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "4116:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 472,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4156:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4156:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 474,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "4168:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4156:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 468,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4135:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4135:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4127:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4127:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4127:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4127:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4127:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "4127:48:1"
											}
										]
									},
									"functionSelector": "4329db46",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferETH",
									"nameLocation": "4071:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4091:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "4083:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:16:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 480,
									"src": "4062:121:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 481,
							"src": "306:3880:1",
							"usedErrors": []
						}
					],
					"src": "93:4093:1"
				},
				"id": 1
			},
			"Utils/Context.sol": {
				"ast": {
					"absolutePath": "Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							502
						]
					},
					"id": 503,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 482,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 483,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "Context",
							"nameLocation": "641:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "718:36:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 488,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 487,
												"id": 490,
												"nodeType": "Return",
												"src": "729:17:2"
											}
										]
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 502,
									"src": "656:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "829:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 497,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 496,
												"id": 499,
												"nodeType": "Return",
												"src": "840:15:2"
											}
										]
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "813:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:2"
									},
									"scope": 502,
									"src": "762:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 503,
							"src": "623:243:2",
							"usedErrors": []
						}
					],
					"src": "89:779:2"
				},
				"id": 2
			},
			"Utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 504,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 505,
								"nodeType": "StructuredDocumentation",
								"src": "145:1118:3",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1101,
							"linearizedBaseContracts": [
								1101
							],
							"name": "EnumerableSet",
							"nameLocation": "1273:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 513,
									"members": [
										{
											"constant": false,
											"id": 508,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1809:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 513,
											"src": "1799:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 507,
												"nodeType": "ArrayTypeName",
												"src": "1799:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 512,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1980:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 513,
											"src": "1952:36:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 511,
												"keyType": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1952:27:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1750:3:3",
									"nodeType": "StructDefinition",
									"scope": 1101,
									"src": "1743:253:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "2243:345:3",
										"statements": [
											{
												"condition": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2258:22:3",
													"subExpression": {
														"arguments": [
															{
																"id": 525,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "2269:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 526,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "2274:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 524,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2259:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "2542:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 523,
															"id": 551,
															"nodeType": "Return",
															"src": "2557:12:3"
														}
													]
												},
												"id": 553,
												"nodeType": "IfStatement",
												"src": "2254:327:3",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "2282:254:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 534,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2314:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 529,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "2297:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "2297:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2297:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "ExpressionStatement",
															"src": "2297:23:3"
														},
														{
															"expression": {
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 537,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "2458:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 512,
																		"src": "2458:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 541,
																	"indexExpression": {
																		"id": 539,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2471:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2458:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 542,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "2480:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "2480:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2480:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 546,
															"nodeType": "ExpressionStatement",
															"src": "2458:40:3"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 523,
															"id": 548,
															"nodeType": "Return",
															"src": "2513:11:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2004:164:3",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2183:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2200:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2188:15:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 515,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 513,
														"src": "2188:3:3"
													},
													"referencedDeclaration": 513,
													"src": "2188:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2213:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2205:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 518,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:3"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2237:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2237:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:6:3"
									},
									"scope": 1101,
									"src": "2174:414:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "2836:1348:3",
										"statements": [
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2956:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "2948:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2948:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 568,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2969:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "2969:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 571,
													"indexExpression": {
														"id": 570,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "2982:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:40:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "3005:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3019:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3005:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 636,
													"nodeType": "Block",
													"src": "4138:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4160:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 565,
															"id": 635,
															"nodeType": "Return",
															"src": "4153:12:3"
														}
													]
												},
												"id": 637,
												"nodeType": "IfStatement",
												"src": "3001:1176:3",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "3022:1110:3",
													"statements": [
														{
															"assignments": [
																577
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 577,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3388:13:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "3380:21:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 576,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3380:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 578,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3404:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3404:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3380:38:3"
														},
														{
															"assignments": [
																583
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 583,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3441:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "3433:17:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 582,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3433:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 589,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 584,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 559,
																			"src": "3453:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "3453:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3453:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3453:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3433:42:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 590,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "3496:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 591,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "3509:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3496:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 617,
															"nodeType": "IfStatement",
															"src": "3492:405:3",
															"trueBody": {
																"id": 616,
																"nodeType": "Block",
																"src": "3524:373:3",
																"statements": [
																	{
																		"assignments": [
																			594
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 594,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 616,
																				"src": "3543:17:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 593,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 599,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 595,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 559,
																					"src": "3563:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 596,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 508,
																				"src": "3563:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 598,
																			"indexExpression": {
																				"id": 597,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "3575:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:3"
																	},
																	{
																		"expression": {
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 600,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 559,
																						"src": "3688:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 603,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 508,
																					"src": "3688:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 604,
																				"indexExpression": {
																					"id": 602,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "3700:13:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 605,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "3717:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3688:38:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 607,
																		"nodeType": "ExpressionStatement",
																		"src": "3688:38:3"
																	},
																	{
																		"expression": {
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 608,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 559,
																						"src": "3802:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 611,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 512,
																					"src": "3802:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 612,
																				"indexExpression": {
																					"id": 610,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "3815:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3802:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 613,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "3828:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3802:36:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 615,
																		"nodeType": "ExpressionStatement",
																		"src": "3802:36:3"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 618,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 559,
																			"src": "3978:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 508,
																		"src": "3978:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3978:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "3978:17:3"
														},
														{
															"expression": {
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4066:26:3",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 625,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 559,
																			"src": "4073:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 512,
																		"src": "4073:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"id": 627,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "4086:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4073:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "4066:26:3"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4116:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 565,
															"id": 632,
															"nodeType": "Return",
															"src": "4109:11:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2596:162:3",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2773:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2793:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "2781:15:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 557,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 513,
														"src": "2781:3:3"
													},
													"referencedDeclaration": 513,
													"src": "2781:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "2798:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 560,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:32:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "2830:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:3"
									},
									"scope": 1101,
									"src": "2764:1420:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "4349:50:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 650,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "4367:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 512,
															"src": "4367:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "4380:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4367:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4390:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4367:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 649,
												"id": 656,
												"nodeType": "Return",
												"src": "4360:31:3"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:3",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4279:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4301:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4289:15:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 642,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 641,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 513,
														"src": "4289:3:3"
													},
													"referencedDeclaration": 513,
													"src": "4289:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4343:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:6:3"
									},
									"scope": 1101,
									"src": "4270:129:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "4550:44:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 667,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4568:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "4568:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4568:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 666,
												"id": 670,
												"nodeType": "Return",
												"src": "4561:25:3"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "4407:72:3",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4494:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4514:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4502:15:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 661,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 660,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 513,
														"src": "4502:3:3"
													},
													"referencedDeclaration": 513,
													"src": "4502:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:17:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4541:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:9:3"
									},
									"scope": 1101,
									"src": "4485:109:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "5024:44:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 683,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5042:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "5042:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 686,
													"indexExpression": {
														"id": 685,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "5054:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5042:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 682,
												"id": 687,
												"nodeType": "Return",
												"src": "5035:25:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "4602:340:3",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4957:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4973:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4961:15:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 674,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 513,
														"src": "4961:3:3"
													},
													"referencedDeclaration": 513,
													"src": "4961:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4986:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4978:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:32:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5015:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 680,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:3"
									},
									"scope": 1101,
									"src": "4948:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "5692:37:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 699,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "5710:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 508,
													"src": "5710:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 698,
												"id": 701,
												"nodeType": "Return",
												"src": "5703:18:3"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "5076:536:3",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5627:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5647:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5635:15:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 691,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 513,
														"src": "5635:3:3"
													},
													"referencedDeclaration": 513,
													"src": "5635:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:17:3"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5674:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 695,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 696,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:18:3"
									},
									"scope": 1101,
									"src": "5618:111:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 707,
									"members": [
										{
											"constant": false,
											"id": 706,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5791:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "5787:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 705,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 704,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 513,
													"src": "5787:3:3"
												},
												"referencedDeclaration": 513,
												"src": "5787:3:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5765:10:3",
									"nodeType": "StructDefinition",
									"scope": 1101,
									"src": "5758:47:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "6059:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 719,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "6082:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "6082:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 721,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6094:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 718,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "6077:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 723,
												"nodeType": "Return",
												"src": "6070:30:3"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5813:164:3",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5992:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6015:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5996:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "5996:10:3"
													},
													"referencedDeclaration": 707,
													"src": "5996:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6028:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6020:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:39:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6053:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:3"
									},
									"scope": 1101,
									"src": "5983:125:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "6363:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 737,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "6389:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "6389:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 739,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6401:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 736,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "6381:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 735,
												"id": 741,
												"nodeType": "Return",
												"src": "6374:33:3"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "6116:162:3",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6293:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6319:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6300:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 727,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "6300:10:3"
													},
													"referencedDeclaration": 707,
													"src": "6300:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6324:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:39:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6357:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6357:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:6:3"
									},
									"scope": 1101,
									"src": "6284:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "6587:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 755,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "6615:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "6615:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 757,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "6627:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 754,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "6605:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 753,
												"id": 759,
												"nodeType": "Return",
												"src": "6598:35:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "6423:72:3",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6510:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6538:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6519:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 745,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "6519:10:3"
													},
													"referencedDeclaration": 707,
													"src": "6519:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6551:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6543:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:39:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6581:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:6:3"
									},
									"scope": 1101,
									"src": "6501:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "6799:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 771,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "6825:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "6825:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 770,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "6817:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 769,
												"id": 774,
												"nodeType": "Return",
												"src": "6810:26:3"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "6649:72:3",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6736:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6762:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "6743:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "6743:10:3"
													},
													"referencedDeclaration": 707,
													"src": "6743:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6742:24:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "6790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:3"
									},
									"scope": 1101,
									"src": "6727:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "7281:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 788,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "7303:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "7303:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 790,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7315:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 787,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "7299:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 786,
												"id": 792,
												"nodeType": "Return",
												"src": "7292:29:3"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "6852:340:3",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7207:2:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7229:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "7210:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 778,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "7210:10:3"
													},
													"referencedDeclaration": 707,
													"src": "7210:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "7234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:39:3"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "7272:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:9:3"
									},
									"scope": 1101,
									"src": "7198:131:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "7960:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 805,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "7986:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 706,
															"src": "7986:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 804,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "7978:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 803,
												"id": 808,
												"nodeType": "Return",
												"src": "7971:26:3"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "7337:536:3",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7914:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7895:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 707,
														"src": "7895:10:3"
													},
													"referencedDeclaration": 707,
													"src": "7895:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$707_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:24:3"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7942:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 800,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7942:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 801,
													"nodeType": "ArrayTypeName",
													"src": "7942:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:18:3"
									},
									"scope": 1101,
									"src": "7879:126:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 814,
									"members": [
										{
											"constant": false,
											"id": 813,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8067:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 814,
											"src": "8063:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 812,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 811,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 513,
													"src": "8063:3:3"
												},
												"referencedDeclaration": 513,
												"src": "8063:3:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8041:10:3",
									"nodeType": "StructDefinition",
									"scope": 1101,
									"src": "8034:47:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "8335:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 826,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "8358:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "8358:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 834,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "8394:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8386:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 832,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8386:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8378:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 830,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8378:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:23:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8370:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 828,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8370:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8370:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 825,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "8353:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 824,
												"id": 839,
												"nodeType": "Return",
												"src": "8346:57:3"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "8089:164:3",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8268:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8291:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "8272:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 817,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 816,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "8272:10:3"
													},
													"referencedDeclaration": 814,
													"src": "8272:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8304:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "8296:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:39:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "8329:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8329:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:6:3"
									},
									"scope": 1101,
									"src": "8259:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "8666:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 853,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "8692:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "8692:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 861,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "8728:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8720:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 859,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8720:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8720:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8712:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 857,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8712:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8712:23:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8704:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 855,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8704:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8704:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 852,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "8684:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 851,
												"id": 866,
												"nodeType": "Return",
												"src": "8677:60:3"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "8419:162:3",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8596:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8622:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "8603:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 843,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "8603:10:3"
													},
													"referencedDeclaration": 814,
													"src": "8603:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8635:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "8627:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8602:39:3"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "8660:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:3"
									},
									"scope": 1101,
									"src": "8587:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "8917:81:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 880,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "8945:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "8945:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 874,
																					"src": "8981:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8973:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 886,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8973:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8973:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8965:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 884,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8965:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8965:23:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 882,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 879,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8935:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 878,
												"id": 893,
												"nodeType": "Return",
												"src": "8928:62:3"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "8753:72:3",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8840:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8868:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "8849:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 870,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "8849:10:3"
													},
													"referencedDeclaration": 814,
													"src": "8849:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8881:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "8873:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:39:3"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "8911:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8911:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:6:3"
									},
									"scope": 1101,
									"src": "8831:167:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "9156:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 905,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "9182:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "9182:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 904,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "9174:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 903,
												"id": 908,
												"nodeType": "Return",
												"src": "9167:26:3"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "9006:72:3",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9093:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9119:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "9100:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "9100:10:3"
													},
													"referencedDeclaration": 814,
													"src": "9100:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:24:3"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "9147:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9146:9:3"
									},
									"scope": 1101,
									"src": "9084:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "9638:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 928,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 914,
																						"src": "9684:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 929,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 813,
																					"src": "9684:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$513_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 930,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "9696:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$513_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 927,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 689,
																				"src": "9680:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9680:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9672:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 925,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9672:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9672:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9664:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 923,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9664:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9664:40:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9656:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 921,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 920,
												"id": 935,
												"nodeType": "Return",
												"src": "9649:56:3"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "9209:340:3",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "9567:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 912,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "9567:10:3"
													},
													"referencedDeclaration": 814,
													"src": "9567:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "9591:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:3"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "9629:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:3"
									},
									"scope": 1101,
									"src": "9555:158:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "10344:229:3",
										"statements": [
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10372:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "10355:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 949,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10355:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 950,
															"nodeType": "ArrayTypeName",
															"src": "10355:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 953,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "10388:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "10388:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 952,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10380:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10355:44:3"
											},
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10427:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "10410:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 959,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10410:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 960,
															"nodeType": "ArrayTypeName",
															"src": "10410:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 962,
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10499:41:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10514:15:3",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10524:5:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "10514:6:3",
														"valueSize": 1
													},
													{
														"declaration": 951,
														"isOffset": false,
														"isSlot": false,
														"src": "10524:5:3",
														"valueSize": 1
													}
												],
												"id": 963,
												"nodeType": "InlineAssembly",
												"src": "10490:50:3"
											},
											{
												"expression": {
													"id": 964,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "10559:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 946,
												"id": 965,
												"nodeType": "Return",
												"src": "10552:13:3"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "9721:536:3",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10272:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10298:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "10279:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 814,
														"src": "10279:10:3"
													},
													"referencedDeclaration": 814,
													"src": "10279:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$814_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:24:3"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "10326:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 943,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10326:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 944,
													"nodeType": "ArrayTypeName",
													"src": "10326:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:18:3"
									},
									"scope": 1101,
									"src": "10263:310:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 971,
									"members": [
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10629:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "10625:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 969,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 968,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 513,
													"src": "10625:3:3"
												},
												"referencedDeclaration": 513,
												"src": "10625:3:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$513_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10606:7:3",
									"nodeType": "StructDefinition",
									"scope": 1101,
									"src": "10599:44:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "10894:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 983,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "10917:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 970,
															"src": "10917:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 987,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "10937:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10929:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 985,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10929:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10929:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 982,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "10912:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 981,
												"id": 990,
												"nodeType": "Return",
												"src": "10905:39:3"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "10651:164:3",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10830:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10850:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "10834:19:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 973,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "10834:7:3"
													},
													"referencedDeclaration": 971,
													"src": "10834:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10863:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "10855:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:36:3"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "10888:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10888:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:6:3"
									},
									"scope": 1101,
									"src": "10821:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "11204:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1004,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "11230:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 970,
															"src": "11230:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "11250:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11242:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1006,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11242:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11242:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1003,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "11222:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1011,
												"nodeType": "Return",
												"src": "11215:42:3"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "10960:162:3",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11137:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11160:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "11144:19:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 994,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "11144:7:3"
													},
													"referencedDeclaration": 971,
													"src": "11144:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11173:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "11165:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:36:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "11198:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11198:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:6:3"
									},
									"scope": 1101,
									"src": "11128:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "11434:63:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1025,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "11462:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 970,
															"src": "11462:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "11482:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11474:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11474:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11474:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1024,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "11452:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1032,
												"nodeType": "Return",
												"src": "11445:44:3"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "11273:72:3",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11360:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11385:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "11369:19:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1015,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "11369:7:3"
													},
													"referencedDeclaration": 971,
													"src": "11369:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11398:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "11390:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11390:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:36:3"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "11428:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11428:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11427:6:3"
									},
									"scope": 1101,
									"src": "11351:146:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "11652:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1044,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "11678:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 970,
															"src": "11678:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1043,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "11670:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1047,
												"nodeType": "Return",
												"src": "11663:26:3"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "11505:72:3",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11592:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11615:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "11599:19:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1036,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "11599:7:3"
													},
													"referencedDeclaration": 971,
													"src": "11599:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:21:3"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "11643:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11642:9:3"
									},
									"scope": 1101,
									"src": "11583:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "12131:57:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1063,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "12161:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 970,
																	"src": "12161:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$513_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1065,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "12173:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$513_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1062,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "12157:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12157:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1060,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12149:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1068,
												"nodeType": "Return",
												"src": "12142:38:3"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "11705:340:3",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12060:2:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12079:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "12063:19:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1051,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "12063:7:3"
													},
													"referencedDeclaration": 971,
													"src": "12063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12092:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "12084:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:36:3"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "12122:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:9:3"
									},
									"scope": 1101,
									"src": "12051:137:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "12816:229:3",
										"statements": [
											{
												"assignments": [
													1084
												],
												"declarations": [
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12844:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "12827:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1082,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12827:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1083,
															"nodeType": "ArrayTypeName",
															"src": "12827:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1086,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "12860:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 970,
															"src": "12860:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$513_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1085,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "12852:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$513_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12827:44:3"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12899:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "12882:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1092,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1093,
															"nodeType": "ArrayTypeName",
															"src": "12882:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"nodeType": "VariableDeclarationStatement",
												"src": "12882:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12971:41:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12986:15:3",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12996:5:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1094,
														"isOffset": false,
														"isSlot": false,
														"src": "12986:6:3",
														"valueSize": 1
													},
													{
														"declaration": 1084,
														"isOffset": false,
														"isSlot": false,
														"src": "12996:5:3",
														"valueSize": 1
													}
												],
												"id": 1096,
												"nodeType": "InlineAssembly",
												"src": "12962:50:3"
											},
											{
												"expression": {
													"id": 1097,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1094,
													"src": "13031:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1079,
												"id": 1098,
												"nodeType": "Return",
												"src": "13024:13:3"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "12196:536:3",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12747:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12770:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "12754:19:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1072,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "12754:7:3"
													},
													"referencedDeclaration": 971,
													"src": "12754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$971_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:21:3"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "12798:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1076,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1077,
													"nodeType": "ArrayTypeName",
													"src": "12798:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:18:3"
									},
									"scope": 1101,
									"src": "12738:307:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1102,
							"src": "1265:11783:3",
							"usedErrors": []
						}
					],
					"src": "118:12930:3"
				},
				"id": 3
			},
			"Utils/Ownable.sol": {
				"ast": {
					"absolutePath": "Utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							502
						],
						"Ownable": [
							1206
						]
					},
					"id": 1207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:4"
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "./Context.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1207,
							"sourceUnit": 503,
							"src": "117:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1106,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 502,
										"src": "680:7:4"
									},
									"id": 1107,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1206,
							"linearizedBaseContracts": [
								1206,
								502
							],
							"name": "Ownable",
							"nameLocation": "669:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1109,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1206,
									"src": "695:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1115,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "753:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "784:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:4"
									},
									"src": "726:84:4"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "931:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1120,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "961:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1119,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "942:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "942:32:4"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1125,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:4"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:4"
									},
									"scope": 1206,
									"src": "917:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1118:32:4",
										"statements": [
											{
												"expression": {
													"id": 1131,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1109,
													"src": "1136:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1132,
												"nodeType": "Return",
												"src": "1129:13:4"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:4"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1109:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:4"
									},
									"scope": 1206,
									"src": "1063:87:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "1264:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1138,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "1283:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1140,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "1294:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:4"
											},
											{
												"id": 1146,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:4"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1148,
									"name": "onlyOwner",
									"nameLocation": "1252:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:4"
									},
									"src": "1243:120:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "1768:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1155,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1154,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "1779:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:4"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1151,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1148,
												"src": "1758:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1723:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:4"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:4"
									},
									"scope": 1206,
									"src": "1714:103:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "2042:131:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "2061:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1172,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "2156:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1180,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "2137:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:4"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1167,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1148,
												"src": "2032:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1981:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2007:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "1999:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:4"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:4"
									},
									"scope": 1206,
									"src": "1972:201:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "2396:128:4",
										"statements": [
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2415:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "2407:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1191,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"id": 1193,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1109,
													"src": "2426:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:4"
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1195,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "2443:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "2452:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1200,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "2497:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "2507:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1199,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2476:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "2471:45:4"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2342:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2369:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2361:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:4"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:4"
									},
									"scope": 1206,
									"src": "2333:191:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1207,
							"src": "651:1876:4",
							"usedErrors": []
						}
					],
					"src": "90:2437:4"
				},
				"id": 4
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1246
						]
					},
					"id": 1247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1209,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1246,
							"linearizedBaseContracts": [
								1246
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1212,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1246,
									"src": "1694:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1215,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1246,
									"src": "1742:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1217,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1246,
									"src": "1788:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1834:41:5",
										"statements": [
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "1845:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "1855:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:5"
											}
										]
									},
									"id": 1225,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:5"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:5"
									},
									"scope": 1246,
									"src": "1820:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2285:433:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "2376:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1230,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "2387:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:5"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2509:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1236,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "2519:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:5"
											},
											{
												"id": 1239,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:5"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2688:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1241,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2698:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:5"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1245,
									"name": "nonReentrant",
									"nameLocation": "2270:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:5"
									},
									"src": "2261:457:5",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1247,
							"src": "894:1827:5",
							"usedErrors": []
						}
					],
					"src": "100:2621:5"
				},
				"id": 5
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							1395
						]
					},
					"id": 1396,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1249,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:6",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 1395,
							"linearizedBaseContracts": [
								1395
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "380:284:6",
										"statements": [
											{
												"assignments": [
													1259,
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "392:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1258,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "406:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1260,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 1267,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "487:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "491:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1264,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "427:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "541:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1274,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "553:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1280,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "584:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1281,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:6",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1283,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1278,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "519:137:6"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "305:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "329:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "350:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:6"
									},
									"scope": 1395,
									"src": "274:390:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "1246:296:6",
										"statements": [
											{
												"assignments": [
													1304,
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1263:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "1258:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1258:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1285:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "1272:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1305,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1272:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1341:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1312,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "1353:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1313,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "1359:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "1363:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1309,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1318:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1318:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1318:51:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1293:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1293:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1257:123:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1319,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "1413:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1320,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1306,
																					"src": "1425:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1425:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1440:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1425:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1326,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1306,
																					"src": "1456:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1328,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1463:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1327,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1463:4:6",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1329,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1462:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1324,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1445:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1445:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1425:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1424:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1413:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1485:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:143:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "1391:143:6"
											}
										]
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1121:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1156:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1148:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1180:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1172:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1195:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1224:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1216:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:99:6"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:6"
									},
									"scope": 1395,
									"src": "1112:430:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "1733:400:6",
										"statements": [
											{
												"condition": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1748:8:6",
													"subExpression": {
														"id": 1349,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "1749:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "1809:317:6",
													"statements": [
														{
															"assignments": [
																1359,
																1361
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1359,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1830:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1391,
																	"src": "1825:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1358,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1825:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1361,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1852:4:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1391,
																	"src": "1839:17:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1360,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1839:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1371,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1912:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 1367,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "1924:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 1368,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "1928:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1364,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1889:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1889:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:45:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1362,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "1860:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1860:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:89:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1824:125:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1373,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "1990:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1377,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1374,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1361,
																								"src": "2002:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 1375,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "2002:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1376,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2017:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2002:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1380,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1361,
																								"src": "2033:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 1382,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2040:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 1381,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2040:4:6",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 1383,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2039:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 1378,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "2022:3:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1379,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "2022:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2022:24:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2002:44:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1386,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2001:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1990:57:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2066:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 1372,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1964:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:150:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1390,
															"nodeType": "ExpressionStatement",
															"src": "1964:150:6"
														}
													]
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "1744:382:6",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "1758:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1354,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "1785:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1351,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "1773:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1773:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1773:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "1773:18:6"
														}
													]
												}
											}
										]
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1595:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1627:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1651:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1688:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1680:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1704:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:107:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:6"
									},
									"scope": 1395,
									"src": "1586:547:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1396,
							"src": "244:1892:6",
							"usedErrors": []
						}
					],
					"src": "35:2103:6"
				},
				"id": 6
			}
		}
	}
}