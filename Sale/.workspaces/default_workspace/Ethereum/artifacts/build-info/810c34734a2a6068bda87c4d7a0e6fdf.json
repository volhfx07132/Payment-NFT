{
	"id": "810c34734a2a6068bda87c4d7a0e6fdf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\n\r\ncontract Presale is ReentrancyGuard{\r\n    // struct SaleInfor {\r\n    //     address payable presaleOwner;\r\n    //     IERC20 saleToken;\r\n    //     IERC20 baseToken;\r\n    //     uint256 tokenPrice;\r\n    //     uint256 startSale;\r\n    //     uint256 endSale;\r\n    //     uint256 valueSwapERC20;\r\n    //     uint256 feeTransaction;\r\n    //     uint256 minSpendPerBuyer;\r\n    //     uint256 maxSpendPerBuyer;\r\n    //     uint256 refundFee;\r\n    //     uint256 claimFee;\r\n    // }\r\n\r\n    // struct BuyerInfo {\r\n    //     uint256 baseDeposit;\r\n    //     uint256 tokenOwner;\r\n    //     uint256 lastWithDraw;\r\n    //     uint256 totalTokenWithDraw;\r\n    //     bool isRefund;\r\n    //     bool isClaim;\r\n    // }\r\n\r\n    // struct PresaleStatus {\r\n    //     uint256 totalBaseCollected;\r\n    //     uint256 totalTokenSold;\r\n    //     uint256 totalTokenWithDraw;\r\n    //     uint256 totalBaseWithDraw;\r\n    //     uint256 numByer;\r\n    //     uint256 totalFee;\r\n    // }\r\n    \r\n    // mapping(address => BuyerInfo) public buyerInfo;\r\n    // mapping(address => uint256) public userFee;\r\n    // PresaleStatus public presaleStatus;\r\n    // SaleInfor public saleInfor;\r\n\r\n    // function initialSaleInfor(\r\n    //     address payable _presaleOwner,\r\n    //     IERC20 _saleToken,\r\n    //     IERC20 _baseTOken,\r\n    //     uint256[9] memory datas\r\n    // ) external {\r\n    //     saleInfor.presaleOwner = _presaleOwner;\r\n    //     saleInfor.saleToken = _saleToken;\r\n    //     saleInfor.baseToken = _baseTOken;\r\n    //     saleInfor.tokenPrice = datas[0];\r\n    //     saleInfor.startSale = datas[1];\r\n    //     saleInfor.endSale = datas[2];\r\n    //     saleInfor.valueSwapERC20 = datas[3];\r\n    //     saleInfor.feeTransaction = datas[4];\r\n    //     saleInfor.minSpendPerBuyer = datas[5];\r\n    //     saleInfor.maxSpendPerBuyer = datas[6];\r\n    //     saleInfor.refundFee = datas[7];\r\n    //     saleInfor.claimFee = datas[8];\r\n    // } \r\n\r\n    // function status() external view returns(uint256) {\r\n    //     if(block.timestamp < saleInfor.startSale) {\r\n    //         return 0; // Not Active\r\n    //     }else{\r\n    //         if(block.timestamp > saleInfor.endSale) {\r\n    //             return 2; // Suceess\r\n    //         }else{\r\n    //             return 1; // Active\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    //100 000000000000000\r\n\r\n    struct PresaleInfo {\r\n        IERC20 B_TOKEN;\r\n    }\r\n\r\n    PresaleInfo public PRESALE_INFO;\r\n\r\n    constructor() {\r\n        PRESALE_INFO.B_TOKEN = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n    }\r\n\r\n    function depodit(\r\n        uint256 value\r\n    ) external payable nonReentrant {\r\n        TransferHelper.safeTransferFrom(\r\n                address(PRESALE_INFO.B_TOKEN),\r\n                msg.sender,\r\n                address(this),\r\n                value\r\n            );\r\n    }\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function transferETH(uint256 amount) external payable {\r\n        payable(msg.sender).transfer(msg.value - amount);\r\n    }\r\n\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    // function safeTransfer(\r\n    //     address token,\r\n    //     address to,\r\n    //     uint256 value\r\n    // ) internal {\r\n    //     (bool success, bytes memory data) = token.call(\r\n    //         abi.encodeWithSelector(0xa9059cbb, to, value)\r\n    //     );\r\n    //     require(\r\n    //         success && (data.length == 0 || abi.decode(data, (bool))),\r\n    //         \"TransferHelper: TRANSFER_FAILED\"\r\n    //     );\r\n    // }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "PRESALE_INFO",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "B_TOKEN",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":232:3441  contract Presale is ReentrancyGuard{\r... */\n  mstore(0x40, 0x80)\n    /* \"Ethereum/Presale.sol\":2679:2785  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Ethereum/Presale.sol\":2734:2776  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n    /* \"Ethereum/Presale.sol\":2704:2716  PRESALE_INFO */\n  0x01\n    /* \"Ethereum/Presale.sol\":2704:2724  PRESALE_INFO.B_TOKEN */\n  0x00\n  add\n  0x00\n    /* \"Ethereum/Presale.sol\":2704:2777  PRESALE_INFO.B_TOKEN = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ethereum/Presale.sol\":232:3441  contract Presale is ReentrancyGuard{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":232:3441  contract Presale is ReentrancyGuard{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3f74aa38\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4329db46\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x79647833\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":2639:2670  PresaleInfo public PRESALE_INFO */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":3315:3436  function transferETH(uint256 amount) external payable {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Ethereum/Presale.sol\":2793:3069  function depodit(\r... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Ethereum/Presale.sol\":3199:3307  function backToken() external payable {\r... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Ethereum/Presale.sol\":3077:3188  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":2639:2670  PresaleInfo public PRESALE_INFO */\n    tag_9:\n      0x01\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3315:3436  function transferETH(uint256 amount) external payable {\r... */\n    tag_15:\n        /* \"Ethereum/Presale.sol\":3388:3398  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3380:3408  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ethereum/Presale.sol\":3380:3428  payable(msg.sender).transfer(msg.value - amount) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":3421:3427  amount */\n      dup3\n        /* \"Ethereum/Presale.sol\":3409:3418  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":3409:3427  msg.value - amount */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"Ethereum/Presale.sol\":3380:3428  payable(msg.sender).transfer(msg.value - amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n        /* \"Ethereum/Presale.sol\":3315:3436  function transferETH(uint256 amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2793:3069  function depodit(\r... */\n    tag_18:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":2882:3061  TransferHelper.safeTransferFrom(\r... */\n      tag_38\n        /* \"Ethereum/Presale.sol\":2940:2952  PRESALE_INFO */\n      0x01\n        /* \"Ethereum/Presale.sol\":2940:2960  PRESALE_INFO.B_TOKEN */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ethereum/Presale.sol\":2980:2990  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3017:3021  this */\n      address\n        /* \"Ethereum/Presale.sol\":3041:3046  value */\n      dup5\n        /* \"Ethereum/Presale.sol\":2882:2913  TransferHelper.safeTransferFrom */\n      tag_39\n        /* \"Ethereum/Presale.sol\":2882:3061  TransferHelper.safeTransferFrom(\r... */\n      jump\t// in\n    tag_38:\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":2793:3069  function depodit(\r... */\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3199:3307  function backToken() external payable {\r... */\n    tag_20:\n        /* \"Ethereum/Presale.sol\":3256:3266  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3248:3276  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ethereum/Presale.sol\":3248:3299  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":3277:3298  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":3248:3299  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n        /* \"Ethereum/Presale.sol\":3199:3307  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3077:3188  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_25:\n        /* \"Ethereum/Presale.sol\":3137:3144  uint256 */\n      0x00\n        /* \"Ethereum/Presale.sol\":3164:3172  _address */\n      dup2\n        /* \"Ethereum/Presale.sol\":3164:3180  _address.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Ethereum/Presale.sol\":3157:3180  return _address.balance */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":3077:3188  function getBalance(address _address) external view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Utils/TransferHelper.sol\":1112:1542  function safeTransferFrom(\r... */\n    tag_39:\n        /* \"Utils/TransferHelper.sol\":1258:1270  bool success */\n      0x00\n        /* \"Utils/TransferHelper.sol\":1272:1289  bytes memory data */\n      dup1\n        /* \"Utils/TransferHelper.sol\":1293:1298  token */\n      dup6\n        /* \"Utils/TransferHelper.sol\":1293:1303  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Utils/TransferHelper.sol\":1341:1351  0x23b872dd */\n      0x23b872dd\n        /* \"Utils/TransferHelper.sol\":1353:1357  from */\n      dup7\n        /* \"Utils/TransferHelper.sol\":1359:1361  to */\n      dup7\n        /* \"Utils/TransferHelper.sol\":1363:1368  value */\n      dup7\n        /* \"Utils/TransferHelper.sol\":1318:1369  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Utils/TransferHelper.sol\":1293:1380  token.call(\r... */\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_51\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_50)\n    tag_51:\n      0x60\n      swap2\n      pop\n    tag_50:\n      pop\n        /* \"Utils/TransferHelper.sol\":1257:1380  (bool success, bytes memory data) = token.call(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Utils/TransferHelper.sol\":1413:1420  success */\n      dup2\n        /* \"Utils/TransferHelper.sol\":1413:1470  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_52\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1440:1441  0 */\n      0x00\n        /* \"Utils/TransferHelper.sol\":1425:1429  data */\n      dup2\n        /* \"Utils/TransferHelper.sol\":1425:1436  data.length */\n      mload\n        /* \"Utils/TransferHelper.sol\":1425:1441  data.length == 0 */\n      eq\n        /* \"Utils/TransferHelper.sol\":1425:1469  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_53\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1456:1460  data */\n      dup1\n        /* \"Utils/TransferHelper.sol\":1445:1469  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"Utils/TransferHelper.sol\":1425:1469  data.length == 0 || abi.decode(data, (bool)) */\n    tag_53:\n        /* \"Utils/TransferHelper.sol\":1413:1470  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_52:\n        /* \"Utils/TransferHelper.sol\":1391:1534  require(\r... */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"Utils/TransferHelper.sol\":1112:1542  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_60:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_62\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_64:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_66\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_68:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_70\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:702   */\n    tag_24:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:518   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":564:565   */\n      0x00\n        /* \"#utility.yul\":561:562   */\n      dup1\n        /* \"#utility.yul\":554:566   */\n      revert\n        /* \"#utility.yul\":516:518   */\n    tag_73:\n        /* \"#utility.yul\":607:608   */\n      0x00\n        /* \"#utility.yul\":632:685   */\n      tag_74\n        /* \"#utility.yul\":677:684   */\n      dup5\n        /* \"#utility.yul\":668:674   */\n      dup3\n        /* \"#utility.yul\":657:666   */\n      dup6\n        /* \"#utility.yul\":653:675   */\n      add\n        /* \"#utility.yul\":632:685   */\n      tag_60\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":622:685   */\n      swap2\n      pop\n        /* \"#utility.yul\":578:695   */\n      pop\n        /* \"#utility.yul\":506:702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:986   */\n    tag_55:\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x20\n        /* \"#utility.yul\":812:821   */\n      dup3\n        /* \"#utility.yul\":803:810   */\n      dup5\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:794   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":837:838   */\n      dup1\n        /* \"#utility.yul\":830:842   */\n      revert\n        /* \"#utility.yul\":792:794   */\n    tag_76:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:969   */\n      tag_77\n        /* \"#utility.yul\":961:968   */\n      dup5\n        /* \"#utility.yul\":952:958   */\n      dup3\n        /* \"#utility.yul\":941:950   */\n      dup6\n        /* \"#utility.yul\":937:959   */\n      add\n        /* \"#utility.yul\":908:969   */\n      tag_64\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":898:969   */\n      swap2\n      pop\n        /* \"#utility.yul\":854:979   */\n      pop\n        /* \"#utility.yul\":782:986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":992:1254   */\n    tag_14:\n        /* \"#utility.yul\":1051:1057   */\n      0x00\n        /* \"#utility.yul\":1100:1102   */\n      0x20\n        /* \"#utility.yul\":1088:1097   */\n      dup3\n        /* \"#utility.yul\":1079:1086   */\n      dup5\n        /* \"#utility.yul\":1075:1098   */\n      sub\n        /* \"#utility.yul\":1071:1103   */\n      slt\n        /* \"#utility.yul\":1068:1070   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1116:1117   */\n      0x00\n        /* \"#utility.yul\":1113:1114   */\n      dup1\n        /* \"#utility.yul\":1106:1118   */\n      revert\n        /* \"#utility.yul\":1068:1070   */\n    tag_79:\n        /* \"#utility.yul\":1159:1160   */\n      0x00\n        /* \"#utility.yul\":1184:1237   */\n      tag_80\n        /* \"#utility.yul\":1229:1236   */\n      dup5\n        /* \"#utility.yul\":1220:1226   */\n      dup3\n        /* \"#utility.yul\":1209:1218   */\n      dup6\n        /* \"#utility.yul\":1205:1227   */\n      add\n        /* \"#utility.yul\":1184:1237   */\n      tag_68\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1174:1237   */\n      swap2\n      pop\n        /* \"#utility.yul\":1130:1247   */\n      pop\n        /* \"#utility.yul\":1058:1254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1260:1378   */\n    tag_81:\n        /* \"#utility.yul\":1347:1371   */\n      tag_83\n        /* \"#utility.yul\":1365:1370   */\n      dup2\n        /* \"#utility.yul\":1347:1371   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1372   */\n      mstore\n        /* \"#utility.yul\":1325:1378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1757   */\n    tag_85:\n        /* \"#utility.yul\":1488:1491   */\n      0x00\n        /* \"#utility.yul\":1516:1554   */\n      tag_87\n        /* \"#utility.yul\":1548:1553   */\n      dup3\n        /* \"#utility.yul\":1516:1554   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1570:1658   */\n      tag_89\n        /* \"#utility.yul\":1651:1657   */\n      dup2\n        /* \"#utility.yul\":1646:1649   */\n      dup6\n        /* \"#utility.yul\":1570:1658   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1563:1658   */\n      swap4\n      pop\n        /* \"#utility.yul\":1667:1719   */\n      tag_91\n        /* \"#utility.yul\":1712:1718   */\n      dup2\n        /* \"#utility.yul\":1707:1710   */\n      dup6\n        /* \"#utility.yul\":1700:1704   */\n      0x20\n        /* \"#utility.yul\":1693:1698   */\n      dup7\n        /* \"#utility.yul\":1689:1705   */\n      add\n        /* \"#utility.yul\":1667:1719   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1744:1750   */\n      dup1\n        /* \"#utility.yul\":1739:1742   */\n      dup5\n        /* \"#utility.yul\":1735:1751   */\n      add\n        /* \"#utility.yul\":1728:1751   */\n      swap2\n      pop\n        /* \"#utility.yul\":1492:1757   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:1920   */\n    tag_93:\n        /* \"#utility.yul\":1863:1913   */\n      tag_95\n        /* \"#utility.yul\":1907:1912   */\n      dup2\n        /* \"#utility.yul\":1863:1913   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1858:1861   */\n      dup3\n        /* \"#utility.yul\":1851:1914   */\n      mstore\n        /* \"#utility.yul\":1841:1920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1926:2292   */\n    tag_97:\n        /* \"#utility.yul\":2068:2071   */\n      0x00\n        /* \"#utility.yul\":2089:2156   */\n      tag_99\n        /* \"#utility.yul\":2153:2155   */\n      0x24\n        /* \"#utility.yul\":2148:2151   */\n      dup4\n        /* \"#utility.yul\":2089:2156   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2082:2156   */\n      swap2\n      pop\n        /* \"#utility.yul\":2165:2258   */\n      tag_101\n        /* \"#utility.yul\":2254:2257   */\n      dup3\n        /* \"#utility.yul\":2165:2258   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2283:2285   */\n      0x40\n        /* \"#utility.yul\":2278:2281   */\n      dup3\n        /* \"#utility.yul\":2274:2286   */\n      add\n        /* \"#utility.yul\":2267:2286   */\n      swap1\n      pop\n        /* \"#utility.yul\":2072:2292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2298:2664   */\n    tag_103:\n        /* \"#utility.yul\":2440:2443   */\n      0x00\n        /* \"#utility.yul\":2461:2528   */\n      tag_105\n        /* \"#utility.yul\":2525:2527   */\n      0x1f\n        /* \"#utility.yul\":2520:2523   */\n      dup4\n        /* \"#utility.yul\":2461:2528   */\n      tag_100\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2454:2528   */\n      swap2\n      pop\n        /* \"#utility.yul\":2537:2630   */\n      tag_106\n        /* \"#utility.yul\":2626:2629   */\n      dup3\n        /* \"#utility.yul\":2537:2630   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2650:2653   */\n      dup3\n        /* \"#utility.yul\":2646:2658   */\n      add\n        /* \"#utility.yul\":2639:2658   */\n      swap1\n      pop\n        /* \"#utility.yul\":2444:2664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2670:2788   */\n    tag_108:\n        /* \"#utility.yul\":2757:2781   */\n      tag_110\n        /* \"#utility.yul\":2775:2780   */\n      dup2\n        /* \"#utility.yul\":2757:2781   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2752:2755   */\n      dup3\n        /* \"#utility.yul\":2745:2782   */\n      mstore\n        /* \"#utility.yul\":2735:2788   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2794:3065   */\n    tag_48:\n        /* \"#utility.yul\":2924:2927   */\n      0x00\n        /* \"#utility.yul\":2946:3039   */\n      tag_113\n        /* \"#utility.yul\":3035:3038   */\n      dup3\n        /* \"#utility.yul\":3026:3032   */\n      dup5\n        /* \"#utility.yul\":2946:3039   */\n      tag_85\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2939:3039   */\n      swap2\n      pop\n        /* \"#utility.yul\":3056:3059   */\n      dup2\n        /* \"#utility.yul\":3049:3059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2928:3065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3513   */\n    tag_46:\n        /* \"#utility.yul\":3220:3224   */\n      0x00\n        /* \"#utility.yul\":3258:3260   */\n      0x60\n        /* \"#utility.yul\":3247:3256   */\n      dup3\n        /* \"#utility.yul\":3243:3261   */\n      add\n        /* \"#utility.yul\":3235:3261   */\n      swap1\n      pop\n        /* \"#utility.yul\":3271:3342   */\n      tag_115\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3328:3337   */\n      dup4\n        /* \"#utility.yul\":3324:3341   */\n      add\n        /* \"#utility.yul\":3315:3321   */\n      dup7\n        /* \"#utility.yul\":3271:3342   */\n      tag_81\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3352:3424   */\n      tag_116\n        /* \"#utility.yul\":3420:3422   */\n      0x20\n        /* \"#utility.yul\":3409:3418   */\n      dup4\n        /* \"#utility.yul\":3405:3423   */\n      add\n        /* \"#utility.yul\":3396:3402   */\n      dup6\n        /* \"#utility.yul\":3352:3424   */\n      tag_81\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3434:3506   */\n      tag_117\n        /* \"#utility.yul\":3502:3504   */\n      0x40\n        /* \"#utility.yul\":3491:3500   */\n      dup4\n        /* \"#utility.yul\":3487:3505   */\n      add\n        /* \"#utility.yul\":3478:3484   */\n      dup5\n        /* \"#utility.yul\":3434:3506   */\n      tag_108\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3225:3513   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3519:3767   */\n    tag_11:\n        /* \"#utility.yul\":3625:3629   */\n      0x00\n        /* \"#utility.yul\":3663:3665   */\n      0x20\n        /* \"#utility.yul\":3652:3661   */\n      dup3\n        /* \"#utility.yul\":3648:3666   */\n      add\n        /* \"#utility.yul\":3640:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3676:3760   */\n      tag_119\n        /* \"#utility.yul\":3757:3758   */\n      0x00\n        /* \"#utility.yul\":3746:3755   */\n      dup4\n        /* \"#utility.yul\":3742:3759   */\n      add\n        /* \"#utility.yul\":3733:3739   */\n      dup5\n        /* \"#utility.yul\":3676:3760   */\n      tag_93\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3630:3767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3773:4192   */\n    tag_58:\n        /* \"#utility.yul\":3939:3943   */\n      0x00\n        /* \"#utility.yul\":3977:3979   */\n      0x20\n        /* \"#utility.yul\":3966:3975   */\n      dup3\n        /* \"#utility.yul\":3962:3980   */\n      add\n        /* \"#utility.yul\":3954:3980   */\n      swap1\n      pop\n        /* \"#utility.yul\":4026:4035   */\n      dup2\n        /* \"#utility.yul\":4020:4024   */\n      dup2\n        /* \"#utility.yul\":4016:4036   */\n      sub\n        /* \"#utility.yul\":4012:4013   */\n      0x00\n        /* \"#utility.yul\":4001:4010   */\n      dup4\n        /* \"#utility.yul\":3997:4014   */\n      add\n        /* \"#utility.yul\":3990:4037   */\n      mstore\n        /* \"#utility.yul\":4054:4185   */\n      tag_121\n        /* \"#utility.yul\":4180:4184   */\n      dup2\n        /* \"#utility.yul\":4054:4185   */\n      tag_97\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4046:4185   */\n      swap1\n      pop\n        /* \"#utility.yul\":3944:4192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4198:4617   */\n    tag_36:\n        /* \"#utility.yul\":4364:4368   */\n      0x00\n        /* \"#utility.yul\":4402:4404   */\n      0x20\n        /* \"#utility.yul\":4391:4400   */\n      dup3\n        /* \"#utility.yul\":4387:4405   */\n      add\n        /* \"#utility.yul\":4379:4405   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4460   */\n      dup2\n        /* \"#utility.yul\":4445:4449   */\n      dup2\n        /* \"#utility.yul\":4441:4461   */\n      sub\n        /* \"#utility.yul\":4437:4438   */\n      0x00\n        /* \"#utility.yul\":4426:4435   */\n      dup4\n        /* \"#utility.yul\":4422:4439   */\n      add\n        /* \"#utility.yul\":4415:4462   */\n      mstore\n        /* \"#utility.yul\":4479:4610   */\n      tag_123\n        /* \"#utility.yul\":4605:4609   */\n      dup2\n        /* \"#utility.yul\":4479:4610   */\n      tag_103\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4471:4610   */\n      swap1\n      pop\n        /* \"#utility.yul\":4369:4617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4623:4845   */\n    tag_27:\n        /* \"#utility.yul\":4716:4720   */\n      0x00\n        /* \"#utility.yul\":4754:4756   */\n      0x20\n        /* \"#utility.yul\":4743:4752   */\n      dup3\n        /* \"#utility.yul\":4739:4757   */\n      add\n        /* \"#utility.yul\":4731:4757   */\n      swap1\n      pop\n        /* \"#utility.yul\":4767:4838   */\n      tag_125\n        /* \"#utility.yul\":4835:4836   */\n      0x00\n        /* \"#utility.yul\":4824:4833   */\n      dup4\n        /* \"#utility.yul\":4820:4837   */\n      add\n        /* \"#utility.yul\":4811:4817   */\n      dup5\n        /* \"#utility.yul\":4767:4838   */\n      tag_108\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4721:4845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4851:4949   */\n    tag_88:\n        /* \"#utility.yul\":4902:4908   */\n      0x00\n        /* \"#utility.yul\":4936:4941   */\n      dup2\n        /* \"#utility.yul\":4930:4942   */\n      mload\n        /* \"#utility.yul\":4920:4942   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:4949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4955:5102   */\n    tag_90:\n        /* \"#utility.yul\":5056:5067   */\n      0x00\n        /* \"#utility.yul\":5093:5096   */\n      dup2\n        /* \"#utility.yul\":5078:5096   */\n      swap1\n      pop\n        /* \"#utility.yul\":5068:5102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5108:5277   */\n    tag_100:\n        /* \"#utility.yul\":5192:5203   */\n      0x00\n        /* \"#utility.yul\":5226:5232   */\n      dup3\n        /* \"#utility.yul\":5221:5224   */\n      dup3\n        /* \"#utility.yul\":5214:5233   */\n      mstore\n        /* \"#utility.yul\":5266:5270   */\n      0x20\n        /* \"#utility.yul\":5261:5264   */\n      dup3\n        /* \"#utility.yul\":5257:5271   */\n      add\n        /* \"#utility.yul\":5242:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5474   */\n    tag_30:\n        /* \"#utility.yul\":5323:5327   */\n      0x00\n        /* \"#utility.yul\":5343:5363   */\n      tag_130\n        /* \"#utility.yul\":5361:5362   */\n      dup3\n        /* \"#utility.yul\":5343:5363   */\n      tag_111\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5338:5363   */\n      swap2\n      pop\n        /* \"#utility.yul\":5377:5397   */\n      tag_131\n        /* \"#utility.yul\":5395:5396   */\n      dup4\n        /* \"#utility.yul\":5377:5397   */\n      tag_111\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5372:5397   */\n      swap3\n      pop\n        /* \"#utility.yul\":5416:5417   */\n      dup3\n        /* \"#utility.yul\":5413:5414   */\n      dup3\n        /* \"#utility.yul\":5410:5418   */\n      lt\n        /* \"#utility.yul\":5407:5409   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5421:5439   */\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5407:5409   */\n    tag_132:\n        /* \"#utility.yul\":5466:5467   */\n      dup3\n        /* \"#utility.yul\":5463:5464   */\n      dup3\n        /* \"#utility.yul\":5459:5468   */\n      sub\n        /* \"#utility.yul\":5451:5468   */\n      swap1\n      pop\n        /* \"#utility.yul\":5328:5474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5480:5576   */\n    tag_84:\n        /* \"#utility.yul\":5517:5524   */\n      0x00\n        /* \"#utility.yul\":5546:5570   */\n      tag_136\n        /* \"#utility.yul\":5564:5569   */\n      dup3\n        /* \"#utility.yul\":5546:5570   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5535:5570   */\n      swap1\n      pop\n        /* \"#utility.yul\":5525:5576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5582:5672   */\n    tag_138:\n        /* \"#utility.yul\":5616:5623   */\n      0x00\n        /* \"#utility.yul\":5659:5664   */\n      dup2\n        /* \"#utility.yul\":5652:5665   */\n      iszero\n        /* \"#utility.yul\":5645:5666   */\n      iszero\n        /* \"#utility.yul\":5634:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:5804   */\n    tag_137:\n        /* \"#utility.yul\":5715:5722   */\n      0x00\n        /* \"#utility.yul\":5755:5797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5748:5753   */\n      dup3\n        /* \"#utility.yul\":5744:5798   */\n      and\n        /* \"#utility.yul\":5733:5798   */\n      swap1\n      pop\n        /* \"#utility.yul\":5723:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5810:5887   */\n    tag_111:\n        /* \"#utility.yul\":5847:5854   */\n      0x00\n        /* \"#utility.yul\":5876:5881   */\n      dup2\n        /* \"#utility.yul\":5865:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5855:5887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5893:6045   */\n    tag_96:\n        /* \"#utility.yul\":5956:5965   */\n      0x00\n        /* \"#utility.yul\":5989:6039   */\n      tag_143\n        /* \"#utility.yul\":6033:6038   */\n      dup3\n        /* \"#utility.yul\":5989:6039   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5976:6039   */\n      swap1\n      pop\n        /* \"#utility.yul\":5966:6045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6051:6177   */\n    tag_144:\n        /* \"#utility.yul\":6114:6123   */\n      0x00\n        /* \"#utility.yul\":6147:6171   */\n      tag_146\n        /* \"#utility.yul\":6165:6170   */\n      dup3\n        /* \"#utility.yul\":6147:6171   */\n      tag_137\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6134:6171   */\n      swap1\n      pop\n        /* \"#utility.yul\":6124:6177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6183:6490   */\n    tag_92:\n        /* \"#utility.yul\":6251:6252   */\n      0x00\n        /* \"#utility.yul\":6261:6374   */\n    tag_148:\n        /* \"#utility.yul\":6275:6281   */\n      dup4\n        /* \"#utility.yul\":6272:6273   */\n      dup2\n        /* \"#utility.yul\":6269:6282   */\n      lt\n        /* \"#utility.yul\":6261:6374   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":6360:6361   */\n      dup1\n        /* \"#utility.yul\":6355:6358   */\n      dup3\n        /* \"#utility.yul\":6351:6362   */\n      add\n        /* \"#utility.yul\":6345:6363   */\n      mload\n        /* \"#utility.yul\":6341:6342   */\n      dup2\n        /* \"#utility.yul\":6336:6339   */\n      dup5\n        /* \"#utility.yul\":6332:6343   */\n      add\n        /* \"#utility.yul\":6325:6364   */\n      mstore\n        /* \"#utility.yul\":6297:6299   */\n      0x20\n        /* \"#utility.yul\":6294:6295   */\n      dup2\n        /* \"#utility.yul\":6290:6300   */\n      add\n        /* \"#utility.yul\":6285:6300   */\n      swap1\n      pop\n        /* \"#utility.yul\":6261:6374   */\n      jump(tag_148)\n    tag_150:\n        /* \"#utility.yul\":6392:6398   */\n      dup4\n        /* \"#utility.yul\":6389:6390   */\n      dup2\n        /* \"#utility.yul\":6386:6399   */\n      gt\n        /* \"#utility.yul\":6383:6385   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":6472:6473   */\n      0x00\n        /* \"#utility.yul\":6463:6469   */\n      dup5\n        /* \"#utility.yul\":6458:6461   */\n      dup5\n        /* \"#utility.yul\":6454:6470   */\n      add\n        /* \"#utility.yul\":6447:6474   */\n      mstore\n        /* \"#utility.yul\":6383:6385   */\n    tag_151:\n        /* \"#utility.yul\":6232:6490   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6676   */\n    tag_134:\n        /* \"#utility.yul\":6544:6621   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6541:6542   */\n      0x00\n        /* \"#utility.yul\":6534:6622   */\n      mstore\n        /* \"#utility.yul\":6641:6645   */\n      0x11\n        /* \"#utility.yul\":6638:6639   */\n      0x04\n        /* \"#utility.yul\":6631:6646   */\n      mstore\n        /* \"#utility.yul\":6665:6669   */\n      0x24\n        /* \"#utility.yul\":6662:6663   */\n      0x00\n        /* \"#utility.yul\":6655:6670   */\n      revert\n        /* \"#utility.yul\":6682:6905   */\n    tag_102:\n        /* \"#utility.yul\":6822:6856   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":6818:6819   */\n      0x00\n        /* \"#utility.yul\":6810:6816   */\n      dup3\n        /* \"#utility.yul\":6806:6820   */\n      add\n        /* \"#utility.yul\":6799:6857   */\n      mstore\n        /* \"#utility.yul\":6891:6897   */\n      0x494c454400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6878:6884   */\n      dup3\n        /* \"#utility.yul\":6874:6889   */\n      add\n        /* \"#utility.yul\":6867:6898   */\n      mstore\n        /* \"#utility.yul\":6788:6905   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6911:7092   */\n    tag_107:\n        /* \"#utility.yul\":7051:7084   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7047:7048   */\n      0x00\n        /* \"#utility.yul\":7039:7045   */\n      dup3\n        /* \"#utility.yul\":7035:7049   */\n      add\n        /* \"#utility.yul\":7028:7085   */\n      mstore\n        /* \"#utility.yul\":7017:7092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7098:7220   */\n    tag_63:\n        /* \"#utility.yul\":7171:7195   */\n      tag_156\n        /* \"#utility.yul\":7189:7194   */\n      dup2\n        /* \"#utility.yul\":7171:7195   */\n      tag_84\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7164:7169   */\n      dup2\n        /* \"#utility.yul\":7161:7196   */\n      eq\n        /* \"#utility.yul\":7151:7153   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":7210:7211   */\n      0x00\n        /* \"#utility.yul\":7207:7208   */\n      dup1\n        /* \"#utility.yul\":7200:7212   */\n      revert\n        /* \"#utility.yul\":7151:7153   */\n    tag_157:\n        /* \"#utility.yul\":7141:7220   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7226:7342   */\n    tag_67:\n        /* \"#utility.yul\":7296:7317   */\n      tag_159\n        /* \"#utility.yul\":7311:7316   */\n      dup2\n        /* \"#utility.yul\":7296:7317   */\n      tag_138\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7289:7294   */\n      dup2\n        /* \"#utility.yul\":7286:7318   */\n      eq\n        /* \"#utility.yul\":7276:7278   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":7332:7333   */\n      0x00\n        /* \"#utility.yul\":7329:7330   */\n      dup1\n        /* \"#utility.yul\":7322:7334   */\n      revert\n        /* \"#utility.yul\":7276:7278   */\n    tag_160:\n        /* \"#utility.yul\":7266:7342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7348:7470   */\n    tag_71:\n        /* \"#utility.yul\":7421:7445   */\n      tag_162\n        /* \"#utility.yul\":7439:7444   */\n      dup2\n        /* \"#utility.yul\":7421:7445   */\n      tag_111\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":7414:7419   */\n      dup2\n        /* \"#utility.yul\":7411:7446   */\n      eq\n        /* \"#utility.yul\":7401:7403   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":7460:7461   */\n      0x00\n        /* \"#utility.yul\":7457:7458   */\n      dup1\n        /* \"#utility.yul\":7450:7462   */\n      revert\n        /* \"#utility.yul\":7401:7403   */\n    tag_163:\n        /* \"#utility.yul\":7391:7470   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eac1dc8abd239af3dc8e7a16f53f1a2d12567ea5128523c3c7865216a404824464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600160008190555073c778417e063141139fce010982780140aa0cd5ab600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107e5806100806000396000f3fe60806040526004361061004a5760003560e01c80633f74aa381461004f5780634329db461461007a5780637964783314610096578063861faf5f146100b2578063f8b2cb4f146100bc575b600080fd5b34801561005b57600080fd5b506100646100f9565b6040516100719190610553565b60405180910390f35b610094600480360381019061008f9190610438565b610125565b005b6100b060048036038101906100ab9190610438565b61017a565b005b6100ba610204565b005b3480156100c857600080fd5b506100e360048036038101906100de91906103e6565b61024d565b6040516100f091906105ae565b60405180910390f35b60018060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b3373ffffffffffffffffffffffffffffffffffffffff166108fc823461014b91906105f0565b9081150290604051600060405180830381858888f19350505050158015610176573d6000803e3d6000fd5b5050565b600260005414156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b79061058e565b60405180910390fd5b60026000819055506101f9600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633308461026e565b600160008190555050565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561024a573d6000803e3d6000fd5b50565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016102a29392919061051c565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102f09190610505565b6000604051808303816000865af19150503d806000811461032d576040519150601f19603f3d011682016040523d82523d6000602084013e610332565b606091505b5091509150818015610360575060008151148061035f57508080602001905181019061035e919061040f565b5b5b61039f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103969061056e565b60405180910390fd5b505050505050565b6000813590506103b68161076a565b92915050565b6000815190506103cb81610781565b92915050565b6000813590506103e081610798565b92915050565b6000602082840312156103f857600080fd5b6000610406848285016103a7565b91505092915050565b60006020828403121561042157600080fd5b600061042f848285016103bc565b91505092915050565b60006020828403121561044a57600080fd5b6000610458848285016103d1565b91505092915050565b61046a81610624565b82525050565b600061047b826105c9565b61048581856105d4565b9350610495818560208601610690565b80840191505092915050565b6104aa8161066c565b82525050565b60006104bd6024836105df565b91506104c8826106f2565b604082019050919050565b60006104e0601f836105df565b91506104eb82610741565b602082019050919050565b6104ff81610662565b82525050565b60006105118284610470565b915081905092915050565b60006060820190506105316000830186610461565b61053e6020830185610461565b61054b60408301846104f6565b949350505050565b600060208201905061056860008301846104a1565b92915050565b60006020820190508181036000830152610587816104b0565b9050919050565b600060208201905081810360008301526105a7816104d3565b9050919050565b60006020820190506105c360008301846104f6565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006105fb82610662565b915061060683610662565b925082821015610619576106186106c3565b5b828203905092915050565b600061062f82610642565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106778261067e565b9050919050565b600061068982610642565b9050919050565b60005b838110156106ae578082015181840152602081019050610693565b838111156106bd576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160008201527f494c454400000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61077381610624565b811461077e57600080fd5b50565b61078a81610636565b811461079557600080fd5b50565b6107a181610662565b81146107ac57600080fd5b5056fea2646970667358221220eac1dc8abd239af3dc8e7a16f53f1a2d12567ea5128523c3c7865216a404824464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7E5 DUP1 PUSH2 0x80 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F74AA38 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 CALLVALUE PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x1F9 PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x332 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x360 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x35F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x396 SWAP1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B6 DUP2 PUSH2 0x76A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CB DUP2 PUSH2 0x781 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E0 DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP5 DUP3 DUP6 ADD PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP5 DUP3 DUP6 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP5 DUP3 DUP6 ADD PUSH2 0x3D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46A DUP2 PUSH2 0x624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B DUP3 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x485 DUP2 DUP6 PUSH2 0x5D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x495 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x690 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AA DUP2 PUSH2 0x66C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD PUSH1 0x24 DUP4 PUSH2 0x5DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4C8 DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E0 PUSH1 0x1F DUP4 PUSH2 0x5DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB DUP3 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x511 DUP3 DUP5 PUSH2 0x470 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x531 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x53E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x54B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4F6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x568 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x587 DUP2 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A7 DUP2 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB DUP3 PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH2 0x606 DUP4 PUSH2 0x662 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x6C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62F DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 DUP3 PUSH2 0x67E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x689 DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6AE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x693 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x494C454400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x624 JUMP JUMPDEST DUP2 EQ PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x78A DUP2 PUSH2 0x636 JUMP JUMPDEST DUP2 EQ PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP2 EQ PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC1 0xDC DUP11 0xBD 0x23 SWAP11 RETURN 0xDC DUP15 PUSH27 0x16F53F1A2D12567EA5128523C3C7865216A404824464736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "232:3209:1:-:0;;;2679:106;;;;;;;;;;1734:1:2;1845:7;:22;;;;2734:42:1;2704:12;:20;;;:73;;;;;;;;;;;;;;;;;;232:3209;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7473:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:4",
														"type": ""
													}
												],
												"src": "152:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:4",
														"type": ""
													}
												],
												"src": "295:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "561:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:4"
															},
															"nodeType": "YulIf",
															"src": "516:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "578:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "593:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "597:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "622:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "657:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "668:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "653:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "653:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "677:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "632:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "622:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:4",
														"type": ""
													}
												],
												"src": "440:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "782:204:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "828:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "837:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "830:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "830:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "830:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "824:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:32:4"
															},
															"nodeType": "YulIf",
															"src": "792:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "941:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "952:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "937:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "937:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "961:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "908:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "752:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "763:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "775:6:4",
														"type": ""
													}
												],
												"src": "708:278:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1104:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1113:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1106:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1106:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1106:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1079:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1088:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1075:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1075:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1071:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1071:32:4"
															},
															"nodeType": "YulIf",
															"src": "1068:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1130:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1145:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1149:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1174:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1209:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1220:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1205:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1205:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1229:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1184:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1028:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1039:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1051:6:4",
														"type": ""
													}
												],
												"src": "992:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1365:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1347:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:4",
														"type": ""
													}
												],
												"src": "1260:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1492:265:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1548:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1516:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1506:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1563:95:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1646:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1651:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1570:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:88:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1563:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1693:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1700:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1712:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1667:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1739:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1744:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1728:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1473:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1480:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1488:3:4",
														"type": ""
													}
												],
												"src": "1384:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1841:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1858:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1907:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1863:43:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1863:50:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1851:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:63:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1851:63:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1829:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1836:3:4",
														"type": ""
													}
												],
												"src": "1763:157:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2072:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2082:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2148:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2153:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2089:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2254:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																	"nodeType": "YulIdentifier",
																	"src": "2165:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2165:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2267:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2283:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2267:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2060:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2068:3:4",
														"type": ""
													}
												],
												"src": "1926:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2444:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2454:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2520:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2525:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2461:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2626:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "2537:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2537:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2639:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2650:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2655:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2432:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2440:3:4",
														"type": ""
													}
												],
												"src": "2298:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2735:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2752:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2775:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2757:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2745:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2745:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2723:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2730:3:4",
														"type": ""
													}
												],
												"src": "2670:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2928:137:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2939:100:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3026:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3035:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2946:79:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2946:93:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3049:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3056:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2907:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2913:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2924:3:4",
														"type": ""
													}
												],
												"src": "2794:271:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3225:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3235:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3247:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3258:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3235:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3315:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3328:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3339:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3324:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3324:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3271:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3271:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3396:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3409:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3420:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3405:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3405:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3352:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3491:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3502:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3434:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3434:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3181:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3193:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3201:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3209:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3220:4:4",
														"type": ""
													}
												],
												"src": "3071:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:137:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3652:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3648:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3640:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3733:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3746:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3757:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3742:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3742:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3676:56:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:84:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3676:84:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3602:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3614:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3625:4:4",
														"type": ""
													}
												],
												"src": "3519:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3944:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3954:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3966:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3977:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3962:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3954:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4001:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4012:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3997:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3997:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4020:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4026:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4016:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3990:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4046:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4180:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4054:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4046:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3924:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3939:4:4",
														"type": ""
													}
												],
												"src": "3773:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4369:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4379:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4437:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4422:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4445:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4451:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4441:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4441:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4415:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4471:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4605:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4479:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4471:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4349:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4364:4:4",
														"type": ""
													}
												],
												"src": "4198:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4721:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4731:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4743:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4754:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4739:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4739:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4731:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4811:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4824:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4835:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4820:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4820:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4767:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4767:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4767:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4693:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4705:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4716:4:4",
														"type": ""
													}
												],
												"src": "4623:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4909:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4920:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4936:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4930:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4930:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4892:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4902:6:4",
														"type": ""
													}
												],
												"src": "4851:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5078:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5093:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5078:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5040:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5045:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5056:11:4",
														"type": ""
													}
												],
												"src": "4955:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5204:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5221:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5214:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5214:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5242:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5261:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5266:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5257:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5242:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5176:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5181:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5192:11:4",
														"type": ""
													}
												],
												"src": "5108:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5328:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5338:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5361:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5343:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5338:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5372:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5395:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5377:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5377:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5372:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5419:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5421:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5421:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5421:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5413:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5416:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5410:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:8:4"
															},
															"nodeType": "YulIf",
															"src": "5407:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5451:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5463:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5466:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5459:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5451:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5314:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5317:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5323:4:4",
														"type": ""
													}
												],
												"src": "5283:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5525:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5535:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5564:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5546:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5535:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5507:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5517:7:4",
														"type": ""
													}
												],
												"src": "5480:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5624:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5634:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5659:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5652:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5652:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5634:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5606:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5616:7:4",
														"type": ""
													}
												],
												"src": "5582:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5723:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5733:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5748:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5733:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5705:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5715:7:4",
														"type": ""
													}
												],
												"src": "5678:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5855:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5865:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5876:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5865:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5837:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5847:7:4",
														"type": ""
													}
												],
												"src": "5810:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5966:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5976:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6033:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5989:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5989:50:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5976:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5946:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5956:9:4",
														"type": ""
													}
												],
												"src": "5893:152:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6124:53:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6134:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6165:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6147:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:24:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6134:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6104:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6114:9:4",
														"type": ""
													}
												],
												"src": "6051:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6232:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6242:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6251:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6246:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6311:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6336:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6341:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6332:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6332:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6355:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6360:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6351:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6351:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6345:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6345:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6325:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6325:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6325:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6272:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6269:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6269:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6283:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6285:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6294:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6297:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6290:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6290:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6285:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6265:3:4",
																"statements": []
															},
															"src": "6261:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6408:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6458:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6463:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6454:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6454:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6472:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6447:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6447:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6447:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6389:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6392:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6386:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:13:4"
															},
															"nodeType": "YulIf",
															"src": "6383:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6214:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6219:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6224:6:4",
														"type": ""
													}
												],
												"src": "6183:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6524:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6541:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6544:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6534:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6638:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6641:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6631:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6631:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6662:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6665:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6655:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6655:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6655:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6496:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6788:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6810:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6818:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6806:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6822:34:4",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6799:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6799:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6799:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6878:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6886:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6874:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6874:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6891:6:4",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6867:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6867:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6780:6:4",
														"type": ""
													}
												],
												"src": "6682:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7017:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7039:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7047:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7051:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7009:6:4",
														"type": ""
													}
												],
												"src": "6911:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7141:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7198:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7207:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7210:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7200:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7200:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7200:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7164:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7189:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7171:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7171:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7161:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:43:4"
															},
															"nodeType": "YulIf",
															"src": "7151:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7134:5:4",
														"type": ""
													}
												],
												"src": "7098:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7266:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7320:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7329:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7332:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7322:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7322:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7322:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7289:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7311:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7296:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7296:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7286:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7286:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:40:4"
															},
															"nodeType": "YulIf",
															"src": "7276:2:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7259:5:4",
														"type": ""
													}
												],
												"src": "7226:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7391:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7448:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7457:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7460:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7450:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7450:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7450:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7414:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7439:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7421:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7421:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7411:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7411:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7404:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:43:4"
															},
															"nodeType": "YulIf",
															"src": "7401:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7384:5:4",
														"type": ""
													}
												],
												"src": "7348:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper: TRANSFER_FROM_FA\")\n\n        mstore(add(memPtr, 32), \"ILED\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633f74aa381461004f5780634329db461461007a5780637964783314610096578063861faf5f146100b2578063f8b2cb4f146100bc575b600080fd5b34801561005b57600080fd5b506100646100f9565b6040516100719190610553565b60405180910390f35b610094600480360381019061008f9190610438565b610125565b005b6100b060048036038101906100ab9190610438565b61017a565b005b6100ba610204565b005b3480156100c857600080fd5b506100e360048036038101906100de91906103e6565b61024d565b6040516100f091906105ae565b60405180910390f35b60018060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b3373ffffffffffffffffffffffffffffffffffffffff166108fc823461014b91906105f0565b9081150290604051600060405180830381858888f19350505050158015610176573d6000803e3d6000fd5b5050565b600260005414156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b79061058e565b60405180910390fd5b60026000819055506101f9600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633308461026e565b600160008190555050565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561024a573d6000803e3d6000fd5b50565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016102a29392919061051c565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102f09190610505565b6000604051808303816000865af19150503d806000811461032d576040519150601f19603f3d011682016040523d82523d6000602084013e610332565b606091505b5091509150818015610360575060008151148061035f57508080602001905181019061035e919061040f565b5b5b61039f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103969061056e565b60405180910390fd5b505050505050565b6000813590506103b68161076a565b92915050565b6000815190506103cb81610781565b92915050565b6000813590506103e081610798565b92915050565b6000602082840312156103f857600080fd5b6000610406848285016103a7565b91505092915050565b60006020828403121561042157600080fd5b600061042f848285016103bc565b91505092915050565b60006020828403121561044a57600080fd5b6000610458848285016103d1565b91505092915050565b61046a81610624565b82525050565b600061047b826105c9565b61048581856105d4565b9350610495818560208601610690565b80840191505092915050565b6104aa8161066c565b82525050565b60006104bd6024836105df565b91506104c8826106f2565b604082019050919050565b60006104e0601f836105df565b91506104eb82610741565b602082019050919050565b6104ff81610662565b82525050565b60006105118284610470565b915081905092915050565b60006060820190506105316000830186610461565b61053e6020830185610461565b61054b60408301846104f6565b949350505050565b600060208201905061056860008301846104a1565b92915050565b60006020820190508181036000830152610587816104b0565b9050919050565b600060208201905081810360008301526105a7816104d3565b9050919050565b60006020820190506105c360008301846104f6565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006105fb82610662565b915061060683610662565b925082821015610619576106186106c3565b5b828203905092915050565b600061062f82610642565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106778261067e565b9050919050565b600061068982610642565b9050919050565b60005b838110156106ae578082015181840152602081019050610693565b838111156106bd576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160008201527f494c454400000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61077381610624565b811461077e57600080fd5b50565b61078a81610636565b811461079557600080fd5b50565b6107a181610662565b81146107ac57600080fd5b5056fea2646970667358221220eac1dc8abd239af3dc8e7a16f53f1a2d12567ea5128523c3c7865216a404824464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F74AA38 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 CALLVALUE PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x1F9 PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x332 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x360 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x35F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x396 SWAP1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B6 DUP2 PUSH2 0x76A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CB DUP2 PUSH2 0x781 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E0 DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP5 DUP3 DUP6 ADD PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP5 DUP3 DUP6 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP5 DUP3 DUP6 ADD PUSH2 0x3D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46A DUP2 PUSH2 0x624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B DUP3 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x485 DUP2 DUP6 PUSH2 0x5D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x495 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x690 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AA DUP2 PUSH2 0x66C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD PUSH1 0x24 DUP4 PUSH2 0x5DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4C8 DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E0 PUSH1 0x1F DUP4 PUSH2 0x5DF JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB DUP3 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x511 DUP3 DUP5 PUSH2 0x470 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x531 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x53E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x54B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4F6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x568 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x587 DUP2 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A7 DUP2 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FB DUP3 PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH2 0x606 DUP4 PUSH2 0x662 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x6C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62F DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 DUP3 PUSH2 0x67E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x689 DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6AE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x693 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x494C454400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x624 JUMP JUMPDEST DUP2 EQ PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x78A DUP2 PUSH2 0x636 JUMP JUMPDEST DUP2 EQ PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP2 EQ PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC1 0xDC DUP11 0xBD 0x23 SWAP11 RETURN 0xDC DUP15 PUSH27 0x16F53F1A2D12567EA5128523C3C7865216A404824464736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "232:3209:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2639:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2793:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3199:108;;;:::i;:::-;;3077:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2639:31;;;;;;;;;;;;;;;;;;:::o;3315:121::-;3388:10;3380:28;;:48;3421:6;3409:9;:18;;;;:::i;:::-;3380:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3315:121;:::o;2793:276::-;1778:1:2;2376:7;;:19;;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;2509:7;:18;;;;2882:179:1::1;2940:12;:20;;;;;;;;;;;;2980:10;3017:4;3041:5;2882:31;:179::i;:::-;1734:1:2::0;2688:7;:22;;;;2793:276:1;:::o;3199:108::-;3256:10;3248:28;;:51;3277:21;3248:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:108::o;3077:111::-;3137:7;3164:8;:16;;;3157:23;;3077:111;;;:::o;1112:430:3:-;1258:12;1272:17;1293:5;:10;;1341;1353:4;1359:2;1363:5;1318:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:87;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:123;;;;1413:7;:57;;;;;1440:1;1425:4;:11;:16;:44;;;;1456:4;1445:24;;;;;;;;;;;;:::i;:::-;1425:44;1413:57;1391:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;1112:430;;;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;499:6;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:278::-;775:6;824:2;812:9;803:7;799:23;795:32;792:2;;;840:1;837;830:12;792:2;883:1;908:61;961:7;952:6;941:9;937:22;908:61;:::i;:::-;898:71;;854:125;782:204;;;;:::o;992:262::-;1051:6;1100:2;1088:9;1079:7;1075:23;1071:32;1068:2;;;1116:1;1113;1106:12;1068:2;1159:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;:::i;:::-;1174:63;;1130:117;1058:196;;;;:::o;1260:118::-;1347:24;1365:5;1347:24;:::i;:::-;1342:3;1335:37;1325:53;;:::o;1384:373::-;1488:3;1516:38;1548:5;1516:38;:::i;:::-;1570:88;1651:6;1646:3;1570:88;:::i;:::-;1563:95;;1667:52;1712:6;1707:3;1700:4;1693:5;1689:16;1667:52;:::i;:::-;1744:6;1739:3;1735:16;1728:23;;1492:265;;;;;:::o;1763:157::-;1863:50;1907:5;1863:50;:::i;:::-;1858:3;1851:63;1841:79;;:::o;1926:366::-;2068:3;2089:67;2153:2;2148:3;2089:67;:::i;:::-;2082:74;;2165:93;2254:3;2165:93;:::i;:::-;2283:2;2278:3;2274:12;2267:19;;2072:220;;;:::o;2298:366::-;2440:3;2461:67;2525:2;2520:3;2461:67;:::i;:::-;2454:74;;2537:93;2626:3;2537:93;:::i;:::-;2655:2;2650:3;2646:12;2639:19;;2444:220;;;:::o;2670:118::-;2757:24;2775:5;2757:24;:::i;:::-;2752:3;2745:37;2735:53;;:::o;2794:271::-;2924:3;2946:93;3035:3;3026:6;2946:93;:::i;:::-;2939:100;;3056:3;3049:10;;2928:137;;;;:::o;3071:442::-;3220:4;3258:2;3247:9;3243:18;3235:26;;3271:71;3339:1;3328:9;3324:17;3315:6;3271:71;:::i;:::-;3352:72;3420:2;3409:9;3405:18;3396:6;3352:72;:::i;:::-;3434;3502:2;3491:9;3487:18;3478:6;3434:72;:::i;:::-;3225:288;;;;;;:::o;3519:248::-;3625:4;3663:2;3652:9;3648:18;3640:26;;3676:84;3757:1;3746:9;3742:17;3733:6;3676:84;:::i;:::-;3630:137;;;;:::o;3773:419::-;3939:4;3977:2;3966:9;3962:18;3954:26;;4026:9;4020:4;4016:20;4012:1;4001:9;3997:17;3990:47;4054:131;4180:4;4054:131;:::i;:::-;4046:139;;3944:248;;;:::o;4198:419::-;4364:4;4402:2;4391:9;4387:18;4379:26;;4451:9;4445:4;4441:20;4437:1;4426:9;4422:17;4415:47;4479:131;4605:4;4479:131;:::i;:::-;4471:139;;4369:248;;;:::o;4623:222::-;4716:4;4754:2;4743:9;4739:18;4731:26;;4767:71;4835:1;4824:9;4820:17;4811:6;4767:71;:::i;:::-;4721:124;;;;:::o;4851:98::-;4902:6;4936:5;4930:12;4920:22;;4909:40;;;:::o;4955:147::-;5056:11;5093:3;5078:18;;5068:34;;;;:::o;5108:169::-;5192:11;5226:6;5221:3;5214:19;5266:4;5261:3;5257:14;5242:29;;5204:73;;;;:::o;5283:191::-;5323:4;5343:20;5361:1;5343:20;:::i;:::-;5338:25;;5377:20;5395:1;5377:20;:::i;:::-;5372:25;;5416:1;5413;5410:8;5407:2;;;5421:18;;:::i;:::-;5407:2;5466:1;5463;5459:9;5451:17;;5328:146;;;;:::o;5480:96::-;5517:7;5546:24;5564:5;5546:24;:::i;:::-;5535:35;;5525:51;;;:::o;5582:90::-;5616:7;5659:5;5652:13;5645:21;5634:32;;5624:48;;;:::o;5678:126::-;5715:7;5755:42;5748:5;5744:54;5733:65;;5723:81;;;:::o;5810:77::-;5847:7;5876:5;5865:16;;5855:32;;;:::o;5893:152::-;5956:9;5989:50;6033:5;5989:50;:::i;:::-;5976:63;;5966:79;;;:::o;6051:126::-;6114:9;6147:24;6165:5;6147:24;:::i;:::-;6134:37;;6124:53;;;:::o;6183:307::-;6251:1;6261:113;6275:6;6272:1;6269:13;6261:113;;;6360:1;6355:3;6351:11;6345:18;6341:1;6336:3;6332:11;6325:39;6297:2;6294:1;6290:10;6285:15;;6261:113;;;6392:6;6389:1;6386:13;6383:2;;;6472:1;6463:6;6458:3;6454:16;6447:27;6383:2;6232:258;;;;:::o;6496:180::-;6544:77;6541:1;6534:88;6641:4;6638:1;6631:15;6665:4;6662:1;6655:15;6682:223;6822:34;6818:1;6810:6;6806:14;6799:58;6891:6;6886:2;6878:6;6874:15;6867:31;6788:117;:::o;6911:181::-;7051:33;7047:1;7039:6;7035:14;7028:57;7017:75;:::o;7098:122::-;7171:24;7189:5;7171:24;:::i;:::-;7164:5;7161:35;7151:2;;7210:1;7207;7200:12;7151:2;7141:79;:::o;7226:116::-;7296:21;7311:5;7296:21;:::i;:::-;7289:5;7286:32;7276:2;;7332:1;7329;7322:12;7276:2;7266:76;:::o;7348:122::-;7421:24;7439:5;7421:24;:::i;:::-;7414:5;7411:35;7401:2;;7460:1;7457;7450:12;7401:2;7391:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "404200",
								"executionCost": "41330",
								"totalCost": "445530"
							},
							"external": {
								"PRESALE_INFO()": "1249",
								"backToken()": "infinite",
								"depodit(uint256)": "infinite",
								"getBalance(address)": "1423",
								"transferETH(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 3441,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2785,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2734,
									"end": 2776,
									"name": "PUSH",
									"source": 1,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": 2704,
									"end": 2716,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2704,
									"end": 2724,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2704,
									"end": 2724,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2724,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2777,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 3441,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eac1dc8abd239af3dc8e7a16f53f1a2d12567ea5128523c3c7865216a404824464736f6c63430008040033",
									".code": [
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "3F74AA38"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "4329DB46"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "79647833"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3398,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2940,
											"end": 2952,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2990,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3021,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3046,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2882,
											"end": 3061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 3061,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2882,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 3069,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3248,
											"end": 3276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3277,
											"end": 3298,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3180,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1298,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1351,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1441,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1425,
											"end": 1469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1425,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1413,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1391,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1542,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 702,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 516,
											"end": 518,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 564,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 554,
											"end": 566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 516,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 607,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 677,
											"end": 684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 668,
											"end": 674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 657,
											"end": 666,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 653,
											"end": 675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 632,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 622,
											"end": 685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 622,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 506,
											"end": 702,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 506,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 506,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 506,
											"end": 702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 506,
											"end": 702,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 986,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 708,
											"end": 986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 792,
											"end": 794,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 792,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 830,
											"end": 842,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 792,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 937,
											"end": 959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 898,
											"end": 969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 782,
											"end": 986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 986,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1103,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1118,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1229,
											"end": 1236,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1260,
											"end": 1378,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1260,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1757,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1384,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1516,
											"end": 1554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1554,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1516,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1649,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1570,
											"end": 1658,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1658,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1570,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1658,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1710,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1704,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1742,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1757,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1757,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1920,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1926,
											"end": 2292,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1926,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2148,
											"end": 2151,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2089,
											"end": 2156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2089,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2089,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2082,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2082,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2165,
											"end": 2258,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2165,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2072,
											"end": 2292,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2298,
											"end": 2664,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2298,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2525,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2461,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2461,
											"end": 2528,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2461,
											"end": 2528,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2461,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2537,
											"end": 2630,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2537,
											"end": 2630,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2537,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2670,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2670,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2757,
											"end": 2781,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2781,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2757,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2794,
											"end": 3065,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2794,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3035,
											"end": 3038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2946,
											"end": 3039,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2946,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2946,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3056,
											"end": 3059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3065,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3065,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3071,
											"end": 3513,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3071,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3260,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3337,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3420,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3352,
											"end": 3424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3424,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3352,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3502,
											"end": 3504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3500,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3484,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3513,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3519,
											"end": 3767,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3519,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3742,
											"end": 3759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3676,
											"end": 3760,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3676,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3767,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3767,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3767,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3954,
											"end": 3980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3954,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4012,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4180,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 4192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 4192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 4192,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4198,
											"end": 4617,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4198,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4461,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4415,
											"end": 4462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4605,
											"end": 4609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4479,
											"end": 4610,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4479,
											"end": 4610,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4479,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4471,
											"end": 4610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4471,
											"end": 4610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4617,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4617,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4623,
											"end": 4845,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4623,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4739,
											"end": 4757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 4757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 4757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4767,
											"end": 4838,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4767,
											"end": 4838,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4767,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4845,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4845,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4845,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4851,
											"end": 4949,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4851,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4942,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4949,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4955,
											"end": 5102,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4955,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5102,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5102,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5108,
											"end": 5277,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5108,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5192,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5261,
											"end": 5264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5242,
											"end": 5271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5242,
											"end": 5271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5277,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5277,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5283,
											"end": 5474,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5283,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5343,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5343,
											"end": 5363,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5343,
											"end": 5363,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5343,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5377,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5397,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5410,
											"end": 5418,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5474,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5474,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5480,
											"end": 5576,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5480,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5546,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5576,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5582,
											"end": 5672,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5582,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5666,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5672,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5678,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5678,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5748,
											"end": 5753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 5798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5733,
											"end": 5798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5733,
											"end": 5798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5723,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5723,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5723,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5723,
											"end": 5804,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5810,
											"end": 5887,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5810,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5881,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 5887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 5887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 5887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 5887,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5893,
											"end": 6045,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5893,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6033,
											"end": 6038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5989,
											"end": 6039,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5989,
											"end": 6039,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5989,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6045,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6051,
											"end": 6177,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6051,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6165,
											"end": 6170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6134,
											"end": 6171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6134,
											"end": 6171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6177,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6183,
											"end": 6490,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6183,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6269,
											"end": 6282,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6358,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6351,
											"end": 6362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6342,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6325,
											"end": 6364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6297,
											"end": 6299,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6261,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6399,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6458,
											"end": 6461,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6474,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6496,
											"end": 6676,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6496,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6544,
											"end": 6621,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6541,
											"end": 6542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6645,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6631,
											"end": 6646,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6669,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6662,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6670,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6682,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6856,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 6818,
											"end": 6819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6799,
											"end": 6857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "PUSH",
											"source": 4,
											"value": "494C454400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 6884,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6867,
											"end": 6898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6905,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6911,
											"end": 7092,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6911,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7084,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7047,
											"end": 7048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7028,
											"end": 7085,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7092,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7098,
											"end": 7220,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 7098,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 7189,
											"end": 7194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 7171,
											"end": 7195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7171,
											"end": 7195,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 7171,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7196,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7200,
											"end": 7212,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7220,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7226,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7311,
											"end": 7316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7296,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7294,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7286,
											"end": 7318,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7266,
											"end": 7342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7266,
											"end": 7342,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7348,
											"end": 7470,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7348,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7439,
											"end": 7444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7414,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7446,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7401,
											"end": 7403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7403,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7401,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7391,
											"end": 7470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7391,
											"end": 7470,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"PRESALE_INFO()": "3f74aa38",
							"backToken()": "861faf5f",
							"depodit(uint256)": "79647833",
							"getBalance(address)": "f8b2cb4f",
							"transferETH(uint256)": "4329db46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PRESALE_INFO\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"B_TOKEN\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0xa5a0e871b1d1f3d0a5a4279c2fb55f19c5bd84e2ae9369d5f65cccc97ef12478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d16b3876e7f5643c0a4b28b10edf88e3f3111c2728ec119e9ff29a83bd87315f\",\"dweb:/ipfs/QmUjospyu3Ydw46mRnDRgUvfKkgZDoorNHJaokN7DxuGXM\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 186,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 91,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "PRESALE_INFO",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(PresaleInfo)88_storage"
							}
						],
						"types": {
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_struct(PresaleInfo)88_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleInfo",
								"members": [
									{
										"astId": 87,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "B_TOKEN",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)77"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 186,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db1a6cf6e5193bd685c6613e7f7fb973edd16b90eb8b80e64945282f3e9efb4264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db1a6cf6e5193bd685c6613e7f7fb973edd16b90eb8b80e64945282f3e9efb4264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB BYTE PUSH13 0xF6E5193BD685C6613E7F7FB973 0xED 0xD1 PUSH12 0x90EB8B80E64945282F3E9EFB TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "244:1892:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db1a6cf6e5193bd685c6613e7f7fb973edd16b90eb8b80e64945282f3e9efb4264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB BYTE PUSH13 0xF6E5193BD685C6613E7F7FB973 0xED 0xD1 PUSH12 0x90EB8B80E64945282F3E9EFB TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "244:1892:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db1a6cf6e5193bd685c6613e7f7fb973edd16b90eb8b80e64945282f3e9efb4264736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0",
							"usedErrors": []
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Presale": [
							175
						],
						"ReentrancyGuard": [
							215
						],
						"TransferHelper": [
							364
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 216,
							"src": "151:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 365,
							"src": "191:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "252:15:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "252:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								215
							],
							"name": "Presale",
							"nameLocation": "241:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Presale.PresaleInfo",
									"id": 88,
									"members": [
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "B_TOKEN",
											"nameLocation": "2616:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "2609:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 86,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 85,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "2609:6:1"
												},
												"referencedDeclaration": 77,
												"src": "2609:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleInfo",
									"nameLocation": "2586:11:1",
									"nodeType": "StructDefinition",
									"scope": 175,
									"src": "2579:52:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f74aa38",
									"id": 91,
									"mutability": "mutable",
									"name": "PRESALE_INFO",
									"nameLocation": "2658:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "2639:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleInfo_$88_storage",
										"typeString": "struct Presale.PresaleInfo"
									},
									"typeName": {
										"id": 90,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 89,
											"name": "PresaleInfo",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 88,
											"src": "2639:11:1"
										},
										"referencedDeclaration": 88,
										"src": "2639:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleInfo_$88_storage_ptr",
											"typeString": "struct Presale.PresaleInfo"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2693:92:1",
										"statements": [
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 94,
															"name": "PRESALE_INFO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2704:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleInfo_$88_storage",
																"typeString": "struct Presale.PresaleInfo storage ref"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "B_TOKEN",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "2704:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2734:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 97,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2727:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "2704:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2704:73:1"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2690:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:0:1"
									},
									"scope": 175,
									"src": "2679:106:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2871:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 115,
																		"name": "PRESALE_INFO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "2940:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleInfo_$88_storage",
																			"typeString": "struct Presale.PresaleInfo storage ref"
																		}
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "B_TOKEN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "2940:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2932:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2932:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2932:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 118,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2980:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2980:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 122,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3017:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$175",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$175",
																		"typeString": "contract Presale"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3009:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3009:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3009:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "3041:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 110,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "2882:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$364_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "2882:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2882:179:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "2882:179:1"
											}
										]
									},
									"functionSelector": "79647833",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 107,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 214,
												"src": "2858:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2858:12:1"
										}
									],
									"name": "depodit",
									"nameLocation": "2802:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2828:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2820:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:31:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2871:0:1"
									},
									"scope": 175,
									"src": "2793:276:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "3146:42:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 135,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3164:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3164:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 134,
												"id": 137,
												"nodeType": "Return",
												"src": "3157:23:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3086:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3105:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3097:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:18:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3137:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3136:9:1"
									},
									"scope": 175,
									"src": "3077:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "3237:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 150,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3285:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$175",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$175",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3277:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3277:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3277:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3277:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 144,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3256:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3256:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3248:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3248:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3248:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3248:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3248:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "3248:51:1"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "3208:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:2:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:0:1"
									},
									"scope": 175,
									"src": "3199:108:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "3369:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3409:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3409:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 169,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "3421:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3409:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 163,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3388:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3388:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3380:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3380:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3380:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3380:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3380:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "3380:48:1"
											}
										]
									},
									"functionSelector": "4329db46",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferETH",
									"nameLocation": "3324:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3344:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3336:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:16:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3369:0:1"
									},
									"scope": 175,
									"src": "3315:121:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 176,
							"src": "232:3209:1",
							"usedErrors": []
						}
					],
					"src": "93:3348:1"
				},
				"id": 1
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 181,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 179,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 180,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 184,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 182,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 194,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 215,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 198,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 199,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 208,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 210,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 214,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 216,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2621:2"
				},
				"id": 2
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							364
						]
					},
					"id": 365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:3",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 364,
							"linearizedBaseContracts": [
								364
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "380:284:3",
										"statements": [
											{
												"assignments": [
													228,
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "392:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 227,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "406:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 229,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 236,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "487:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 237,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "491:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 233,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 231,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "427:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 242,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "541:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 243,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 230,
																					"src": "553:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 249,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 230,
																					"src": "584:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 251,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 250,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 252,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 247,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "519:137:3"
											}
										]
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "305:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "329:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "350:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:3"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:3"
									},
									"scope": 364,
									"src": "274:390:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1246:296:3",
										"statements": [
											{
												"assignments": [
													273,
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1263:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "1258:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 272,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1258:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1285:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "1272:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 274,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1272:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1341:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 281,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1353:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "1359:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 283,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "1363:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1318:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1318:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1318:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 276,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1293:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1293:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1257:123:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 288,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "1413:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 289,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 275,
																					"src": "1425:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1425:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1440:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1425:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 295,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 275,
																					"src": "1456:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 297,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1463:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 296,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1463:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 298,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1462:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 293,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1445:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1445:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1425:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 301,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1424:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1413:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1485:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:143:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1391:143:3"
											}
										]
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1121:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1156:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1148:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1180:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1172:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1195:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1224:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1216:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:99:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:3"
									},
									"scope": 364,
									"src": "1112:430:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1733:400:3",
										"statements": [
											{
												"condition": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1748:8:3",
													"subExpression": {
														"id": 318,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1749:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 360,
													"nodeType": "Block",
													"src": "1809:317:3",
													"statements": [
														{
															"assignments": [
																328,
																330
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 328,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1830:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 360,
																	"src": "1825:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 327,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1825:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 330,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1852:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 360,
																	"src": "1839:17:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 329,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1839:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 340,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1912:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 336,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "1924:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 337,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "1928:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 333,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1889:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1889:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:45:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 331,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "1860:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1860:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:89:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1824:125:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 342,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "1990:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 354,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 346,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 343,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 330,
																								"src": "2002:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 344,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "2002:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2017:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2002:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 349,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 330,
																								"src": "2033:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 351,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2040:4:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 350,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2040:4:3",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 352,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2039:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 347,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "2022:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 348,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "2022:10:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2022:24:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2002:44:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 355,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2001:46:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1990:57:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2066:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 341,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1964:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:150:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 359,
															"nodeType": "ExpressionStatement",
															"src": "1964:150:3"
														}
													]
												},
												"id": 361,
												"nodeType": "IfStatement",
												"src": "1744:382:3",
												"trueBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "1758:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "1785:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 320,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "1773:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1773:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1773:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "1773:18:3"
														}
													]
												}
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1595:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1635:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1627:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1651:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1704:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:107:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:3"
									},
									"scope": 364,
									"src": "1586:547:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 365,
							"src": "244:1892:3",
							"usedErrors": []
						}
					],
					"src": "35:2103:3"
				},
				"id": 3
			}
		}
	}
}