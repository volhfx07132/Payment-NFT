{
	"id": "9073d2bec0a0a085f0e375cf12365a16",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\n\r\ncontract Presale is ReentrancyGuard{\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        IERC20 saleToken;\r\n        IERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 valueSwapERC20;\r\n        uint256 feeTransaction;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n        bool presaleIsBaseToken;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        bool isRefund;\r\n        bool isClaim;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numByer;\r\n        uint256 totalFee;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n\r\n    constructor() payable {\r\n        WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        IERC20 _saleToken,\r\n        IERC20 _baseTOken,\r\n        uint256[9] memory datas\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0];\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.valueSwapERC20 = datas[3];\r\n        saleInfor.feeTransaction = datas[4];\r\n        saleInfor.minSpendPerBuyer = datas[5];\r\n        saleInfor.maxSpendPerBuyer = datas[6];\r\n        saleInfor.refundFee = datas[7];\r\n        saleInfor.claimFee = datas[8];\r\n    } \r\n\r\n    function status() external view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    }\r\n\r\n    function depodit(uint256 value) external payable nonReentrant {}\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function transferETH(uint256 amount) external payable {\r\n        payable(msg.sender).transfer(msg.value - amount);\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    // function safeTransfer(\r\n    //     address token,\r\n    //     address to,\r\n    //     uint256 value\r\n    // ) internal {\r\n    //     (bool success, bytes memory data) = token.call(\r\n    //         abi.encodeWithSelector(0xa9059cbb, to, value)\r\n    //     );\r\n    //     require(\r\n    //         success && (data.length == 0 || abi.decode(data, (bool))),\r\n    //         \"TransferHelper: TRANSFER_FAILED\"\r\n    //     );\r\n    // }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRefund",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numByer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valueSwapERC20",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeTransaction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "presaleIsBaseToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":232:2957  contract Presale is ReentrancyGuard{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Ethereum/Presale.sol\":1388:1392  WETH */\n  0x16\n    /* \"Ethereum/Presale.sol\":1388:1445  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Ethereum/Presale.sol\":1402:1444  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n    /* \"Ethereum/Presale.sol\":1388:1445  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":232:2957  contract Presale is ReentrancyGuard{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":232:2957  contract Presale is ReentrancyGuard{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x861faf5f\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f1eae4c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x18856a2f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4329db46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x79647833\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1295:1321  SaleInfor public saleInfor */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sload(0x09)\n      sload(0x0a)\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      sload(0x15)\n      tag_15\n      swap13\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap13\n      dup2\n      and\n      swap12\n      and\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup14\n      jump\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2312:2344   */\n      swap15\n      dup16\n      and\n        /* \"#utility.yul\":2294:2345   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2381:2413   */\n      swap13\n      dup15\n      and\n        /* \"#utility.yul\":2376:2378   */\n      0x20\n        /* \"#utility.yul\":2361:2379   */\n      dup15\n      add\n        /* \"#utility.yul\":2354:2414   */\n      mstore\n        /* \"#utility.yul\":2450:2482   */\n      swap11\n      swap1\n      swap13\n      and\n        /* \"#utility.yul\":2430:2448   */\n      swap10\n      dup12\n      add\n        /* \"#utility.yul\":2423:2483   */\n      swap10\n      swap1\n      swap10\n      mstore\n        /* \"#utility.yul\":2514:2516   */\n      0x60\n        /* \"#utility.yul\":2499:2517   */\n      dup11\n      add\n        /* \"#utility.yul\":2492:2526   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":2557:2560   */\n      0x80\n        /* \"#utility.yul\":2542:2561   */\n      dup10\n      add\n        /* \"#utility.yul\":2535:2570   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":2332:2335   */\n      0xa0\n        /* \"#utility.yul\":2586:2605   */\n      dup9\n      add\n        /* \"#utility.yul\":2579:2614   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2645:2648   */\n      0xc0\n        /* \"#utility.yul\":2630:2649   */\n      dup8\n      add\n        /* \"#utility.yul\":2623:2658   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2689:2692   */\n      0xe0\n        /* \"#utility.yul\":2674:2693   */\n      dup7\n      add\n        /* \"#utility.yul\":2667:2702   */\n      mstore\n        /* \"#utility.yul\":2733:2736   */\n      0x0100\n        /* \"#utility.yul\":2718:2737   */\n      dup6\n      add\n        /* \"#utility.yul\":2711:2746   */\n      mstore\n        /* \"#utility.yul\":2777:2780   */\n      0x0120\n        /* \"#utility.yul\":2762:2781   */\n      dup5\n      add\n        /* \"#utility.yul\":2755:2790   */\n      mstore\n        /* \"#utility.yul\":2821:2824   */\n      0x0140\n        /* \"#utility.yul\":2806:2825   */\n      dup4\n      add\n        /* \"#utility.yul\":2799:2835   */\n      mstore\n        /* \"#utility.yul\":2866:2869   */\n      0x0160\n        /* \"#utility.yul\":2851:2870   */\n      dup3\n      add\n        /* \"#utility.yul\":2844:2880   */\n      mstore\n        /* \"#utility.yul\":2924:2939   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2917:2940   */\n      iszero\n        /* \"#utility.yul\":2911:2914   */\n      0x0180\n        /* \"#utility.yul\":2896:2915   */\n      dup3\n      add\n        /* \"#utility.yul\":2889:2941   */\n      mstore\n        /* \"#utility.yul\":2281:2284   */\n      0x01a0\n        /* \"#utility.yul\":2266:2285   */\n      add\n        /* \"Ethereum/Presale.sol\":1295:1321  SaleInfor public saleInfor */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":2176:2515  function status() external view returns(uint256) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":3679:3704   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x20\n        /* \"#utility.yul\":3652:3670   */\n      add\n        /* \"Ethereum/Presale.sol\":2176:2515  function status() external view returns(uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":3634:3710   */\n      jump\n        /* \"Ethereum/Presale.sol\":2833:2954  function transferETH(uint256 amount) external payable {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Ethereum/Presale.sol\":1205:1247  mapping(address => uint256) public userFee */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_20\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":2523:2587  function depodit(uint256 value) external payable nonReentrant {} */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":2717:2825  function backToken() external payable {\r... */\n    tag_7:\n      tag_24\n      tag_38\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1461:2167  function initialSaleInfor(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_24\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Ethereum/Presale.sol\":1644:1653  saleInfor */\n      0x09\n        /* \"Ethereum/Presale.sol\":1644:1682  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":1693:1712  saleInfor.saleToken */\n      0x0a\n        /* \"Ethereum/Presale.sol\":1693:1725  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup7\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Ethereum/Presale.sol\":1736:1755  saleInfor.baseToken */\n      0x0b\n        /* \"Ethereum/Presale.sol\":1736:1768  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap2\n      swap1\n      swap4\n      and\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":1802:1810  datas[0] */\n      dup1\n      mload\n        /* \"Ethereum/Presale.sol\":1779:1799  saleInfor.tokenPrice */\n      0x0c\n        /* \"Ethereum/Presale.sol\":1779:1810  saleInfor.tokenPrice = datas[0] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1802:1810  datas[0] */\n      0x20\n        /* \"Ethereum/Presale.sol\":1843:1851  datas[1] */\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1821:1840  saleInfor.startSale */\n      0x0d\n        /* \"Ethereum/Presale.sol\":1821:1851  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1882:1890  datas[2] */\n      0x40\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1862:1879  saleInfor.endSale */\n      0x0e\n        /* \"Ethereum/Presale.sol\":1862:1890  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1928:1936  datas[3] */\n      0x60\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1901:1925  saleInfor.valueSwapERC20 */\n      0x0f\n        /* \"Ethereum/Presale.sol\":1901:1936  saleInfor.valueSwapERC20 = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1974:1982  datas[4] */\n      0x80\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1947:1971  saleInfor.feeTransaction */\n      0x10\n        /* \"Ethereum/Presale.sol\":1947:1982  saleInfor.feeTransaction = datas[4] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2022:2030  datas[5] */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1993:2019  saleInfor.minSpendPerBuyer */\n      0x11\n        /* \"Ethereum/Presale.sol\":1993:2030  saleInfor.minSpendPerBuyer = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2070:2078  datas[6] */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2041:2067  saleInfor.maxSpendPerBuyer */\n      0x12\n        /* \"Ethereum/Presale.sol\":2041:2078  saleInfor.maxSpendPerBuyer = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2111:2119  datas[7] */\n      0xe0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2089:2108  saleInfor.refundFee */\n      0x13\n        /* \"Ethereum/Presale.sol\":2089:2119  saleInfor.refundFee = datas[7] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2151:2159  datas[8] */\n      0x0100\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2130:2148  saleInfor.claimFee */\n      0x14\n        /* \"Ethereum/Presale.sol\":2130:2159  saleInfor.claimFee = datas[8] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1461:2167  function initialSaleInfor(\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":1254:1288  PresaleStatus public presaleStatus */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sload(0x03)\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      tag_45\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      dup7\n      jump\n    tag_45:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4562:4587   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":4618:4620   */\n      0x20\n        /* \"#utility.yul\":4603:4621   */\n      dup8\n      add\n        /* \"#utility.yul\":4596:4630   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":4646:4664   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":4639:4673   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x60\n        /* \"#utility.yul\":4689:4707   */\n      dup5\n      add\n        /* \"#utility.yul\":4682:4716   */\n      mstore\n        /* \"#utility.yul\":4747:4750   */\n      0x80\n        /* \"#utility.yul\":4732:4751   */\n      dup4\n      add\n        /* \"#utility.yul\":4725:4760   */\n      mstore\n        /* \"#utility.yul\":4791:4794   */\n      0xa0\n        /* \"#utility.yul\":4776:4795   */\n      dup3\n      add\n        /* \"#utility.yul\":4769:4804   */\n      mstore\n        /* \"#utility.yul\":4549:4552   */\n      0xc0\n        /* \"#utility.yul\":4534:4553   */\n      add\n        /* \"Ethereum/Presale.sol\":1254:1288  PresaleStatus public presaleStatus */\n      tag_17\n        /* \"#utility.yul\":4516:4810   */\n      jump\n        /* \"Ethereum/Presale.sol\":1328:1346  IERC20 public WETH */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      sload(0x16)\n      tag_50\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3129:3161   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3111:3162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3099:3101   */\n      0x20\n        /* \"#utility.yul\":3084:3102   */\n      add\n        /* \"Ethereum/Presale.sol\":1328:1346  IERC20 public WETH */\n      tag_17\n        /* \"#utility.yul\":3066:3168   */\n      jump\n        /* \"Ethereum/Presale.sol\":1152:1198  mapping(address => BuyerInfo) public buyerInfo */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_56:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup7\n      jump\n    tag_55:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3990:4015   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":4046:4048   */\n      0x20\n        /* \"#utility.yul\":4031:4049   */\n      dup8\n      add\n        /* \"#utility.yul\":4024:4058   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":4074:4092   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":4067:4101   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4132:4134   */\n      0x60\n        /* \"#utility.yul\":4117:4135   */\n      dup5\n      add\n        /* \"#utility.yul\":4110:4144   */\n      mstore\n        /* \"#utility.yul\":4188:4202   */\n      iszero\n        /* \"#utility.yul\":4181:4203   */\n      iszero\n        /* \"#utility.yul\":4175:4178   */\n      0x80\n        /* \"#utility.yul\":4160:4179   */\n      dup4\n      add\n        /* \"#utility.yul\":4153:4204   */\n      mstore\n        /* \"#utility.yul\":4248:4262   */\n      iszero\n        /* \"#utility.yul\":4241:4263   */\n      iszero\n        /* \"#utility.yul\":4235:4238   */\n      0xa0\n        /* \"#utility.yul\":4220:4239   */\n      dup3\n      add\n        /* \"#utility.yul\":4213:4264   */\n      mstore\n        /* \"#utility.yul\":3977:3980   */\n      0xc0\n        /* \"#utility.yul\":3962:3981   */\n      add\n        /* \"Ethereum/Presale.sol\":1152:1198  mapping(address => BuyerInfo) public buyerInfo */\n      tag_17\n        /* \"#utility.yul\":3944:4270   */\n      jump\n        /* \"Ethereum/Presale.sol\":2595:2706  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_20\n      tag_62\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":2682:2698  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":2595:2706  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":2176:2515  function status() external view returns(uint256) {\r... */\n    tag_21:\n        /* \"Ethereum/Presale.sol\":2257:2276  saleInfor.startSale */\n      sload(0x0d)\n        /* \"Ethereum/Presale.sol\":2216:2223  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2239:2254  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2239:2276  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":2236:2508  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_66\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2300:2301  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2176:2515  function status() external view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2236:2508  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_66:\n        /* \"Ethereum/Presale.sol\":2367:2384  saleInfor.endSale */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":2349:2364  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2349:2384  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":2346:2497  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_68\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2412:2413  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":2176:2515  function status() external view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2346:2497  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_68:\n      pop\n        /* \"Ethereum/Presale.sol\":2470:2471  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":2176:2515  function status() external view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2833:2954  function transferETH(uint256 amount) external payable {\r... */\n    tag_27:\n        /* \"Ethereum/Presale.sol\":2906:2916  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":2898:2946  payable(msg.sender).transfer(msg.value - amount) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":2927:2945  msg.value - amount */\n      tag_71\n        /* \"Ethereum/Presale.sol\":2939:2945  amount */\n      dup4\n        /* \"Ethereum/Presale.sol\":2927:2936  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":2927:2945  msg.value - amount */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"Ethereum/Presale.sol\":2898:2946  payable(msg.sender).transfer(msg.value - amount) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n        /* \"Ethereum/Presale.sol\":2833:2954  function transferETH(uint256 amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2523:2587  function depodit(uint256 value) external payable nonReentrant {} */\n    tag_36:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3375:3377   */\n      0x20\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3357:3378   */\n      mstore\n        /* \"#utility.yul\":3414:3416   */\n      0x1f\n        /* \"#utility.yul\":3394:3412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3387:3417   */\n      mstore\n        /* \"#utility.yul\":3453:3486   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3433:3451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3426:3487   */\n      mstore\n        /* \"#utility.yul\":3504:3522   */\n      0x64\n      add\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":2523:2587  function depodit(uint256 value) external payable nonReentrant {} */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2717:2825  function backToken() external payable {\r... */\n    tag_38:\n        /* \"Ethereum/Presale.sol\":2766:2817  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":2774:2784  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":2795:2816  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":2766:2817  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":2795:2816  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":2774:2784  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":2766:2817  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n        /* \"Ethereum/Presale.sol\":2717:2825  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:271   */\n    tag_31:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_96:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_97\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":260:265   */\n      swap4\n        /* \"#utility.yul\":84:271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:1572   */\n    tag_42:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":474:477   */\n      0x0180\n        /* \"#utility.yul\":518:520   */\n      dup1\n        /* \"#utility.yul\":506:515   */\n      dup7\n        /* \"#utility.yul\":497:504   */\n      dup9\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:488   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":539:545   */\n      dup4\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":524:546   */\n      revert\n        /* \"#utility.yul\":486:488   */\n    tag_100:\n        /* \"#utility.yul\":583:592   */\n      dup6\n        /* \"#utility.yul\":570:593   */\n      calldataload\n        /* \"#utility.yul\":602:633   */\n      tag_101\n        /* \"#utility.yul\":627:632   */\n      dup2\n        /* \"#utility.yul\":602:633   */\n      tag_98\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":652:657   */\n      swap5\n      pop\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":715:733   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":702:734   */\n      calldataload\n        /* \"#utility.yul\":743:776   */\n      tag_102\n        /* \"#utility.yul\":702:734   */\n      dup2\n        /* \"#utility.yul\":743:776   */\n      tag_98\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":795:802   */\n      swap5\n      pop\n        /* \"#utility.yul\":854:856   */\n      0x40\n        /* \"#utility.yul\":839:857   */\n      dup8\n      add\n        /* \"#utility.yul\":826:858   */\n      calldataload\n        /* \"#utility.yul\":867:900   */\n      tag_103\n        /* \"#utility.yul\":826:858   */\n      dup2\n        /* \"#utility.yul\":867:900   */\n      tag_98\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":919:926   */\n      swap4\n      pop\n        /* \"#utility.yul\":964:967   */\n      0x7f\n        /* \"#utility.yul\":949:968   */\n      dup8\n      add\n        /* \"#utility.yul\":945:978   */\n      dup9\n      sgt\n        /* \"#utility.yul\":935:937   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":997:1003   */\n      dup3\n        /* \"#utility.yul\":989:995   */\n      dup4\n        /* \"#utility.yul\":982:1004   */\n      revert\n        /* \"#utility.yul\":935:937   */\n    tag_104:\n        /* \"#utility.yul\":1035:1037   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      mload\n        /* \"#utility.yul\":1077:1080   */\n      0x0120\n        /* \"#utility.yul\":1069:1075   */\n      dup2\n        /* \"#utility.yul\":1065:1081   */\n      add\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1135:1145   */\n      dup2\n        /* \"#utility.yul\":1132:1154   */\n      lt\n        /* \"#utility.yul\":1111:1129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1099:1109   */\n      dup3\n        /* \"#utility.yul\":1096:1130   */\n      gt\n        /* \"#utility.yul\":1093:1155   */\n      or\n        /* \"#utility.yul\":1090:1092   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1158:1176   */\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1194:1196   */\n      0x40\n        /* \"#utility.yul\":1187:1209   */\n      mstore\n        /* \"#utility.yul\":1229:1235   */\n      dup1\n        /* \"#utility.yul\":1270:1272   */\n      0x60\n        /* \"#utility.yul\":1255:1273   */\n      dup10\n      add\n        /* \"#utility.yul\":1288:1306   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":1285:1316   */\n      dup12\n      lt\n        /* \"#utility.yul\":1282:1284   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":1334:1340   */\n      dup6\n        /* \"#utility.yul\":1326:1332   */\n      dup7\n        /* \"#utility.yul\":1319:1341   */\n      revert\n        /* \"#utility.yul\":1282:1284   */\n    tag_108:\n        /* \"#utility.yul\":1361:1367   */\n      dup6\n        /* \"#utility.yul\":1352:1367   */\n      swap5\n      pop\n        /* \"#utility.yul\":1376:1541   */\n    tag_109:\n        /* \"#utility.yul\":1390:1394   */\n      0x09\n        /* \"#utility.yul\":1387:1388   */\n      dup6\n        /* \"#utility.yul\":1384:1395   */\n      lt\n        /* \"#utility.yul\":1376:1541   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1449:1466   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1437:1467   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1410:1411   */\n      0x01\n        /* \"#utility.yul\":1403:1412   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":1487:1499   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1519:1531   */\n      dup4\n      add\n        /* \"#utility.yul\":1376:1541   */\n      jump(tag_109)\n    tag_111:\n        /* \"#utility.yul\":1380:1383   */\n      pop\n      pop\n        /* \"#utility.yul\":1560:1566   */\n      dup1\n        /* \"#utility.yul\":1550:1566   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":454:1572   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1577:1767   */\n    tag_26:\n        /* \"#utility.yul\":1636:1642   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1677:1686   */\n      dup3\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1664:1687   */\n      sub\n        /* \"#utility.yul\":1660:1692   */\n      slt\n        /* \"#utility.yul\":1657:1659   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1710:1716   */\n      dup1\n        /* \"#utility.yul\":1702:1708   */\n      dup2\n        /* \"#utility.yul\":1695:1717   */\n      revert\n        /* \"#utility.yul\":1657:1659   */\n    tag_113:\n      pop\n        /* \"#utility.yul\":1738:1761   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1647:1767   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4815:5043   */\n    tag_72:\n        /* \"#utility.yul\":4855:4859   */\n      0x00\n        /* \"#utility.yul\":4883:4884   */\n      dup3\n        /* \"#utility.yul\":4880:4881   */\n      dup3\n        /* \"#utility.yul\":4877:4885   */\n      lt\n        /* \"#utility.yul\":4874:4876   */\n      iszero\n      tag_121\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4908:4942   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4965:4969   */\n      0x11\n        /* \"#utility.yul\":4962:4963   */\n      0x04\n        /* \"#utility.yul\":4955:4970   */\n      mstore\n        /* \"#utility.yul\":4996:5000   */\n      0x24\n        /* \"#utility.yul\":4915:4919   */\n      dup2\n        /* \"#utility.yul\":4983:5001   */\n      revert\n        /* \"#utility.yul\":4874:4876   */\n    tag_121:\n      pop\n        /* \"#utility.yul\":5028:5037   */\n      sub\n      swap1\n        /* \"#utility.yul\":4864:5043   */\n      jump\t// out\n        /* \"#utility.yul\":5048:5175   */\n    tag_107:\n        /* \"#utility.yul\":5109:5119   */\n      0x4e487b71\n        /* \"#utility.yul\":5104:5107   */\n      0xe0\n        /* \"#utility.yul\":5100:5120   */\n      shl\n        /* \"#utility.yul\":5097:5098   */\n      0x00\n        /* \"#utility.yul\":5090:5121   */\n      mstore\n        /* \"#utility.yul\":5140:5144   */\n      0x41\n        /* \"#utility.yul\":5137:5138   */\n      0x04\n        /* \"#utility.yul\":5130:5145   */\n      mstore\n        /* \"#utility.yul\":5164:5168   */\n      0x24\n        /* \"#utility.yul\":5161:5162   */\n      0x00\n        /* \"#utility.yul\":5154:5169   */\n      revert\n        /* \"#utility.yul\":5180:5311   */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5255:5286   */\n      dup2\n      and\n        /* \"#utility.yul\":5245:5287   */\n      dup2\n      eq\n        /* \"#utility.yul\":5235:5237   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":5301:5302   */\n      0x00\n        /* \"#utility.yul\":5298:5299   */\n      dup1\n        /* \"#utility.yul\":5291:5303   */\n      revert\n\n    auxdata: 0xa26469706673582212200b9db763049a351cdc94d18e8448a2cf594e0d10ea5451bcedb47358b155c09b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001600055601680546001600160a01b03191673c778417e063141139fce010982780140aa0cd5ab17905561063f8061003e6000396000f3fe60806040526004361061009c5760003560e01c8063861faf5f11610064578063861faf5f146101e95780638f1eae4c146101f1578063acfb235514610290578063ad5c4648146102e8578063e2d3f42314610320578063f8b2cb4f146103a657600080fd5b806318856a2f146100a1578063200d2ed2146101715780634329db461461019457806356c5f349146101a957806379647833146101d6575b600080fd5b3480156100ad57600080fd5b50600954600a54600b54600c54600d54600e54600f546010546011546012546013546014546015546100f99c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b34801561017d57600080fd5b506101866103ce565b604051908152602001610168565b6101a76101a23660046105a3565b6103f7565b005b3480156101b557600080fd5b506101866101c43660046104bf565b60026020526000908152604090205481565b6101a76101e43660046105a3565b610431565b6101a7610490565b3480156101fd57600080fd5b506101a761020c3660046104e2565b600980546001600160a01b03199081166001600160a01b0396871617909155600a8054821694861694909417909355600b8054909316919093161790558051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c081015160125560e08101516013556101000151601455565b34801561029c57600080fd5b506003546004546005546006546007546008546102bb95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610168565b3480156102f457600080fd5b50601654610308906001600160a01b031681565b6040516001600160a01b039091168152602001610168565b34801561032c57600080fd5b5061037561033b3660046104bf565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610168565b3480156103b257600080fd5b506101866103c13660046104bf565b6001600160a01b03163190565b600d546000904210156103e15750600090565b600e544211156103f15750600290565b50600190565b336108fc61040583346105bb565b6040518115909202916000818181858888f1935050505015801561042d573d6000803e3d6000fd5b5050565b600260005414156104885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b506001600055565b60405133904780156108fc02916000818181858888f193505050501580156104bc573d6000803e3d6000fd5b50565b6000602082840312156104d0578081fd5b81356104db816105f4565b9392505050565b6000806000806101808086880312156104f9578384fd5b8535610504816105f4565b9450602086810135610515816105f4565b94506040870135610525816105f4565b9350607f87018813610535578283fd5b604051610120810181811067ffffffffffffffff82111715610559576105596105de565b6040528060608901848a018b101561056f578586fd5b8594505b6009851015610592578035825260019490940193908301908301610573565b505080935050505092959194509250565b6000602082840312156105b4578081fd5b5035919050565b6000828210156105d957634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104bc57600080fdfea26469706673582212200b9db763049a351cdc94d18e8448a2cf594e0d10ea5451bcedb47358b155c09b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB OR SWAP1 SSTORE PUSH2 0x63F DUP1 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0xF9 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0xC SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xE SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x13 SSTORE PUSH2 0x100 ADD MLOAD PUSH1 0x14 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2BB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 SLOAD PUSH2 0x308 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x3E1 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x3F1 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x405 DUP4 CALLVALUE PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4DB DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4F9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x504 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x515 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x525 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x535 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x56F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x592 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP14 0xB7 PUSH4 0x49A351C 0xDC SWAP5 0xD1 DUP15 DUP5 0x48 LOG2 0xCF MSIZE 0x4E 0xD LT 0xEA SLOAD MLOAD 0xBC 0xED 0xB4 PUSH20 0x58B155C09B64736F6C6343000804003300000000 ",
							"sourceMap": "232:2725:1:-:0;;;1734:1:2;1845:7;:22;1388:4:1;:57;;-1:-1:-1;;;;;;1388:57:1;1402:42;1388:57;;;232:2725;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5313:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:257:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:13:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "474:3:4",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "468:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "531:6:4"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "518:2:4"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:4"
															},
															"nodeType": "YulIf",
															"src": "486:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "557:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "583:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "570:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "561:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "627:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "602:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "652:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "666:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "676:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "670:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "702:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:32:4"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "691:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "743:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "785:17:4",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "795:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "811:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "826:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:4"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "815:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "892:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "867:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:17:4",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "919:7:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "989:6:4"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "997:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "964:3:4",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "949:19:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:33:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:41:4"
															},
															"nodeType": "YulIf",
															"src": "935:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1015:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1019:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1047:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:3:4",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:16:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1051:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1158:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1099:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1096:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1135:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1132:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1093:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:62:4"
															},
															"nodeType": "YulIf",
															"src": "1090:2:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1198:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:22:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1218:17:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1229:6:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1222:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1244:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:18:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1248:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1326:6:4"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1334:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1292:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1303:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1308:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1285:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:31:4"
															},
															"nodeType": "YulIf",
															"src": "1282:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1352:15:4",
															"value": {
																"name": "value3",
																"nodeType": "YulIdentifier",
																"src": "1361:6:4"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1356:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1423:118:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1444:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:4"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1449:12:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1449:17:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1437:30:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1437:30:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1480:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1496:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1487:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1480:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1512:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1523:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1528:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1519:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1519:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1512:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1387:1:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:4:4",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1384:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:11:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1396:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1398:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1407:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1403:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1403:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1398:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1380:3:4",
																"statements": []
															},
															"src": "1376:165:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:16:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1560:6:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:4",
														"type": ""
													}
												],
												"src": "276:1296:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1647:120:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1693:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1702:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1710:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1695:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1695:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1695:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1677:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1660:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:32:4"
															},
															"nodeType": "YulIf",
															"src": "1657:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1751:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1738:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1613:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1624:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1636:6:4",
														"type": ""
													}
												],
												"src": "1577:190:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:699:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2258:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2270:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2281:3:4",
																		"type": "",
																		"value": "416"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2258:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2316:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2332:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2337:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2328:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2328:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2341:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2324:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2324:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2312:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2312:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2365:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2376:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2361:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2361:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2385:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2401:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2406:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2397:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2397:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2410:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2393:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2393:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2381:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2381:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2354:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:60:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2354:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2470:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2475:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2466:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2466:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2479:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2462:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2462:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2450:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2423:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:60:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2423:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2503:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2514:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2519:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2546:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2557:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2542:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2542:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2563:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2535:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2590:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2601:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2586:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2586:19:4"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2607:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2579:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2579:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2645:3:4",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2630:19:4"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "2651:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2623:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2678:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2689:3:4",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:19:4"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2667:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2722:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2733:3:4",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2718:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2718:19:4"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "2739:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2711:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2777:3:4",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2762:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2762:19:4"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2755:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2810:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2821:3:4",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2806:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2806:19:4"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "2827:7:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2799:36:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:3:4",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:19:4"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "2872:7:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:36:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:3:4",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2896:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2896:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value12",
																						"nodeType": "YulIdentifier",
																						"src": "2931:7:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2924:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2924:15:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2917:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:52:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2118:9:4",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "2129:7:4",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "2138:7:4",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "2147:7:4",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "2156:6:4",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "2164:6:4",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2172:6:4",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2180:6:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2188:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2196:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2204:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2212:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2220:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2228:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2239:4:4",
														"type": ""
													}
												],
												"src": "1772:1175:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3066:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3076:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3118:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3133:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3149:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3154:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3145:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3145:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3158:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3141:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3111:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3035:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3046:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3057:4:4",
														"type": ""
													}
												],
												"src": "2952:216:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3364:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3448:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3433:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3453:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:61:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:61:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3496:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3508:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3504:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3504:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3496:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3324:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3338:4:4",
														"type": ""
													}
												],
												"src": "3173:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3634:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3644:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3656:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3652:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3644:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3686:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3697:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3603:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3614:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3625:4:4",
														"type": ""
													}
												],
												"src": "3533:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3944:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3954:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3966:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3977:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3962:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3954:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3997:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4008:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3990:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4035:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4046:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4031:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4051:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4024:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4024:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4089:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4094:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4121:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4132:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4117:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4117:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4137:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4110:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4110:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4164:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4175:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4160:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "4195:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4188:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4188:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4181:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4181:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4153:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4153:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4224:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4235:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4220:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4220:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4248:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4248:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4241:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4241:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4213:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4213:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3873:9:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3884:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3892:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3900:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3908:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3916:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3924:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3935:4:4",
														"type": ""
													}
												],
												"src": "3715:555:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4516:294:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4526:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4538:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4549:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4534:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4526:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4569:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4580:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4562:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4607:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4618:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4603:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4603:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4596:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4596:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4596:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4650:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4661:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4666:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4639:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4639:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4709:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4736:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4747:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4753:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4780:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4791:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4776:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4776:19:4"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4797:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4769:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4769:35:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4445:9:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4456:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4464:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4472:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4480:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4488:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4496:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4507:4:4",
														"type": ""
													}
												],
												"src": "4275:535:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4864:179:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4894:117:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "4915:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4925:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4930:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4921:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4921:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4908:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4908:34:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4908:34:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4962:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4965:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4955:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "4990:4:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4996:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4983:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4983:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4983:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4880:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4877:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:8:4"
															},
															"nodeType": "YulIf",
															"src": "4874:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5020:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5032:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5035:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5028:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5020:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4846:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4849:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4855:4:4",
														"type": ""
													}
												],
												"src": "4815:228:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5104:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5109:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5090:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5137:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5164:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5154:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5048:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5225:86:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5289:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5301:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5291:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5291:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5248:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5259:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5274:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5279:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5270:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5270:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5283:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "5266:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5266:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5255:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5255:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5245:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:50:4"
															},
															"nodeType": "YulIf",
															"src": "5235:2:4"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5214:5:4",
														"type": ""
													}
												],
												"src": "5180:131:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _2 := 32\n        let value_1 := calldataload(add(headStart, _2))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        if gt(add(headStart, _1), dataEnd) { revert(value3, value3) }\n        let i := value3\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), iszero(iszero(value12)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009c5760003560e01c8063861faf5f11610064578063861faf5f146101e95780638f1eae4c146101f1578063acfb235514610290578063ad5c4648146102e8578063e2d3f42314610320578063f8b2cb4f146103a657600080fd5b806318856a2f146100a1578063200d2ed2146101715780634329db461461019457806356c5f349146101a957806379647833146101d6575b600080fd5b3480156100ad57600080fd5b50600954600a54600b54600c54600d54600e54600f546010546011546012546013546014546015546100f99c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b34801561017d57600080fd5b506101866103ce565b604051908152602001610168565b6101a76101a23660046105a3565b6103f7565b005b3480156101b557600080fd5b506101866101c43660046104bf565b60026020526000908152604090205481565b6101a76101e43660046105a3565b610431565b6101a7610490565b3480156101fd57600080fd5b506101a761020c3660046104e2565b600980546001600160a01b03199081166001600160a01b0396871617909155600a8054821694861694909417909355600b8054909316919093161790558051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c081015160125560e08101516013556101000151601455565b34801561029c57600080fd5b506003546004546005546006546007546008546102bb95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610168565b3480156102f457600080fd5b50601654610308906001600160a01b031681565b6040516001600160a01b039091168152602001610168565b34801561032c57600080fd5b5061037561033b3660046104bf565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610168565b3480156103b257600080fd5b506101866103c13660046104bf565b6001600160a01b03163190565b600d546000904210156103e15750600090565b600e544211156103f15750600290565b50600190565b336108fc61040583346105bb565b6040518115909202916000818181858888f1935050505015801561042d573d6000803e3d6000fd5b5050565b600260005414156104885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b506001600055565b60405133904780156108fc02916000818181858888f193505050501580156104bc573d6000803e3d6000fd5b50565b6000602082840312156104d0578081fd5b81356104db816105f4565b9392505050565b6000806000806101808086880312156104f9578384fd5b8535610504816105f4565b9450602086810135610515816105f4565b94506040870135610525816105f4565b9350607f87018813610535578283fd5b604051610120810181811067ffffffffffffffff82111715610559576105596105de565b6040528060608901848a018b101561056f578586fd5b8594505b6009851015610592578035825260019490940193908301908301610573565b505080935050505092959194509250565b6000602082840312156105b4578081fd5b5035919050565b6000828210156105d957634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104bc57600080fdfea26469706673582212200b9db763049a351cdc94d18e8448a2cf594e0d10ea5451bcedb47358b155c09b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0xF9 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0xC SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xE SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x13 SSTORE PUSH2 0x100 ADD MLOAD PUSH1 0x14 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2BB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 SLOAD PUSH2 0x308 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x3E1 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x3F1 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x405 DUP4 CALLVALUE PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4DB DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4F9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x504 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x515 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x525 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x535 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x56F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x592 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP14 0xB7 PUSH4 0x49A351C 0xDC SWAP5 0xD1 DUP15 DUP5 0x48 LOG2 0xCF MSIZE 0x4E 0xD LT 0xEA SLOAD MLOAD 0xBC 0xED 0xB4 PUSH20 0x58B155C09B64736F6C6343000804003300000000 ",
							"sourceMap": "232:2725:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:26;;;;;;;;;;-1:-1:-1;1295:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1295:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2312:32:4;;;2294:51;;2381:32;;;2376:2;2361:18;;2354:60;2450:32;;;;2430:18;;;2423:60;;;;2514:2;2499:18;;2492:34;;;;2557:3;2542:19;;2535:35;;;;2332:3;2586:19;;2579:35;;;;2645:3;2630:19;;2623:35;;;;2689:3;2674:19;;2667:35;2733:3;2718:19;;2711:35;2777:3;2762:19;;2755:35;2821:3;2806:19;;2799:36;2866:3;2851:19;;2844:36;2924:15;;2917:23;2911:3;2896:19;;2889:52;2281:3;2266:19;1295:26:1;;;;;;;;2176:339;;;;;;;;;;;;;:::i;:::-;;;3679:25:4;;;3667:2;3652:18;2176:339:1;3634:76:4;2833:121:1;;;;;;:::i;:::-;;:::i;:::-;;1205:42;;;;;;;;;;-1:-1:-1;1205:42:1;;;;;:::i;:::-;;;;;;;;;;;;;;2523:64;;;;;;:::i;:::-;;:::i;2717:108::-;;;:::i;1461:706::-;;;;;;;;;;-1:-1:-1;1461:706:1;;;;;:::i;:::-;1644:9;:38;;-1:-1:-1;;;;;;1644:38:1;;;-1:-1:-1;;;;;1644:38:1;;;;;;;1693:19;:32;;;;;;;;;;;;;;1736:19;:32;;;;;;;;;;;;1802:8;;1779:20;:31;1802:8;1843;;;1821:19;:30;1882:8;;;;1862:17;:28;1928:8;;;;1901:24;:35;1974:8;;;;1947:24;:35;2022:8;;;;1993:26;:37;2070:8;;;;2041:26;:37;2111:8;;;;2089:19;:30;2151:8;;;2130:18;:29;1461:706;1254:34;;;;;;;;;;-1:-1:-1;1254:34:1;;;;;;;;;;;;;;;;;;;;;;;;;4562:25:4;;;4618:2;4603:18;;4596:34;;;;4646:18;;;4639:34;;;;4704:2;4689:18;;4682:34;4747:3;4732:19;;4725:35;4791:3;4776:19;;4769:35;4549:3;4534:19;1254:34:1;4516:294:4;1328:18:1;;;;;;;;;;-1:-1:-1;1328:18:1;;;;-1:-1:-1;;;;;1328:18:1;;;;;;-1:-1:-1;;;;;3129:32:4;;;3111:51;;3099:2;3084:18;1328::1;3066:102:4;1152:46:1;;;;;;;;;;-1:-1:-1;1152:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3990:25:4;;;4046:2;4031:18;;4024:34;;;;4074:18;;;4067:34;;;;4132:2;4117:18;;4110:34;4188:14;4181:22;4175:3;4160:19;;4153:51;4248:14;4241:22;4235:3;4220:19;;4213:51;3977:3;3962:19;1152:46:1;3944:326:4;2595:111:1;;;;;;;;;;-1:-1:-1;2595:111:1;;;;;:::i;:::-;-1:-1:-1;;;;;2682:16:1;;;2595:111;2176:339;2257:19;;2216:7;;2239:15;:37;2236:272;;;-1:-1:-1;2300:1:1;;2176:339::o;2236:272::-;2367:17;;2349:15;:35;2346:151;;;-1:-1:-1;2412:1:1;;2176:339::o;2346:151::-;-1:-1:-1;2470:1:1;;2176:339::o;2833:121::-;2906:10;2898:48;2927:18;2939:6;2927:9;:18;:::i;:::-;2898:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:121;:::o;2523:64::-;1778:1:2;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:2;;3375:2:4;2368:63:2;;;3357:21:4;3414:2;3394:18;;;3387:30;3453:33;3433:18;;;3426:61;3504:18;;2368:63:2;;;;;;;;-1:-1:-1;1734:1:2;2509:7;2688:22;2523:64:1:o;2717:108::-;2766:51;;2774:10;;2795:21;2766:51;;;;;;;;;2795:21;2774:10;2766:51;;;;;;;;;;;;;;;;;;;;;2717:108::o;14:257:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:4:o;276:1296::-;419:6;427;435;443;474:3;518:2;506:9;497:7;493:23;489:32;486:2;;;539:6;531;524:22;486:2;583:9;570:23;602:31;627:5;602:31;:::i;:::-;652:5;-1:-1:-1;676:2:4;715:18;;;702:32;743:33;702:32;743:33;:::i;:::-;795:7;-1:-1:-1;854:2:4;839:18;;826:32;867:33;826:32;867:33;:::i;:::-;919:7;-1:-1:-1;964:3:4;949:19;;945:33;-1:-1:-1;935:2:4;;997:6;989;982:22;935:2;1035;1029:9;1077:3;1069:6;1065:16;1147:6;1135:10;1132:22;1111:18;1099:10;1096:34;1093:62;1090:2;;;1158:18;;:::i;:::-;1194:2;1187:22;1229:6;1270:2;1255:18;;1288;;;1285:31;-1:-1:-1;1282:2:4;;;1334:6;1326;1319:22;1282:2;1361:6;1352:15;;1376:165;1390:4;1387:1;1384:11;1376:165;;;1449:17;;1437:30;;1410:1;1403:9;;;;;1487:12;;;;1519;;1376:165;;;1380:3;;1560:6;1550:16;;;;;454:1118;;;;;;;:::o;1577:190::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;-1:-1:-1;1738:23:4;;1647:120;-1:-1:-1;1647:120:4:o;4815:228::-;4855:4;4883:1;4880;4877:8;4874:2;;;-1:-1:-1;;;4908:34:4;;4965:4;4962:1;4955:15;4996:4;4915;4983:18;4874:2;-1:-1:-1;5028:9:4;;4864:179::o;5048:127::-;5109:10;5104:3;5100:20;5097:1;5090:31;5140:4;5137:1;5130:15;5164:4;5161:1;5154:15;5180:131;-1:-1:-1;;;;;5255:31:4;;5245:42;;5235:2;;5301:1;5298;5291:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "319800",
								"executionCost": "41173",
								"totalCost": "360973"
							},
							"external": {
								"WETH()": "1103",
								"backToken()": "infinite",
								"buyerInfo(address)": "4701",
								"depodit(uint256)": "21120",
								"getBalance(address)": "1172",
								"initialSaleInfor(address,address,address,uint256[9])": "infinite",
								"presaleStatus()": "5168",
								"saleInfor()": "10978",
								"status()": "1888",
								"transferETH(uint256)": "infinite",
								"userFee(address)": "1280"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 2957,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1388,
									"end": 1392,
									"name": "PUSH",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 1445,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1445,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 1445,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1402,
									"end": 1444,
									"name": "PUSH",
									"source": 1,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": 1388,
									"end": 1445,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1445,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1445,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2957,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b9db763049a351cdc94d18e8448a2cf594e0d10ea5451bcedb47358b155c09b64736f6c63430008040033",
									".code": [
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "8F1EAE4C"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "ACFB2355"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "AD5C4648"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "E2D3F423"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "18856A2F"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "200D2ED2"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "4329DB46"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "56C5F349"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "79647833"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2957,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "SWAP15",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "DUP16",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2413,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2413,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2413,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2560,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2542,
											"end": 2561,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2535,
											"end": 2570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 2586,
											"end": 2605,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2586,
											"end": 2605,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2674,
											"end": 2693,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2746,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2780,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2824,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2806,
											"end": 2825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2851,
											"end": 2870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 2940,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2914,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 2915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "PUSH",
											"source": 4,
											"value": "1A0"
										},
										{
											"begin": 2266,
											"end": 2285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3670,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3634,
											"end": 3710,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1682,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1755,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1862,
											"end": 1890,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1901,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1974,
											"end": 1982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1947,
											"end": 1982,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2019,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1993,
											"end": 2030,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2070,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2041,
											"end": 2078,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2111,
											"end": 2119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2089,
											"end": 2119,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2159,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2151,
											"end": 2159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2159,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2148,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2130,
											"end": 2159,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 2167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4587,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4587,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4747,
											"end": 4750,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4732,
											"end": 4751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4776,
											"end": 4795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4552,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 4534,
											"end": 4553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4516,
											"end": 4810,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3161,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3066,
											"end": 3168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4015,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4015,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4058,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4058,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4144,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4202,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4181,
											"end": 4203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4262,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4263,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4220,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4220,
											"end": 4239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3944,
											"end": 4270,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2706,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2257,
											"end": 2276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2254,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2276,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2508,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2236,
											"end": 2508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2236,
											"end": 2508,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2236,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2367,
											"end": 2384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2364,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2384,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2346,
											"end": 2497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2346,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2346,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2939,
											"end": 2945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2936,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2954,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 3416,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2816,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2816,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2825,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 84,
											"end": 271,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 271,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 486,
											"end": 488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 524,
											"end": 546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 486,
											"end": 488,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 583,
											"end": 592,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 570,
											"end": 593,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 715,
											"end": 733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 702,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 702,
											"end": 734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 795,
											"end": 802,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 826,
											"end": 858,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 826,
											"end": 858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 949,
											"end": 968,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 949,
											"end": 968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 945,
											"end": 978,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 935,
											"end": 937,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1129,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1130,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1093,
											"end": 1155,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 1316,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1692,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1717,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4815,
											"end": 5043,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4815,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 4881,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4885,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4969,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4962,
											"end": 4963,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4955,
											"end": 4970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4996,
											"end": 5000,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 5043,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5048,
											"end": 5175,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5048,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5119,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 5104,
											"end": 5107,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5100,
											"end": 5120,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5144,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5137,
											"end": 5138,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5130,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5168,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5169,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5311,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5180,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5255,
											"end": 5286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5287,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5235,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5235,
											"end": 5237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5291,
											"end": 5303,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"depodit(uint256)": "79647833",
							"getBalance(address)": "f8b2cb4f",
							"initialSaleInfor(address,address,address,uint256[9])": "8f1eae4c",
							"presaleStatus()": "acfb2355",
							"saleInfor()": "18856a2f",
							"status()": "200d2ed2",
							"transferETH(uint256)": "4329db46",
							"userFee(address)": "56c5f349"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRefund\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numByer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueSwapERC20\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"presaleIsBaseToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0xa6fec2847f0f3715a4610525fc7154a380a224493b4e1e91f719890481faf69e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0413c405e3da9f1af2da4155ed490e55330dde5d1bc5f220cf2150d4e41c7d14\",\"dweb:/ipfs/QmRin1VoMskAQjRLeHov4mbBdyLbxgQsu5uTLzKpkX14bq\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 367,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 144,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)126_storage)"
							},
							{
								"astId": 148,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 151,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(PresaleStatus)139_storage"
							},
							{
								"astId": 154,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(SaleInfor)113_storage"
							},
							{
								"astId": 157,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "22",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)126_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)126_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(BuyerInfo)126_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 115,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 117,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 119,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 121,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 123,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isRefund",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 125,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isClaim",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PresaleStatus)139_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 128,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 130,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 132,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 134,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 136,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numByer",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 138,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(SaleInfor)113_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 86,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 89,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 92,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 94,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 96,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 98,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 100,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "valueSwapERC20",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 102,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "feeTransaction",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 112,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleIsBaseToken",
										"offset": 0,
										"slot": "12",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "416"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 367,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1892:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0",
							"usedErrors": []
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Presale": [
							356
						],
						"ReentrancyGuard": [
							396
						],
						"TransferHelper": [
							545
						]
					},
					"id": 357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 397,
							"src": "151:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 546,
							"src": "191:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "252:15:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "252:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 356,
							"linearizedBaseContracts": [
								356,
								396
							],
							"name": "Presale",
							"nameLocation": "241:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 113,
									"members": [
										{
											"constant": false,
											"id": 86,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "318:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "302:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 85,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "302:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 89,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "348:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "341:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 88,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 87,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "341:6:1"
												},
												"referencedDeclaration": 77,
												"src": "341:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 92,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "375:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "368:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 91,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 90,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "368:6:1"
												},
												"referencedDeclaration": 77,
												"src": "368:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "403:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "395:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 93,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "395:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "432:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "424:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "424:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "460:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "452:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "452:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "valueSwapERC20",
											"nameLocation": "486:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "478:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "478:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "feeTransaction",
											"nameLocation": "519:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "511:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "511:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "552:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "544:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "544:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "587:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "579:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "622:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "614:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "614:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "650:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "642:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "642:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "presaleIsBaseToken",
											"nameLocation": "674:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 113,
											"src": "669:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 111,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "669:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "281:9:1",
									"nodeType": "StructDefinition",
									"scope": 356,
									"src": "274:426:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 126,
									"members": [
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "744:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 126,
											"src": "736:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "774:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 126,
											"src": "766:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "803:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 126,
											"src": "795:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "795:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "834:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 126,
											"src": "826:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 120,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "826:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "isRefund",
											"nameLocation": "868:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 126,
											"src": "863:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 122,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "863:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 125,
											"mutability": "mutable",
											"name": "isClaim",
											"nameLocation": "892:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 126,
											"src": "887:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 124,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "887:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "715:9:1",
									"nodeType": "StructDefinition",
									"scope": 356,
									"src": "708:199:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 139,
									"members": [
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "955:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 139,
											"src": "947:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 127,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "947:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "992:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 139,
											"src": "984:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "984:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1025:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 139,
											"src": "1017:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1017:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1062:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 139,
											"src": "1054:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1054:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "numByer",
											"nameLocation": "1098:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 139,
											"src": "1090:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1090:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "totalFee",
											"nameLocation": "1124:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 139,
											"src": "1116:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1116:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "922:13:1",
									"nodeType": "StructDefinition",
									"scope": 356,
									"src": "915:225:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 144,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1189:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "1152:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$126_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 140,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1160:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1152:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$126_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 142,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 141,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "1171:9:1"
											},
											"referencedDeclaration": 126,
											"src": "1171:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$126_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 148,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1240:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "1205:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 147,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1213:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1205:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1224:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 151,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1275:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "1254:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$139_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 150,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 149,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 139,
											"src": "1254:13:1"
										},
										"referencedDeclaration": 139,
										"src": "1254:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$139_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 154,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1312:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "1295:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 153,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 152,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "1295:9:1"
										},
										"referencedDeclaration": 113,
										"src": "1295:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$113_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 157,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1342:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "1328:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 156,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 155,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1328:6:1"
										},
										"referencedDeclaration": 77,
										"src": "1328:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1377:76:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1388:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1402:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 161,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1395:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1395:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1388:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1388:57:1"
											}
										]
									},
									"id": 167,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1366:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:1"
									},
									"scope": 356,
									"src": "1355:98:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "1633:534:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 182,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1644:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "1644:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1669:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1644:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1644:38:1"
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 188,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1693:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "1693:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 191,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "1715:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1693:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1693:32:1"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 194,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1736:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "1736:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 197,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1758:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1736:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "1736:32:1"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 200,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "1779:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 203,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1802:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 205,
														"indexExpression": {
															"hexValue": "30",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1808:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1802:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1779:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1779:31:1"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 208,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1821:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "1821:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 211,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1843:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 213,
														"indexExpression": {
															"hexValue": "31",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1849:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1843:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1821:30:1"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 216,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1862:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1862:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 219,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 221,
														"indexExpression": {
															"hexValue": "32",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1888:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1882:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1862:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1862:28:1"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 224,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1901:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "valueSwapERC20",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "1901:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1928:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 229,
														"indexExpression": {
															"hexValue": "33",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1934:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1928:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1901:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1901:35:1"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 232,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1947:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "1947:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 235,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1974:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 237,
														"indexExpression": {
															"hexValue": "34",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1980:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1974:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1947:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1947:35:1"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 240,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1993:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "1993:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 243,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 245,
														"indexExpression": {
															"hexValue": "35",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2028:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2022:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1993:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1993:37:1"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 248,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2041:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2041:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 251,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2070:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 253,
														"indexExpression": {
															"hexValue": "36",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2076:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2070:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2041:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2041:37:1"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 256,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2089:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "2089:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 259,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2111:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 261,
														"indexExpression": {
															"hexValue": "37",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2117:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2111:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2089:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2089:30:1"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 264,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2130:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2130:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 267,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2151:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 269,
														"indexExpression": {
															"hexValue": "38",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2157:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2151:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2130:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2130:29:1"
											}
										]
									},
									"functionSelector": "8f1eae4c",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "1470:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "1513:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1497:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "1544:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1537:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1537:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1537:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "1572:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1565:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1565:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "1611:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1593:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 176,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 178,
													"length": {
														"hexValue": "39",
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1601:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "1593:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:137:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:0:1"
									},
									"scope": 356,
									"src": "1461:706:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "2225:290:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 278,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2239:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2239:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 280,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2257:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "2257:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2239:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 298,
													"nodeType": "Block",
													"src": "2331:177:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 286,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2349:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2349:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 288,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "2367:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$113_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 98,
																	"src": "2367:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2349:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 296,
																"nodeType": "Block",
																"src": "2444:53:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2470:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 277,
																		"id": 295,
																		"nodeType": "Return",
																		"src": "2463:8:1"
																	}
																]
															},
															"id": 297,
															"nodeType": "IfStatement",
															"src": "2346:151:1",
															"trueBody": {
																"id": 293,
																"nodeType": "Block",
																"src": "2386:54:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 277,
																		"id": 292,
																		"nodeType": "Return",
																		"src": "2405:8:1"
																	}
																]
															}
														}
													]
												},
												"id": 299,
												"nodeType": "IfStatement",
												"src": "2236:272:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "2278:49:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2300:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 277,
															"id": 284,
															"nodeType": "Return",
															"src": "2293:8:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "2185:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2191:2:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "2216:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:9:1"
									},
									"scope": 356,
									"src": "2176:339:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "2585:2:1",
										"statements": []
									},
									"functionSelector": "79647833",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 305,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 395,
												"src": "2572:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2572:12:1"
										}
									],
									"name": "depodit",
									"nameLocation": "2532:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2548:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2540:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:15:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2585:0:1"
									},
									"scope": 356,
									"src": "2523:64:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2664:42:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 316,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2682:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2682:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 315,
												"id": 318,
												"nodeType": "Return",
												"src": "2675:23:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2604:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2623:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2615:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:18:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2655:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2654:9:1"
									},
									"scope": 356,
									"src": "2595:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2755:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2803:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$356",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$356",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2795:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 329,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2795:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2795:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2795:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 325,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2774:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2774:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2766:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 323,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2766:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2766:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2766:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2766:51:1"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "2726:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2755:0:1"
									},
									"scope": 356,
									"src": "2717:108:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "2887:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 348,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2927:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2927:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 350,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "2939:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2927:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 344,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2906:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2906:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2898:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 342,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2898:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2898:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2898:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2898:48:1"
											}
										]
									},
									"functionSelector": "4329db46",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferETH",
									"nameLocation": "2842:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:16:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2887:0:1"
									},
									"scope": 356,
									"src": "2833:121:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 357,
							"src": "232:2725:1",
							"usedErrors": []
						}
					],
					"src": "93:2864:1"
				},
				"id": 1
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 359,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 362,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 361,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 365,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 364,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 367,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 371,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 375,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 396,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 380,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 386,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 389,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 391,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 395,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 397,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2621:2"
				},
				"id": 2
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							545
						]
					},
					"id": 546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:3",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "380:284:3",
										"statements": [
											{
												"assignments": [
													409,
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "392:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 408,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "406:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 410,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 417,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "487:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 418,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "491:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "427:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 423,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "541:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 424,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "553:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "584:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 432,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 431,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 433,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 428,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "519:137:3"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "305:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "329:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "350:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:3"
									},
									"scope": 545,
									"src": "274:390:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1246:296:3",
										"statements": [
											{
												"assignments": [
													454,
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1263:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "1258:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 453,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1258:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1285:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "1272:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 455,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1272:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 467,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1341:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 462,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1353:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 463,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1359:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1363:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 459,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1318:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1318:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1318:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 457,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "1293:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1293:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1257:123:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 469,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "1413:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 470,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 456,
																					"src": "1425:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1425:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1440:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1425:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 476,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 456,
																					"src": "1456:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 478,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1463:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 477,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1463:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 479,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1462:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 474,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1445:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1445:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1425:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 482,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1424:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1413:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1485:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:143:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "1391:143:3"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1121:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1156:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1148:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1180:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1172:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1195:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1224:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1216:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:99:3"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:3"
									},
									"scope": 545,
									"src": "1112:430:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1733:400:3",
										"statements": [
											{
												"condition": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1748:8:3",
													"subExpression": {
														"id": 499,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "1749:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "1809:317:3",
													"statements": [
														{
															"assignments": [
																509,
																511
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 509,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1830:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 541,
																	"src": "1825:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1825:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 511,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1852:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 541,
																	"src": "1839:17:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1839:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 521,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1912:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 517,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 492,
																				"src": "1924:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 518,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 494,
																				"src": "1928:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 514,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1889:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1889:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:45:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 512,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "1860:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1860:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:89:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1824:125:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 523,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "1990:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 527,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 524,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 511,
																								"src": "2002:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 525,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "2002:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 526,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2017:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2002:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 530,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 511,
																								"src": "2033:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 532,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2040:4:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 531,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2040:4:3",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 533,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2039:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 528,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "2022:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 529,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "2022:10:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2022:24:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2002:44:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 536,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2001:46:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1990:57:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2066:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 522,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1964:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:150:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 540,
															"nodeType": "ExpressionStatement",
															"src": "1964:150:3"
														}
													]
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "1744:382:3",
												"trueBody": {
													"id": 507,
													"nodeType": "Block",
													"src": "1758:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "1785:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 501,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "1773:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1773:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1773:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "1773:18:3"
														}
													]
												}
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1595:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1635:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1627:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1651:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1704:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:107:3"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:3"
									},
									"scope": 545,
									"src": "1586:547:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 546,
							"src": "244:1892:3",
							"usedErrors": []
						}
					],
					"src": "35:2103:3"
				},
				"id": 3
			}
		}
	}
}