{
	"id": "bb05afb2f00ec4d6e76dc5c22cd5b144",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\n\r\ncontract Presale{\r\n\r\n    struct SaleInfor{\r\n        address presaleOwner;\r\n        IERC20 saleToken;\r\n        IERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 valueSwapERC20;\r\n        uint256 feeTransaction;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n    }\r\n\r\n    struct BuyerInfo{\r\n        address buyer;\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        bool isRefund;\r\n        bool isClaim;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numByer;\r\n        uint256 totalFee;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRefund",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":153:1155  contract Presale{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":153:1155  contract Presale{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x56c5f349\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1089:1131  mapping(address => uint256) public userFee */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":1036:1082  mapping(address => BuyerInfo) public buyerInfo */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":1089:1131  mapping(address => uint256) public userFee */\n    tag_8:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":1036:1082  mapping(address => BuyerInfo) public buyerInfo */\n    tag_13:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_19\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_22:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_23\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_17\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_24:\n        /* \"#utility.yul\":507:531   */\n      tag_26\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:653   */\n    tag_28:\n        /* \"#utility.yul\":625:646   */\n      tag_30\n        /* \"#utility.yul\":640:645   */\n      dup2\n        /* \"#utility.yul\":625:646   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":620:623   */\n      dup3\n        /* \"#utility.yul\":613:647   */\n      mstore\n        /* \"#utility.yul\":603:653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:777   */\n    tag_32:\n        /* \"#utility.yul\":746:770   */\n      tag_34\n        /* \"#utility.yul\":764:769   */\n      dup2\n        /* \"#utility.yul\":746:770   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":741:744   */\n      dup3\n        /* \"#utility.yul\":734:771   */\n      mstore\n        /* \"#utility.yul\":724:777   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":783:1645   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":1070:1073   */\n      0xe0\n        /* \"#utility.yul\":1059:1068   */\n      dup3\n        /* \"#utility.yul\":1055:1074   */\n      add\n        /* \"#utility.yul\":1047:1074   */\n      swap1\n      pop\n        /* \"#utility.yul\":1084:1155   */\n      tag_37\n        /* \"#utility.yul\":1152:1153   */\n      0x00\n        /* \"#utility.yul\":1141:1150   */\n      dup4\n        /* \"#utility.yul\":1137:1154   */\n      add\n        /* \"#utility.yul\":1128:1134   */\n      dup11\n        /* \"#utility.yul\":1084:1155   */\n      tag_24\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1165:1237   */\n      tag_38\n        /* \"#utility.yul\":1233:1235   */\n      0x20\n        /* \"#utility.yul\":1222:1231   */\n      dup4\n        /* \"#utility.yul\":1218:1236   */\n      add\n        /* \"#utility.yul\":1209:1215   */\n      dup10\n        /* \"#utility.yul\":1165:1237   */\n      tag_32\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1247:1319   */\n      tag_39\n        /* \"#utility.yul\":1315:1317   */\n      0x40\n        /* \"#utility.yul\":1304:1313   */\n      dup4\n        /* \"#utility.yul\":1300:1318   */\n      add\n        /* \"#utility.yul\":1291:1297   */\n      dup9\n        /* \"#utility.yul\":1247:1319   */\n      tag_32\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1329:1401   */\n      tag_40\n        /* \"#utility.yul\":1397:1399   */\n      0x60\n        /* \"#utility.yul\":1386:1395   */\n      dup4\n        /* \"#utility.yul\":1382:1400   */\n      add\n        /* \"#utility.yul\":1373:1379   */\n      dup8\n        /* \"#utility.yul\":1329:1401   */\n      tag_32\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1411:1484   */\n      tag_41\n        /* \"#utility.yul\":1479:1482   */\n      0x80\n        /* \"#utility.yul\":1468:1477   */\n      dup4\n        /* \"#utility.yul\":1464:1483   */\n      add\n        /* \"#utility.yul\":1455:1461   */\n      dup7\n        /* \"#utility.yul\":1411:1484   */\n      tag_32\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1494:1561   */\n      tag_42\n        /* \"#utility.yul\":1556:1559   */\n      0xa0\n        /* \"#utility.yul\":1545:1554   */\n      dup4\n        /* \"#utility.yul\":1541:1560   */\n      add\n        /* \"#utility.yul\":1532:1538   */\n      dup6\n        /* \"#utility.yul\":1494:1561   */\n      tag_28\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1571:1638   */\n      tag_43\n        /* \"#utility.yul\":1633:1636   */\n      0xc0\n        /* \"#utility.yul\":1622:1631   */\n      dup4\n        /* \"#utility.yul\":1618:1637   */\n      add\n        /* \"#utility.yul\":1609:1615   */\n      dup5\n        /* \"#utility.yul\":1571:1638   */\n      tag_28\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1037:1645   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1651:1873   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":1782:1784   */\n      0x20\n        /* \"#utility.yul\":1771:1780   */\n      dup3\n        /* \"#utility.yul\":1767:1785   */\n      add\n        /* \"#utility.yul\":1759:1785   */\n      swap1\n      pop\n        /* \"#utility.yul\":1795:1866   */\n      tag_45\n        /* \"#utility.yul\":1863:1864   */\n      0x00\n        /* \"#utility.yul\":1852:1861   */\n      dup4\n        /* \"#utility.yul\":1848:1865   */\n      add\n        /* \"#utility.yul\":1839:1845   */\n      dup5\n        /* \"#utility.yul\":1795:1866   */\n      tag_32\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1749:1873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1879:1975   */\n    tag_27:\n      0x00\n        /* \"#utility.yul\":1945:1969   */\n      tag_47\n        /* \"#utility.yul\":1963:1968   */\n      dup3\n        /* \"#utility.yul\":1945:1969   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1934:1969   */\n      swap1\n      pop\n        /* \"#utility.yul\":1924:1975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1981:2071   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2051:2064   */\n      iszero\n        /* \"#utility.yul\":2044:2065   */\n      iszero\n        /* \"#utility.yul\":2033:2065   */\n      swap1\n      pop\n        /* \"#utility.yul\":2023:2071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2077:2203   */\n    tag_48:\n      0x00\n        /* \"#utility.yul\":2154:2196   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2147:2152   */\n      dup3\n        /* \"#utility.yul\":2143:2197   */\n      and\n        /* \"#utility.yul\":2132:2197   */\n      swap1\n      pop\n        /* \"#utility.yul\":2122:2203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2286   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":2275:2280   */\n      dup2\n        /* \"#utility.yul\":2264:2280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2254:2286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2414   */\n    tag_20:\n        /* \"#utility.yul\":2365:2389   */\n      tag_53\n        /* \"#utility.yul\":2383:2388   */\n      dup2\n        /* \"#utility.yul\":2365:2389   */\n      tag_27\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2355:2390   */\n      eq\n        /* \"#utility.yul\":2345:2347   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2345:2347   */\n    tag_54:\n        /* \"#utility.yul\":2335:2414   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220875f40770aae74f303904bda2c8308f3cadde4489a572fb8949c524b759eef0164736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806356c5f3491461003b578063e2d3f4231461006b575b600080fd5b6100556004803603810190610050919061014a565b6100a1565b604051610062919061020f565b60405180910390f35b6100856004803603810190610080919061014a565b6100b9565b60405161009897969594939291906101a0565b60405180910390f35b60016020528060005260406000206000915090505481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16905087565b60008135905061014481610272565b92915050565b60006020828403121561015c57600080fd5b600061016a84828501610135565b91505092915050565b61017c8161022a565b82525050565b61018b8161023c565b82525050565b61019a81610268565b82525050565b600060e0820190506101b5600083018a610173565b6101c26020830189610191565b6101cf6040830188610191565b6101dc6060830187610191565b6101e96080830186610191565b6101f660a0830185610182565b61020360c0830184610182565b98975050505050505050565b60006020820190506102246000830184610191565b92915050565b600061023582610248565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61027b8161022a565b811461028657600080fd5b5056fea2646970667358221220875f40770aae74f303904bda2c8308f3cadde4489a572fb8949c524b759eef0164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144 DUP2 PUSH2 0x272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16A DUP5 DUP3 DUP6 ADD PUSH2 0x135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x23C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x173 JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x203 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x182 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x224 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP3 PUSH2 0x248 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x5F BLOCKHASH PUSH24 0xAAE74F303904BDA2C8308F3CADDE4489A572FB8949C524B PUSH22 0x9EEF0164736F6C634300080000330000000000000000 ",
							"sourceMap": "153:1002:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2417:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:2",
														"type": ""
													}
												],
												"src": "420:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "603:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "620:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "640:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "625:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "625:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "613:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "598:3:2",
														"type": ""
													}
												],
												"src": "544:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "724:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "741:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "746:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "746:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "734:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "712:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "719:3:2",
														"type": ""
													}
												],
												"src": "659:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1037:608:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1047:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1059:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1070:3:2",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1047:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1128:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1152:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1084:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1084:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1233:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1165:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1165:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1165:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1291:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1304:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1315:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1300:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1300:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1247:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1247:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1373:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1386:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1397:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1382:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1329:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1329:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1455:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1468:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1479:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1464:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1464:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1411:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:73:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:73:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1532:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1545:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1556:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1541:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1494:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:67:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1609:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1622:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1633:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1618:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1571:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "961:9:2",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "973:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "981:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "989:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "997:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1005:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1013:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1021:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1032:4:2",
														"type": ""
													}
												],
												"src": "783:862:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1749:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1759:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1771:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1782:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1767:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1863:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1795:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1795:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1733:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1744:4:2",
														"type": ""
													}
												],
												"src": "1651:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1924:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1934:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1963:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1945:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1934:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1906:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1916:7:2",
														"type": ""
													}
												],
												"src": "1879:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2033:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2058:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2051:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2033:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2005:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2015:7:2",
														"type": ""
													}
												],
												"src": "1981:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2147:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2132:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2104:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2114:7:2",
														"type": ""
													}
												],
												"src": "2077:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2275:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2236:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2246:7:2",
														"type": ""
													}
												],
												"src": "2209:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2335:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2392:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2394:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2394:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2358:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2383:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2365:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2365:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2355:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:43:2"
															},
															"nodeType": "YulIf",
															"src": "2345:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2328:5:2",
														"type": ""
													}
												],
												"src": "2292:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806356c5f3491461003b578063e2d3f4231461006b575b600080fd5b6100556004803603810190610050919061014a565b6100a1565b604051610062919061020f565b60405180910390f35b6100856004803603810190610080919061014a565b6100b9565b60405161009897969594939291906101a0565b60405180910390f35b60016020528060005260406000206000915090505481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16905087565b60008135905061014481610272565b92915050565b60006020828403121561015c57600080fd5b600061016a84828501610135565b91505092915050565b61017c8161022a565b82525050565b61018b8161023c565b82525050565b61019a81610268565b82525050565b600060e0820190506101b5600083018a610173565b6101c26020830189610191565b6101cf6040830188610191565b6101dc6060830187610191565b6101e96080830186610191565b6101f660a0830185610182565b61020360c0830184610182565b98975050505050505050565b60006020820190506102246000830184610191565b92915050565b600061023582610248565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61027b8161022a565b811461028657600080fd5b5056fea2646970667358221220875f40770aae74f303904bda2c8308f3cadde4489a572fb8949c524b759eef0164736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144 DUP2 PUSH2 0x272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16A DUP5 DUP3 DUP6 ADD PUSH2 0x135 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x23C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x173 JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x203 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x182 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x224 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP3 PUSH2 0x248 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x5F BLOCKHASH PUSH24 0xAAE74F303904BDA2C8308F3CADDE4489A572FB8949C524B PUSH22 0x9EEF0164736F6C634300080000330000000000000000 ",
							"sourceMap": "153:1002:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1089:42;;;;;;;;;;;;;;;;;:::o;1036:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:118::-;746:24;764:5;746:24;:::i;:::-;741:3;734:37;724:53;;:::o;783:862::-;;1070:3;1059:9;1055:19;1047:27;;1084:71;1152:1;1141:9;1137:17;1128:6;1084:71;:::i;:::-;1165:72;1233:2;1222:9;1218:18;1209:6;1165:72;:::i;:::-;1247;1315:2;1304:9;1300:18;1291:6;1247:72;:::i;:::-;1329;1397:2;1386:9;1382:18;1373:6;1329:72;:::i;:::-;1411:73;1479:3;1468:9;1464:19;1455:6;1411:73;:::i;:::-;1494:67;1556:3;1545:9;1541:19;1532:6;1494:67;:::i;:::-;1571;1633:3;1622:9;1618:19;1609:6;1571:67;:::i;:::-;1037:608;;;;;;;;;;:::o;1651:222::-;;1782:2;1771:9;1767:18;1759:26;;1795:71;1863:1;1852:9;1848:17;1839:6;1795:71;:::i;:::-;1749:124;;;;:::o;1879:96::-;;1945:24;1963:5;1945:24;:::i;:::-;1934:35;;1924:51;;;:::o;1981:90::-;;2058:5;2051:13;2044:21;2033:32;;2023:48;;;:::o;2077:126::-;;2154:42;2147:5;2143:54;2132:65;;2122:81;;;:::o;2209:77::-;;2275:5;2264:16;;2254:32;;;:::o;2292:122::-;2365:24;2383:5;2365:24;:::i;:::-;2358:5;2355:35;2345:2;;2404:1;2401;2394:12;2345:2;2335:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "140600",
								"executionCost": "183",
								"totalCost": "140783"
							},
							"external": {
								"buyerInfo(address)": "infinite",
								"userFee(address)": "1492"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 1155,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220875f40770aae74f303904bda2c8308f3cadde4489a572fb8949c524b759eef0164736f6c63430008000033",
									".code": [
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "56C5F349"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "E2D3F423"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 153,
											"end": 1155,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 653,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 544,
											"end": 653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 625,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 625,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 625,
											"end": 646,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 646,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 625,
											"end": 646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 620,
											"end": 623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 613,
											"end": 647,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 603,
											"end": 653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 603,
											"end": 653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 659,
											"end": 777,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 659,
											"end": 777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 746,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 764,
											"end": 769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 746,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 746,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 746,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 741,
											"end": 744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 777,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 783,
											"end": 1645,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 783,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 783,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1084,
											"end": 1155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1084,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1215,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1237,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1237,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1165,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1247,
											"end": 1319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1319,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1247,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1399,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1400,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1329,
											"end": 1401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1401,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1479,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1411,
											"end": 1484,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 1484,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1411,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1556,
											"end": 1559,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1494,
											"end": 1561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1494,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1571,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1645,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1651,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1651,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1795,
											"end": 1866,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1795,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1795,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1873,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1873,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 1975,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1879,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1945,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2064,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2071,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2077,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2077,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2197,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2203,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2286,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2390,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyerInfo(address)": "e2d3f423",
							"userFee(address)": "56c5f349"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRefund\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0x9abbf58fcb602a218ea9552af82f671a5f5096a810d6ec853faa908ceb1d4aa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a7336fc9828b2d403638a52778a7fccf2c4413371c32892de01d0bbd030ddd4\",\"dweb:/ipfs/QmcftFKKTZWPYyR6DgQBdiuiWfXc5RhDbdhV8WqYPBAa9x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 140,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)122_storage)"
							},
							{
								"astId": 144,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)122_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)122_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(BuyerInfo)122_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 109,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "buyer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 111,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 113,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 115,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 117,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 119,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isRefund",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 121,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isClaim",
										"offset": 1,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0"
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Presale": [
							145
						]
					},
					"id": 146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "Presale",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 107,
									"members": [
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "205:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 81,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "205:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "saleToken",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "236:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 84,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 83,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "236:6:1"
												},
												"referencedDeclaration": 77,
												"src": "236:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 88,
											"mutability": "mutable",
											"name": "baseToken",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "263:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 87,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 86,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "263:6:1"
												},
												"referencedDeclaration": 77,
												"src": "263:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 90,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "290:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 89,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "290:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 92,
											"mutability": "mutable",
											"name": "startSale",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "319:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 91,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "319:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "endSale",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "347:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 93,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "347:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "valueSwapERC20",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "373:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "373:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "feeTransaction",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "406:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "406:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "439:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "439:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "474:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "refundFee",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "509:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "509:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "claimFee",
											"nodeType": "VariableDeclaration",
											"scope": 107,
											"src": "537:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "537:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nodeType": "StructDefinition",
									"scope": 145,
									"src": "178:383:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 122,
									"members": [
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "buyer",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "596:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 108,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "596:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "620:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 110,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "620:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "650:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "650:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "679:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "679:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "710:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "710:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "isRefund",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "747:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 118,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "747:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "isClaim",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "771:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 120,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "771:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nodeType": "StructDefinition",
									"scope": 145,
									"src": "569:222:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 135,
									"members": [
										{
											"constant": false,
											"id": 124,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "831:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "831:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "868:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "868:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "901:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 127,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "901:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "938:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "938:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "numByer",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "974:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "974:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "totalFee",
											"nodeType": "VariableDeclaration",
											"scope": 135,
											"src": "1000:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1000:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nodeType": "StructDefinition",
									"scope": 145,
									"src": "799:225:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 140,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nodeType": "VariableDeclaration",
									"scope": 145,
									"src": "1036:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$122_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 139,
										"keyType": {
											"id": 136,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1044:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1036:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$122_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 138,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 137,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 122,
												"src": "1055:9:1"
											},
											"referencedDeclaration": 122,
											"src": "1055:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$122_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 144,
									"mutability": "mutable",
									"name": "userFee",
									"nodeType": "VariableDeclaration",
									"scope": 145,
									"src": "1089:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1097:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1089:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1108:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								}
							],
							"scope": 146,
							"src": "153:1002:1"
						}
					],
					"src": "93:1062:1"
				},
				"id": 1
			}
		}
	}
}