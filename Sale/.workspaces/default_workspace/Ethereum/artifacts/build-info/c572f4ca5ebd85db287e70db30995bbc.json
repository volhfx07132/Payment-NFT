{
	"id": "c572f4ca5ebd85db287e70db30995bbc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../ERC20/IERC20Metadata.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\nimport \"../Utils/Ownable.sol\";\r\nimport \"../Utils/SafeMath.sol\";\r\n\r\n\r\n\r\ncontract Presale is ReentrancyGuard, Ownable{\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n    using SafeMath for uint256;\r\n\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        IERC20 saleToken;\r\n        IERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 valueSwapToken;\r\n        uint256 feeTransaction;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n        bool saleIsBaseToken;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        bool isRefund;\r\n        bool isClaim;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numByer;\r\n        uint256 totalFee;\r\n        address[] admin;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n    uint256 public feeAnyone;\r\n    EnumerableSet.AddressSet private admins; \r\n\r\n    modifier onlyAdmin() {\r\n        require(admins.contains(_msgSender()), \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlySaleOwner() {\r\n        require(_msgSender() == saleInfor.presaleOwner, \"Not sale owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() payable {\r\n        WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n        admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD);\r\n        admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016);\r\n        feeAnyone = 20;\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        IERC20 _saleToken,\r\n        IERC20 _baseTOken,\r\n        uint256[9] memory datas\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0];\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.valueSwapToken = datas[3];\r\n        saleInfor.feeTransaction = datas[4];\r\n        saleInfor.minSpendPerBuyer = datas[5];\r\n        saleInfor.maxSpendPerBuyer = datas[6];\r\n        saleInfor.refundFee = datas[7];\r\n        saleInfor.claimFee = datas[8];\r\n        saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken);\r\n    } \r\n\r\n    function status() public view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    } \r\n\r\n    function checkAdminAddress() public view returns(bool) {\r\n        return admins.contains(_msgSender());\r\n    }\r\n\r\n    function depodit(uint256 _amount) external view returns(uint256) {\r\n        // require(status() == 1, \"NOT ACTIVE\"); // ACTIVE\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        uint256 amount_in = _amount;\r\n        uint256 real_amount_in = amount_in;\r\n        uint256 fee = 0;\r\n        uint256 fullPercenFee = 1000;\r\n        require(real_amount_in >= saleInfor.minSpendPerBuyer, \r\n                \"Not enough value\"\r\n        );\r\n        if(!checkAdminAddress()) {\r\n            real_amount_in = ((fullPercenFee.sub(feeAnyone))\r\n                             .mul(real_amount_in))\r\n                             .div(fullPercenFee);\r\n        }\r\n        uint256 remaining = saleInfor.maxSpendPerBuyer - real_amount_in;\r\n        uint256 tokenSold = (real_amount_in.mul(saleInfor.valueSwapToken));\r\n    }\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function transferETH(uint256 amount) external payable {\r\n        payable(msg.sender).transfer(msg.value - amount);\r\n    }\r\n\r\n    function getData(IERC20Metadata _address) public view returns(uint256) {\r\n        return  _address.decimals();\r\n    }  \r\n}"
			},
			"Utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"Utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    // function safeTransfer(\r\n    //     address token,\r\n    //     address to,\r\n    //     uint256 value\r\n    // ) internal {\r\n    //     (bool success, bytes memory data) = token.call(\r\n    //         abi.encodeWithSelector(0xa9059cbb, to, value)\r\n    //     );\r\n    //     require(\r\n    //         success && (data.length == 0 || abi.decode(data, (bool))),\r\n    //         \"TransferHelper: TRANSFER_FAILED\"\r\n    //     );\r\n    // }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint256);\r\n}\r\n"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    \r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			},
			"Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRefund",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkAdminAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeAnyone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Metadata",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numByer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valueSwapToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeTransaction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "saleIsBaseToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":378:4776  contract Presale is ReentrancyGuard, Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_9\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"Ethereum/Presale.sol\":1974:1978  WETH */\n  0x18\n    /* \"Ethereum/Presale.sol\":1974:2031  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n    /* \"Ethereum/Presale.sol\":1988:2030  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Ethereum/Presale.sol\":1974:2031  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":2042:2096  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  tag_11\n    /* \"Ethereum/Presale.sol\":2042:2048  admins */\n  0x1a\n    /* \"Ethereum/Presale.sol\":2053:2095  0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD */\n  0x6ccb41eeda5a073076f3e7dc1614c185b5fa41ed\n    /* \"Ethereum/Presale.sol\":2042:2052  admins.add */\n  tag_12\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_102\n  or\n    /* \"Ethereum/Presale.sol\":2042:2096  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  swap1\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"Ethereum/Presale.sol\":2107:2161  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  tag_13\n    /* \"Ethereum/Presale.sol\":2118:2160  0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016 */\n  0x4f0b12bbf40fc182559822a5b1db6d34dbc3e016\n    /* \"Ethereum/Presale.sol\":2107:2113  admins */\n  0x1a\n    /* \"Ethereum/Presale.sol\":2107:2117  admins.add */\n  or(tag_0_102, shl(0x20, tag_12))\n  swap1\n    /* \"Ethereum/Presale.sol\":2107:2161  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"Ethereum/Presale.sol\":2184:2186  20 */\n  0x14\n    /* \"Ethereum/Presale.sol\":2172:2181  feeAnyone */\n  0x19\n    /* \"Ethereum/Presale.sol\":2172:2186  feeAnyone = 20 */\n  sstore\n    /* \"Ethereum/Presale.sol\":378:4776  contract Presale is ReentrancyGuard, Ownable{\r... */\n  jump(tag_14)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_9:\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap2\n  and\n  swap2\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  swap1\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  dup3\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_12:\n    /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_18\n    /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n  tag_19\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_18:\n    /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_17:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\ntag_19:\n    /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  dup2\n  dup2\n  mstore\n    /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n  0x01\n  dup4\n  add\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n  tag_23\n  jumpi\n  pop\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n  dup5\n  sload\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n  jump(tag_17)\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\ntag_23:\n  pop\n    /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n  jump(tag_17)\n    /* \"Ethereum/Presale.sol\":378:4776  contract Presale is ReentrancyGuard, Ownable{\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":378:4776  contract Presale is ReentrancyGuard, Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x861faf5f\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xad5c4648\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcad5b0f7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x861faf5f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8f1eae4c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x4329db46\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x4329db46\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x79647833\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x18856a2f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38266b22\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3b5ef2ad\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1563:1589  SaleInfor public saleInfor */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      sload(0x15)\n      sload(0x16)\n      sload(0x17)\n      tag_23\n      swap13\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap13\n      dup2\n      and\n      swap12\n      and\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      0xff\n      and\n      dup14\n      jump\n    tag_23:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3003:3035   */\n      swap15\n      dup16\n      and\n        /* \"#utility.yul\":2985:3036   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3072:3104   */\n      swap13\n      dup15\n      and\n        /* \"#utility.yul\":3067:3069   */\n      0x20\n        /* \"#utility.yul\":3052:3070   */\n      dup15\n      add\n        /* \"#utility.yul\":3045:3105   */\n      mstore\n        /* \"#utility.yul\":3141:3173   */\n      swap11\n      swap1\n      swap13\n      and\n        /* \"#utility.yul\":3121:3139   */\n      swap10\n      dup12\n      add\n        /* \"#utility.yul\":3114:3174   */\n      swap10\n      swap1\n      swap10\n      mstore\n        /* \"#utility.yul\":3205:3207   */\n      0x60\n        /* \"#utility.yul\":3190:3208   */\n      dup11\n      add\n        /* \"#utility.yul\":3183:3217   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":3248:3251   */\n      0x80\n        /* \"#utility.yul\":3233:3252   */\n      dup10\n      add\n        /* \"#utility.yul\":3226:3261   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":3023:3026   */\n      0xa0\n        /* \"#utility.yul\":3277:3296   */\n      dup9\n      add\n        /* \"#utility.yul\":3270:3305   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3336:3339   */\n      0xc0\n        /* \"#utility.yul\":3321:3340   */\n      dup8\n      add\n        /* \"#utility.yul\":3314:3349   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3380:3383   */\n      0xe0\n        /* \"#utility.yul\":3365:3384   */\n      dup7\n      add\n        /* \"#utility.yul\":3358:3393   */\n      mstore\n        /* \"#utility.yul\":3424:3427   */\n      0x0100\n        /* \"#utility.yul\":3409:3428   */\n      dup6\n      add\n        /* \"#utility.yul\":3402:3437   */\n      mstore\n        /* \"#utility.yul\":3468:3471   */\n      0x0120\n        /* \"#utility.yul\":3453:3472   */\n      dup5\n      add\n        /* \"#utility.yul\":3446:3481   */\n      mstore\n        /* \"#utility.yul\":3512:3515   */\n      0x0140\n        /* \"#utility.yul\":3497:3516   */\n      dup4\n      add\n        /* \"#utility.yul\":3490:3526   */\n      mstore\n        /* \"#utility.yul\":3557:3560   */\n      0x0160\n        /* \"#utility.yul\":3542:3561   */\n      dup3\n      add\n        /* \"#utility.yul\":3535:3571   */\n      mstore\n        /* \"#utility.yul\":3615:3630   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3608:3631   */\n      iszero\n        /* \"#utility.yul\":3602:3605   */\n      0x0180\n        /* \"#utility.yul\":3587:3606   */\n      dup3\n      add\n        /* \"#utility.yul\":3580:3632   */\n      mstore\n        /* \"#utility.yul\":2972:2975   */\n      0x01a0\n        /* \"#utility.yul\":2957:2976   */\n      add\n        /* \"Ethereum/Presale.sol\":1563:1589  SaleInfor public saleInfor */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":3001:3338  function status() public view returns(uint256) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":5315:5340   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5303:5305   */\n      0x20\n        /* \"#utility.yul\":5288:5306   */\n      add\n        /* \"Ethereum/Presale.sol\":3001:3338  function status() public view returns(uint256) {\r... */\n      tag_25\n        /* \"#utility.yul\":5270:5346   */\n      jump\n        /* \"Ethereum/Presale.sol\":4654:4771  function getData(IERC20Metadata _address) public view returns(uint256) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_28\n      tag_34\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1621:1645  uint256 public feeAnyone */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_28\n      sload(0x19)\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":4525:4646  function transferETH(uint256 amount) external payable {\r... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Ethereum/Presale.sol\":1473:1515  mapping(address => uint256) public userFee */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_28\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_42\n      tag_54\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":3465:4279  function depodit(uint256 _amount) external view returns(uint256) {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_28\n      tag_57\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4409:4517  function backToken() external payable {\r... */\n    tag_10:\n      tag_42\n      tag_61\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_63:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2419:2451   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2401:2452   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2389:2391   */\n      0x20\n        /* \"#utility.yul\":2374:2392   */\n      add\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      tag_25\n        /* \"#utility.yul\":2356:2458   */\n      jump\n        /* \"Ethereum/Presale.sol\":2202:2992  function initialSaleInfor(\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_42\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"Ethereum/Presale.sol\":2385:2394  saleInfor */\n      0x0b\n        /* \"Ethereum/Presale.sol\":2385:2423  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":2434:2453  saleInfor.saleToken */\n      0x0c\n        /* \"Ethereum/Presale.sol\":2434:2466  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup7\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Ethereum/Presale.sol\":2477:2496  saleInfor.baseToken */\n      0x0d\n        /* \"Ethereum/Presale.sol\":2477:2509  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap2\n      dup5\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/Presale.sol\":2543:2551  datas[0] */\n      dup2\n      mload\n        /* \"Ethereum/Presale.sol\":2520:2540  saleInfor.tokenPrice */\n      0x0e\n        /* \"Ethereum/Presale.sol\":2520:2551  saleInfor.tokenPrice = datas[0] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2543:2551  datas[0] */\n      0x20\n        /* \"Ethereum/Presale.sol\":2584:2592  datas[1] */\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2562:2581  saleInfor.startSale */\n      0x0f\n        /* \"Ethereum/Presale.sol\":2562:2592  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2623:2631  datas[2] */\n      0x40\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2603:2620  saleInfor.endSale */\n      0x10\n        /* \"Ethereum/Presale.sol\":2603:2631  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2669:2677  datas[3] */\n      0x60\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2642:2666  saleInfor.valueSwapToken */\n      0x11\n        /* \"Ethereum/Presale.sol\":2642:2677  saleInfor.valueSwapToken = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2715:2723  datas[4] */\n      0x80\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2688:2712  saleInfor.feeTransaction */\n      0x12\n        /* \"Ethereum/Presale.sol\":2688:2723  saleInfor.feeTransaction = datas[4] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2763:2771  datas[5] */\n      0xa0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2734:2760  saleInfor.minSpendPerBuyer */\n      0x13\n        /* \"Ethereum/Presale.sol\":2734:2771  saleInfor.minSpendPerBuyer = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2811:2819  datas[6] */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2782:2808  saleInfor.maxSpendPerBuyer */\n      0x14\n        /* \"Ethereum/Presale.sol\":2782:2819  saleInfor.maxSpendPerBuyer = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2852:2860  datas[7] */\n      0xe0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2830:2849  saleInfor.refundFee */\n      0x15\n        /* \"Ethereum/Presale.sol\":2830:2860  saleInfor.refundFee = datas[7] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2892:2900  datas[8] */\n      0x0100\n      swap1\n      swap2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2871:2889  saleInfor.claimFee */\n      0x16\n        /* \"Ethereum/Presale.sol\":2871:2900  saleInfor.claimFee = datas[8] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2947:2951  WETH */\n      sload(0x18)\n        /* \"Ethereum/Presale.sol\":2911:2936  saleInfor.saleIsBaseToken */\n      0x17\n        /* \"Ethereum/Presale.sol\":2911:2984  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Ethereum/Presale.sol\":2947:2951  WETH */\n      swap2\n      swap1\n      swap4\n      and\n        /* \"Ethereum/Presale.sol\":2939:2984  address(WETH) == address(saleInfor.baseToken) */\n      swap1\n      swap2\n      eq\n        /* \"Ethereum/Presale.sol\":2911:2984  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":2202:2992  function initialSaleInfor(\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":1522:1556  PresaleStatus public presaleStatus */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      sload(0x09)\n      tag_73\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      dup7\n      jump\n    tag_73:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6198:6223   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":6254:6256   */\n      0x20\n        /* \"#utility.yul\":6239:6257   */\n      dup8\n      add\n        /* \"#utility.yul\":6232:6266   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":6282:6300   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":6275:6309   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6340:6342   */\n      0x60\n        /* \"#utility.yul\":6325:6343   */\n      dup5\n      add\n        /* \"#utility.yul\":6318:6352   */\n      mstore\n        /* \"#utility.yul\":6383:6386   */\n      0x80\n        /* \"#utility.yul\":6368:6387   */\n      dup4\n      add\n        /* \"#utility.yul\":6361:6396   */\n      mstore\n        /* \"#utility.yul\":6427:6430   */\n      0xa0\n        /* \"#utility.yul\":6412:6431   */\n      dup3\n      add\n        /* \"#utility.yul\":6405:6440   */\n      mstore\n        /* \"#utility.yul\":6185:6188   */\n      0xc0\n        /* \"#utility.yul\":6170:6189   */\n      add\n        /* \"Ethereum/Presale.sol\":1522:1556  PresaleStatus public presaleStatus */\n      tag_25\n        /* \"#utility.yul\":6152:6446   */\n      jump\n        /* \"Ethereum/Presale.sol\":1596:1614  IERC20 public WETH */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      sload(0x18)\n      tag_63\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":3347:3457  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n        /* \"#utility.yul\":3808:3822   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3801:3823   */\n      iszero\n        /* \"#utility.yul\":3783:3824   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3771:3773   */\n      0x20\n        /* \"#utility.yul\":3756:3774   */\n      add\n        /* \"Ethereum/Presale.sol\":3347:3457  function checkAdminAddress() public view returns(bool) {\r... */\n      tag_25\n        /* \"#utility.yul\":3738:3830   */\n      jump\n        /* \"Ethereum/Presale.sol\":1420:1466  mapping(address => BuyerInfo) public buyerInfo */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_89:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap4\n      swap3\n      swap1\n      swap2\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup7\n      jump\n    tag_88:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5626:5651   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":5682:5684   */\n      0x20\n        /* \"#utility.yul\":5667:5685   */\n      dup8\n      add\n        /* \"#utility.yul\":5660:5694   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":5710:5728   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":5703:5737   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5768:5770   */\n      0x60\n        /* \"#utility.yul\":5753:5771   */\n      dup5\n      add\n        /* \"#utility.yul\":5746:5780   */\n      mstore\n        /* \"#utility.yul\":5824:5838   */\n      iszero\n        /* \"#utility.yul\":5817:5839   */\n      iszero\n        /* \"#utility.yul\":5811:5814   */\n      0x80\n        /* \"#utility.yul\":5796:5815   */\n      dup4\n      add\n        /* \"#utility.yul\":5789:5840   */\n      mstore\n        /* \"#utility.yul\":5884:5898   */\n      iszero\n        /* \"#utility.yul\":5877:5899   */\n      iszero\n        /* \"#utility.yul\":5871:5874   */\n      0xa0\n        /* \"#utility.yul\":5856:5875   */\n      dup3\n      add\n        /* \"#utility.yul\":5849:5900   */\n      mstore\n        /* \"#utility.yul\":5613:5616   */\n      0xc0\n        /* \"#utility.yul\":5598:5617   */\n      add\n        /* \"Ethereum/Presale.sol\":1420:1466  mapping(address => BuyerInfo) public buyerInfo */\n      tag_25\n        /* \"#utility.yul\":5580:5906   */\n      jump\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_42\n      tag_95\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4287:4398  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_28\n      tag_99\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":4374:4390  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":4287:4398  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":3001:3338  function status() public view returns(uint256) {\r... */\n    tag_29:\n        /* \"Ethereum/Presale.sol\":3080:3099  saleInfor.startSale */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":3039:3046  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":3062:3077  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":3062:3099  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":3059:3331  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_104\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":3123:3124  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":3001:3338  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3059:3331  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_104:\n        /* \"Ethereum/Presale.sol\":3190:3207  saleInfor.endSale */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":3172:3187  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":3172:3207  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":3169:3320  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":3235:3236  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":3001:3338  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3169:3320  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_106:\n      pop\n        /* \"Ethereum/Presale.sol\":3293:3294  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":3001:3338  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4654:4771  function getData(IERC20Metadata _address) public view returns(uint256) {\r... */\n    tag_36:\n        /* \"Ethereum/Presale.sol\":4716:4723  uint256 */\n      0x00\n        /* \"Ethereum/Presale.sol\":4744:4752  _address */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":4744:4761  _address.decimals */\n      and\n      0x313ce567\n        /* \"Ethereum/Presale.sol\":4744:4763  _address.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"Ethereum/Presale.sol\":4736:4763  return  _address.decimals() */\n      swap3\n        /* \"Ethereum/Presale.sol\":4654:4771  function getData(IERC20Metadata _address) public view returns(uint256) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4525:4646  function transferETH(uint256 amount) external payable {\r... */\n    tag_45:\n        /* \"Ethereum/Presale.sol\":4598:4608  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":4590:4638  payable(msg.sender).transfer(msg.value - amount) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":4619:4637  msg.value - amount */\n      tag_115\n        /* \"Ethereum/Presale.sol\":4631:4637  amount */\n      dup4\n        /* \"Ethereum/Presale.sol\":4619:4628  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":4619:4637  msg.value - amount */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"Ethereum/Presale.sol\":4590:4638  payable(msg.sender).transfer(msg.value - amount) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n        /* \"Ethereum/Presale.sol\":4525:4646  function transferETH(uint256 amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_54:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5010:5012   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4992:5013   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5029:5047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5022:5052   */\n      mstore\n        /* \"#utility.yul\":5088:5122   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5068:5086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5061:5123   */\n      mstore\n        /* \"#utility.yul\":5140:5158   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_127\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_128\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_127:\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3465:4279  function depodit(uint256 _amount) external view returns(uint256) {\r... */\n    tag_58:\n        /* \"Ethereum/Presale.sol\":3637:3647  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3521:3528  uint256 */\n      0x00\n        /* \"Ethereum/Presale.sol\":3627:3648  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":3627:3636  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":3627:3648  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Ethereum/Presale.sol\":3833:3859  saleInfor.minSpendPerBuyer */\n      sload(0x13)\n        /* \"Ethereum/Presale.sol\":3679:3686  _amount */\n      dup4\n      swap1\n      dup2\n      swap1\n        /* \"Ethereum/Presale.sol\":3521:3528  uint256 */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":3792:3796  1000 */\n      0x03e8\n      swap1\n        /* \"Ethereum/Presale.sol\":3815:3859  real_amount_in >= saleInfor.minSpendPerBuyer */\n      dup4\n      lt\n      iszero\n        /* \"Ethereum/Presale.sol\":3807:3908  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"Ethereum/Presale.sol\":3807:3908  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4647:4668   */\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x10\n        /* \"#utility.yul\":4684:4702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4677:4707   */\n      mstore\n      shl(0x80, 0x4e6f7420656e6f7567682076616c7565)\n        /* \"#utility.yul\":4723:4741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4716:4762   */\n      mstore\n        /* \"#utility.yul\":4779:4797   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":3807:3908  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_124\n        /* \"#utility.yul\":4637:4803   */\n      jump\n        /* \"Ethereum/Presale.sol\":3807:3908  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n    tag_130:\n        /* \"Ethereum/Presale.sol\":3923:3942  checkAdminAddress() */\n      tag_133\n        /* \"Ethereum/Presale.sol\":3923:3940  checkAdminAddress */\n      tag_84\n        /* \"Ethereum/Presale.sol\":3923:3942  checkAdminAddress() */\n      jump\t// in\n    tag_133:\n        /* \"Ethereum/Presale.sol\":3919:4121  if(!checkAdminAddress()) {\r... */\n      tag_134\n      jumpi\n        /* \"Ethereum/Presale.sol\":3976:4109  ((fullPercenFee.sub(feeAnyone))\r... */\n      tag_135\n        /* \"Ethereum/Presale.sol\":4095:4108  fullPercenFee */\n      dup2\n        /* \"Ethereum/Presale.sol\":3977:4058  (fullPercenFee.sub(feeAnyone))\r... */\n      tag_136\n        /* \"Ethereum/Presale.sol\":4043:4057  real_amount_in */\n      dup6\n        /* \"Ethereum/Presale.sol\":3978:4006  fullPercenFee.sub(feeAnyone) */\n      tag_137\n        /* \"Ethereum/Presale.sol\":3996:4005  feeAnyone */\n      sload(0x19)\n        /* \"Ethereum/Presale.sol\":3978:3991  fullPercenFee */\n      dup7\n        /* \"Ethereum/Presale.sol\":3978:3995  fullPercenFee.sub */\n      tag_138\n      swap1\n        /* \"Ethereum/Presale.sol\":3978:4006  fullPercenFee.sub(feeAnyone) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"Ethereum/Presale.sol\":3977:4042  (fullPercenFee.sub(feeAnyone))\r... */\n      swap1\n      tag_139\n        /* \"Ethereum/Presale.sol\":3977:4058  (fullPercenFee.sub(feeAnyone))\r... */\n      jump\t// in\n    tag_136:\n        /* \"Ethereum/Presale.sol\":3976:4094  ((fullPercenFee.sub(feeAnyone))\r... */\n      swap1\n      tag_140\n        /* \"Ethereum/Presale.sol\":3976:4109  ((fullPercenFee.sub(feeAnyone))\r... */\n      jump\t// in\n    tag_135:\n        /* \"Ethereum/Presale.sol\":3959:4109  real_amount_in = ((fullPercenFee.sub(feeAnyone))\r... */\n      swap3\n      pop\n        /* \"Ethereum/Presale.sol\":3919:4121  if(!checkAdminAddress()) {\r... */\n    tag_134:\n        /* \"Ethereum/Presale.sol\":4151:4177  saleInfor.maxSpendPerBuyer */\n      sload(0x14)\n        /* \"Ethereum/Presale.sol\":4131:4148  uint256 remaining */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":4151:4194  saleInfor.maxSpendPerBuyer - real_amount_in */\n      tag_141\n      swap1\n        /* \"Ethereum/Presale.sol\":4180:4194  real_amount_in */\n      dup6\n      swap1\n        /* \"Ethereum/Presale.sol\":4151:4194  saleInfor.maxSpendPerBuyer - real_amount_in */\n      tag_116\n      jump\t// in\n    tag_141:\n        /* \"Ethereum/Presale.sol\":4245:4269  saleInfor.valueSwapToken */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":4131:4194  uint256 remaining = saleInfor.maxSpendPerBuyer - real_amount_in */\n      swap1\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":4205:4222  uint256 tokenSold */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":4226:4270  real_amount_in.mul(saleInfor.valueSwapToken) */\n      tag_142\n      swap1\n        /* \"Ethereum/Presale.sol\":4226:4240  real_amount_in */\n      dup7\n      swap1\n        /* \"Ethereum/Presale.sol\":4226:4244  real_amount_in.mul */\n      tag_139\n        /* \"Ethereum/Presale.sol\":4226:4270  real_amount_in.mul(saleInfor.valueSwapToken) */\n      jump\t// in\n    tag_142:\n        /* \"Ethereum/Presale.sol\":4205:4271  uint256 tokenSold = (real_amount_in.mul(saleInfor.valueSwapToken)) */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":3465:4279  function depodit(uint256 _amount) external view returns(uint256) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4409:4517  function backToken() external payable {\r... */\n    tag_61:\n        /* \"Ethereum/Presale.sol\":4458:4509  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":4466:4476  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":4487:4508  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":4458:4509  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":4487:4508  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":4466:4476  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":4458:4509  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n        /* \"Ethereum/Presale.sol\":4409:4517  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3347:3457  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_84:\n        /* \"Ethereum/Presale.sol\":3396:3400  bool */\n      0x00\n        /* \"Ethereum/Presale.sol\":3420:3449  admins.contains(_msgSender()) */\n      tag_158\n        /* \"Ethereum/Presale.sol\":3420:3426  admins */\n      0x1a\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":3420:3435  admins.contains */\n      tag_160\n        /* \"Ethereum/Presale.sol\":3420:3449  admins.contains(_msgSender()) */\n      jump\t// in\n    tag_158:\n        /* \"Ethereum/Presale.sol\":3413:3449  return admins.contains(_msgSender()) */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":3347:3457  function checkAdminAddress() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_96:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5010:5012   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4992:5013   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5029:5047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5022:5052   */\n      mstore\n        /* \"#utility.yul\":5088:5122   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5068:5086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5061:5123   */\n      mstore\n        /* \"#utility.yul\":5140:5158   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n        /* \"#utility.yul\":4982:5164   */\n      jump\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4258:4260   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4240:4261   */\n      mstore\n        /* \"#utility.yul\":4297:4299   */\n      0x26\n        /* \"#utility.yul\":4277:4295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4270:4300   */\n      mstore\n        /* \"#utility.yul\":4336:4370   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4316:4334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4309:4371   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4387:4405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4380:4416   */\n      mstore\n        /* \"#utility.yul\":4433:4452   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_124\n        /* \"#utility.yul\":4230:4458   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_167:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_145\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_128\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_102:\n        /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_173\n        /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n      tag_174\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_173:\n        /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap4\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_128:\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap2\n      and\n      swap2\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      swap1\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      dup3\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/SafeMath.sol\":3228:3326  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_138:\n        /* \"Utils/SafeMath.sol\":3286:3293  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":3313:3318  a - b */\n      tag_173\n        /* \"Utils/SafeMath.sol\":3317:3318  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":3313:3314  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":3313:3318  a - b */\n      tag_116\n      jump\t// in\n        /* \"Utils/SafeMath.sol\":3585:3683  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_139:\n        /* \"Utils/SafeMath.sol\":3643:3650  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":3670:3675  a * b */\n      tag_173\n        /* \"Utils/SafeMath.sol\":3674:3675  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":3670:3671  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":3670:3675  a * b */\n      tag_181\n      jump\t// in\n        /* \"Utils/SafeMath.sol\":3984:4082  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_140:\n        /* \"Utils/SafeMath.sol\":4042:4049  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":4069:4074  a / b */\n      tag_173\n        /* \"Utils/SafeMath.sol\":4073:4074  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":4069:4070  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":4069:4074  a / b */\n      tag_184\n      jump\t// in\n        /* \"Utils/EnumerableSet.sol\":8831:8998  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8965:8988  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"Utils/EnumerableSet.sol\":8911:8915  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":4367:4391  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"Utils/EnumerableSet.sol\":8935:8990  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_173\n        /* \"Utils/EnumerableSet.sol\":4270:4399  function _contains(Set storage set, bytes32 value) private view returns (bool) {\r... */\n      jump\n        /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_174:\n        /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n      tag_190\n      jumpi\n      pop\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n      dup5\n      sload\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n      jump(tag_112)\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n    tag_190:\n      pop\n        /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n      jump(tag_112)\n        /* \"#utility.yul\":14:271   */\n    tag_49:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_196:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_173\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_198\n      jump\t// in\n        /* \"#utility.yul\":276:1572   */\n    tag_70:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":474:477   */\n      0x0180\n        /* \"#utility.yul\":518:520   */\n      dup1\n        /* \"#utility.yul\":506:515   */\n      dup7\n        /* \"#utility.yul\":497:504   */\n      dup9\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:488   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":539:545   */\n      dup4\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":524:546   */\n      revert\n        /* \"#utility.yul\":486:488   */\n    tag_200:\n        /* \"#utility.yul\":583:592   */\n      dup6\n        /* \"#utility.yul\":570:593   */\n      calldataload\n        /* \"#utility.yul\":602:633   */\n      tag_201\n        /* \"#utility.yul\":627:632   */\n      dup2\n        /* \"#utility.yul\":602:633   */\n      tag_198\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":652:657   */\n      swap5\n      pop\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":715:733   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":702:734   */\n      calldataload\n        /* \"#utility.yul\":743:776   */\n      tag_202\n        /* \"#utility.yul\":702:734   */\n      dup2\n        /* \"#utility.yul\":743:776   */\n      tag_198\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":795:802   */\n      swap5\n      pop\n        /* \"#utility.yul\":854:856   */\n      0x40\n        /* \"#utility.yul\":839:857   */\n      dup8\n      add\n        /* \"#utility.yul\":826:858   */\n      calldataload\n        /* \"#utility.yul\":867:900   */\n      tag_203\n        /* \"#utility.yul\":826:858   */\n      dup2\n        /* \"#utility.yul\":867:900   */\n      tag_198\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":919:926   */\n      swap4\n      pop\n        /* \"#utility.yul\":964:967   */\n      0x7f\n        /* \"#utility.yul\":949:968   */\n      dup8\n      add\n        /* \"#utility.yul\":945:978   */\n      dup9\n      sgt\n        /* \"#utility.yul\":935:937   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":997:1003   */\n      dup3\n        /* \"#utility.yul\":989:995   */\n      dup4\n        /* \"#utility.yul\":982:1004   */\n      revert\n        /* \"#utility.yul\":935:937   */\n    tag_204:\n        /* \"#utility.yul\":1035:1037   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      mload\n        /* \"#utility.yul\":1077:1080   */\n      0x0120\n        /* \"#utility.yul\":1069:1075   */\n      dup2\n        /* \"#utility.yul\":1065:1081   */\n      add\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1135:1145   */\n      dup2\n        /* \"#utility.yul\":1132:1154   */\n      lt\n        /* \"#utility.yul\":1111:1129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1099:1109   */\n      dup3\n        /* \"#utility.yul\":1096:1130   */\n      gt\n        /* \"#utility.yul\":1093:1155   */\n      or\n        /* \"#utility.yul\":1090:1092   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1158:1176   */\n      tag_206\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1194:1196   */\n      0x40\n        /* \"#utility.yul\":1187:1209   */\n      mstore\n        /* \"#utility.yul\":1229:1235   */\n      dup1\n        /* \"#utility.yul\":1270:1272   */\n      0x60\n        /* \"#utility.yul\":1255:1273   */\n      dup10\n      add\n        /* \"#utility.yul\":1288:1306   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":1285:1316   */\n      dup12\n      lt\n        /* \"#utility.yul\":1282:1284   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1334:1340   */\n      dup6\n        /* \"#utility.yul\":1326:1332   */\n      dup7\n        /* \"#utility.yul\":1319:1341   */\n      revert\n        /* \"#utility.yul\":1282:1284   */\n    tag_208:\n        /* \"#utility.yul\":1361:1367   */\n      dup6\n        /* \"#utility.yul\":1352:1367   */\n      swap5\n      pop\n        /* \"#utility.yul\":1376:1541   */\n    tag_209:\n        /* \"#utility.yul\":1390:1394   */\n      0x09\n        /* \"#utility.yul\":1387:1388   */\n      dup6\n        /* \"#utility.yul\":1384:1395   */\n      lt\n        /* \"#utility.yul\":1376:1541   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1449:1466   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1437:1467   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1410:1411   */\n      0x01\n        /* \"#utility.yul\":1403:1412   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":1487:1499   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1519:1531   */\n      dup4\n      add\n        /* \"#utility.yul\":1376:1541   */\n      jump(tag_209)\n    tag_211:\n        /* \"#utility.yul\":1380:1383   */\n      pop\n      pop\n        /* \"#utility.yul\":1560:1566   */\n      dup1\n        /* \"#utility.yul\":1550:1566   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":454:1572   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1861:2051   */\n    tag_44:\n        /* \"#utility.yul\":1920:1926   */\n      0x00\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1961:1970   */\n      dup3\n        /* \"#utility.yul\":1952:1959   */\n      dup5\n        /* \"#utility.yul\":1948:1971   */\n      sub\n        /* \"#utility.yul\":1944:1976   */\n      slt\n        /* \"#utility.yul\":1941:1943   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1994:2000   */\n      dup1\n        /* \"#utility.yul\":1986:1992   */\n      dup2\n        /* \"#utility.yul\":1979:2001   */\n      revert\n        /* \"#utility.yul\":1941:1943   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":2022:2045   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1931:2051   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2056:2250   */\n    tag_113:\n        /* \"#utility.yul\":2126:2132   */\n      0x00\n        /* \"#utility.yul\":2179:2181   */\n      0x20\n        /* \"#utility.yul\":2167:2176   */\n      dup3\n        /* \"#utility.yul\":2158:2165   */\n      dup5\n        /* \"#utility.yul\":2154:2177   */\n      sub\n        /* \"#utility.yul\":2150:2182   */\n      slt\n        /* \"#utility.yul\":2147:2149   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2200:2206   */\n      dup1\n        /* \"#utility.yul\":2192:2198   */\n      dup2\n        /* \"#utility.yul\":2185:2207   */\n      revert\n        /* \"#utility.yul\":2147:2149   */\n    tag_218:\n      pop\n        /* \"#utility.yul\":2228:2244   */\n      mload\n      swap2\n        /* \"#utility.yul\":2137:2250   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6668   */\n    tag_184:\n        /* \"#utility.yul\":6491:6492   */\n      0x00\n        /* \"#utility.yul\":6517:6518   */\n      dup3\n        /* \"#utility.yul\":6507:6509   */\n      tag_230\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6542:6573   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6596:6600   */\n      0x12\n        /* \"#utility.yul\":6593:6594   */\n      0x04\n        /* \"#utility.yul\":6586:6601   */\n      mstore\n        /* \"#utility.yul\":6624:6628   */\n      0x24\n        /* \"#utility.yul\":6549:6550   */\n      dup2\n        /* \"#utility.yul\":6614:6629   */\n      revert\n        /* \"#utility.yul\":6507:6509   */\n    tag_230:\n      pop\n        /* \"#utility.yul\":6653:6662   */\n      div\n      swap1\n        /* \"#utility.yul\":6497:6668   */\n      jump\t// out\n        /* \"#utility.yul\":6673:6841   */\n    tag_181:\n        /* \"#utility.yul\":6713:6720   */\n      0x00\n        /* \"#utility.yul\":6779:6780   */\n      dup2\n        /* \"#utility.yul\":6775:6776   */\n      0x00\n        /* \"#utility.yul\":6771:6777   */\n      not\n        /* \"#utility.yul\":6767:6781   */\n      div\n        /* \"#utility.yul\":6764:6765   */\n      dup4\n        /* \"#utility.yul\":6761:6782   */\n      gt\n        /* \"#utility.yul\":6756:6757   */\n      dup3\n        /* \"#utility.yul\":6749:6758   */\n      iszero\n        /* \"#utility.yul\":6742:6759   */\n      iszero\n        /* \"#utility.yul\":6738:6783   */\n      and\n        /* \"#utility.yul\":6735:6737   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6786:6804   */\n      tag_233\n      tag_234\n      jump\t// in\n    tag_233:\n      pop\n        /* \"#utility.yul\":6826:6835   */\n      mul\n      swap1\n        /* \"#utility.yul\":6725:6841   */\n      jump\t// out\n        /* \"#utility.yul\":6846:6971   */\n    tag_116:\n        /* \"#utility.yul\":6886:6890   */\n      0x00\n        /* \"#utility.yul\":6914:6915   */\n      dup3\n        /* \"#utility.yul\":6911:6912   */\n      dup3\n        /* \"#utility.yul\":6908:6916   */\n      lt\n        /* \"#utility.yul\":6905:6907   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":6919:6937   */\n      tag_237\n      tag_234\n      jump\t// in\n    tag_237:\n      pop\n        /* \"#utility.yul\":6956:6965   */\n      sub\n      swap1\n        /* \"#utility.yul\":6895:6971   */\n      jump\t// out\n        /* \"#utility.yul\":6976:7103   */\n    tag_234:\n        /* \"#utility.yul\":7037:7047   */\n      0x4e487b71\n        /* \"#utility.yul\":7032:7035   */\n      0xe0\n        /* \"#utility.yul\":7028:7048   */\n      shl\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7049   */\n      mstore\n        /* \"#utility.yul\":7068:7072   */\n      0x11\n        /* \"#utility.yul\":7065:7066   */\n      0x04\n        /* \"#utility.yul\":7058:7073   */\n      mstore\n        /* \"#utility.yul\":7092:7096   */\n      0x24\n        /* \"#utility.yul\":7089:7090   */\n      0x00\n        /* \"#utility.yul\":7082:7097   */\n      revert\n        /* \"#utility.yul\":7108:7235   */\n    tag_207:\n        /* \"#utility.yul\":7169:7179   */\n      0x4e487b71\n        /* \"#utility.yul\":7164:7167   */\n      0xe0\n        /* \"#utility.yul\":7160:7180   */\n      shl\n        /* \"#utility.yul\":7157:7158   */\n      0x00\n        /* \"#utility.yul\":7150:7181   */\n      mstore\n        /* \"#utility.yul\":7200:7204   */\n      0x41\n        /* \"#utility.yul\":7197:7198   */\n      0x04\n        /* \"#utility.yul\":7190:7205   */\n      mstore\n        /* \"#utility.yul\":7224:7228   */\n      0x24\n        /* \"#utility.yul\":7221:7222   */\n      0x00\n        /* \"#utility.yul\":7214:7229   */\n      revert\n        /* \"#utility.yul\":7240:7371   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7315:7346   */\n      dup2\n      and\n        /* \"#utility.yul\":7305:7347   */\n      dup2\n      eq\n        /* \"#utility.yul\":7295:7297   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":7361:7362   */\n      0x00\n        /* \"#utility.yul\":7358:7359   */\n      dup1\n        /* \"#utility.yul\":7351:7363   */\n      revert\n\n    auxdata: 0xa2646970667358221220e89da4fcd5c843c7fad7ecc12f128b94b55ef83674c5d08cb4ef2b1f541921d264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260016000556100123361009c565b6018805473c778417e063141139fce010982780140aa0cd5ab6001600160a01b0319909116179055610064601a736ccb41eeda5a073076f3e7dc1614c185b5fa41ed6100ee602090811b61081a17901c565b50610091734f0b12bbf40fc182559822a5b1db6d34dbc3e016601a6100ee60201b61081a1790919060201c565b50601460195561015b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610103836001600160a01b03841661010c565b90505b92915050565b600081815260018301602052604081205461015357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610106565b506000610106565b610af78061016a6000396000f3fe6080604052600436106100fe5760003560e01c8063861faf5f11610095578063ad5c464811610064578063ad5c4648146103ed578063cad5b0f71461040d578063e2d3f42314610432578063f2fde38b146104b9578063f8b2cb4f146104d957600080fd5b8063861faf5f146102a35780638da5cb5b146102ab5780638f1eae4c146102dd578063acfb23551461039557600080fd5b80634329db46116100d15780634329db461461022c57806356c5f34914610241578063715018a61461026e578063796478331461028357600080fd5b806318856a2f14610103578063200d2ed2146101d357806338266b22146101f65780633b5ef2ad14610216575b600080fd5b34801561010f57600080fd5b50600b54600c54600d54600e54600f5460105460115460125460135460145460155460165460175461015b9c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b3480156101df57600080fd5b506101e8610501565b6040519081526020016101ca565b34801561020257600080fd5b506101e861021136600461091d565b61052a565b34801561022257600080fd5b506101e860195481565b61023f61023a3660046109fa565b6105a3565b005b34801561024d57600080fd5b506101e861025c36600461091d565b60036020526000908152604090205481565b34801561027a57600080fd5b5061023f6105dd565b34801561028f57600080fd5b506101e861029e3660046109fa565b610648565b61023f610711565b3480156102b757600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016101ca565b3480156102e957600080fd5b5061023f6102f8366004610939565b600b80546001600160a01b03199081166001600160a01b0396871617909155600c8054821694861694909417909355600d80549093169184169182179092558151600e556020820151600f5560408201516010556060820151601155608082015160125560a082015160135560c082015160145560e0820151601555610100909101516016556018546017805460ff191691909316909114179055565b3480156103a157600080fd5b506004546005546006546007546008546009546103c095949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016101ca565b3480156103f957600080fd5b506018546102c5906001600160a01b031681565b34801561041957600080fd5b50610422610740565b60405190151581526020016101ca565b34801561043e57600080fd5b5061048861044d36600461091d565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c0016101ca565b3480156104c557600080fd5b5061023f6104d436600461091d565b610752565b3480156104e557600080fd5b506101e86104f436600461091d565b6001600160a01b03163190565b600f546000904210156105145750600090565b6010544211156105245750600290565b50600190565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561056557600080fd5b505afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d9190610a12565b92915050565b336108fc6105b18334610a69565b6040518115909202916000818181858888f193505050501580156105d9573d6000803e3d6000fd5b5050565b6001546001600160a01b0316331461063c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6106466000610836565b565b3360009081526002602052604081206013548390819084906103e8908310156106a65760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610633565b6106ae610740565b6106de576106db816106d5856106cf6019548661088890919063ffffffff16565b90610894565b906108a0565b92505b6014546000906106ef908590610a69565b601154909150600090610703908690610894565b905050505050505050919050565b60405133904780156108fc02916000818181858888f1935050505015801561073d573d6000803e3d6000fd5b50565b600061074d601a336108ac565b905090565b6001546001600160a01b031633146107ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610633565b6001600160a01b0381166108115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610633565b61073d81610836565b600061082f836001600160a01b0384166108ce565b9392505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061082f8284610a69565b600061082f8284610a4a565b600061082f8284610a2a565b6001600160a01b0381166000908152600183016020526040812054151561082f565b60008181526001830160205260408120546109155750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561059d565b50600061059d565b60006020828403121561092e578081fd5b813561082f81610aac565b600080600080610180808688031215610950578384fd5b853561095b81610aac565b945060208681013561096c81610aac565b9450604087013561097c81610aac565b9350607f8701881361098c578283fd5b604051610120810181811067ffffffffffffffff821117156109b0576109b0610a96565b6040528060608901848a018b10156109c6578586fd5b8594505b60098510156109e95780358252600194909401939083019083016109ca565b505080935050505092959194509250565b600060208284031215610a0b578081fd5b5035919050565b600060208284031215610a23578081fd5b5051919050565b600082610a4557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610a6457610a64610a80565b500290565b600082821015610a7b57610a7b610a80565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461073d57600080fdfea2646970667358221220e89da4fcd5c843c7fad7ecc12f128b94b55ef83674c5d08cb4ef2b1f541921d264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x12 CALLER PUSH2 0x9C JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x64 PUSH1 0x1A PUSH20 0x6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED PUSH2 0xEE PUSH1 0x20 SWAP1 DUP2 SHL PUSH2 0x81A OR SWAP1 SHR JUMP JUMPDEST POP PUSH2 0x91 PUSH20 0x4F0B12BBF40FC182559822A5B1DB6D34DBC3E016 PUSH1 0x1A PUSH2 0xEE PUSH1 0x20 SHL PUSH2 0x81A OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x14 PUSH1 0x19 SSTORE PUSH2 0x15B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x153 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x106 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x106 JUMP JUMPDEST PUSH2 0xAF7 DUP1 PUSH2 0x16A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4329DB46 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x38266B22 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x3B5EF2AD EQ PUSH2 0x216 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH2 0x15B SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x711 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x939 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH1 0xE SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x14 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x15 SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x16 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 SWAP2 EQ OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x3C0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x2C5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x514 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO PUSH2 0x524 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59D SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x5B1 DUP4 CALLVALUE PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x646 PUSH1 0x0 PUSH2 0x836 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x13 SLOAD DUP4 SWAP1 DUP2 SWAP1 DUP5 SWAP1 PUSH2 0x3E8 SWAP1 DUP4 LT ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x633 JUMP JUMPDEST PUSH2 0x6AE PUSH2 0x740 JUMP JUMPDEST PUSH2 0x6DE JUMPI PUSH2 0x6DB DUP2 PUSH2 0x6D5 DUP6 PUSH2 0x6CF PUSH1 0x19 SLOAD DUP7 PUSH2 0x888 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x894 JUMP JUMPDEST SWAP1 PUSH2 0x8A0 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x6EF SWAP1 DUP6 SWAP1 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x703 SWAP1 DUP7 SWAP1 PUSH2 0x894 JUMP JUMPDEST SWAP1 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x73D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH1 0x1A CALLER PUSH2 0x8AC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x633 JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0x836 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP3 DUP5 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP3 DUP5 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP3 DUP5 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x915 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x59D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x82F DUP2 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x950 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x95B DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x96C DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x97C DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x98C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9B0 JUMPI PUSH2 0x9B0 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x9C6 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x9E9 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x9CA JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA23 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA64 JUMPI PUSH2 0xA64 PUSH2 0xA80 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0xA80 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP14 LOG4 0xFC 0xD5 0xC8 NUMBER 0xC7 STATICCALL 0xD7 0xEC 0xC1 0x2F SLT DUP12 SWAP5 0xB5 0x5E 0xF8 CALLDATASIZE PUSH21 0xC5D08CB4EF2B1F541921D264736F6C634300080400 CALLER ",
							"sourceMap": "378:4398:2:-:0;;;1734:1:6;1845:7;:22;942:32:5;736:10:3;942:18:5;:32::i;:::-;1974:4:2;:57;;1988:42;-1:-1:-1;;;;;;1974:57:2;;;;;;2042:54;:6;2053:42;2042:10;;;;;;;:54;;:::i;:::-;;2107;2118:42;2107:6;:10;;;;;;:54;;;;:::i;:::-;-1:-1:-1;2184:2:2;2172:9;:14;378:4398;;2333:191:5;2426:6;;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2333:191;;:::o;8259:152:4:-;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:4;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2174:414::-;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:4;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:4;2557:12;;378:4398:2;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7373:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:257:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1118:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "474:3:9",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "468:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "531:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "518:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:9"
															},
															"nodeType": "YulIf",
															"src": "486:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "557:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "583:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "570:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "561:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "627:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "602:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "652:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "666:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "676:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "670:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "702:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "691:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "743:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "785:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "795:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "811:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "826:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "815:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "892:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "867:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:17:9",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "919:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "989:6:9"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "997:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "964:3:9",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "949:19:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:41:9"
															},
															"nodeType": "YulIf",
															"src": "935:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1015:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1019:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1047:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:3:9",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:16:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1051:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1158:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1099:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1096:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1135:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1132:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1093:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:62:9"
															},
															"nodeType": "YulIf",
															"src": "1090:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1198:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1218:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1229:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1222:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1244:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:18:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1248:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1326:6:9"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1334:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1292:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1303:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1308:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1285:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:31:9"
															},
															"nodeType": "YulIf",
															"src": "1282:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1352:15:9",
															"value": {
																"name": "value3",
																"nodeType": "YulIdentifier",
																"src": "1361:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1356:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1423:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1444:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1449:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1449:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1437:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1437:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1480:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1496:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1487:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1480:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1512:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1523:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1528:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1519:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1519:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1512:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1387:1:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:4:9",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1384:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:11:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1396:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1398:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1407:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1403:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1403:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1398:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1380:3:9",
																"statements": []
															},
															"src": "1376:165:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1560:6:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:9",
														"type": ""
													}
												],
												"src": "276:1296:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:187:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1715:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1724:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1732:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1717:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1717:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1690:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1699:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1686:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1686:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:32:9"
															},
															"nodeType": "YulIf",
															"src": "1679:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1750:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1776:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1763:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1754:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1820:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1795:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1795:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1835:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1845:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Metadata_$102",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1635:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1646:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1658:6:9",
														"type": ""
													}
												],
												"src": "1577:279:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1931:120:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1977:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1986:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1994:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1979:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1979:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1979:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1952:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1948:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:32:9"
															},
															"nodeType": "YulIf",
															"src": "1941:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2012:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2035:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2022:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1897:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1908:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1920:6:9",
														"type": ""
													}
												],
												"src": "1861:190:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2137:113:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2192:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2200:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2185:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2185:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2185:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2158:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2179:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2150:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2150:32:9"
															},
															"nodeType": "YulIf",
															"src": "2147:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2218:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2234:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2228:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2103:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2114:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2126:6:9",
														"type": ""
													}
												],
												"src": "2056:194:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2356:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2366:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2378:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2389:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2366:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2408:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2423:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2439:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2444:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2435:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2435:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2448:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2431:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2431:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2419:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2401:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2325:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2336:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2347:4:9",
														"type": ""
													}
												],
												"src": "2255:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2939:699:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2949:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2961:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2972:3:9",
																		"type": "",
																		"value": "416"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2957:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2957:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2949:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2992:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3023:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3028:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3019:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3019:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3032:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3015:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3003:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2985:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3076:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3092:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3097:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3088:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3088:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3101:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3084:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3084:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:60:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3145:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3161:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3166:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3157:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3157:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3170:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3153:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3153:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:60:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3183:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3237:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3248:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3233:19:9"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3254:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3226:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3277:19:9"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3298:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3270:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3325:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3336:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3321:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:19:9"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3342:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3314:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3369:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3380:3:9",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3365:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:19:9"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3358:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3424:3:9",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:19:9"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "3430:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3402:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3468:3:9",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3453:19:9"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "3474:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3446:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3446:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3501:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3512:3:9",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3497:19:9"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "3518:7:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3490:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3490:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3490:36:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3546:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3557:3:9",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3542:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3542:19:9"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "3563:7:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3535:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3535:36:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3591:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3602:3:9",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value12",
																						"nodeType": "YulIdentifier",
																						"src": "3622:7:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3615:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3615:15:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3608:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3580:52:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2809:9:9",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "2820:7:9",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "2829:7:9",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "2838:7:9",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "2847:6:9",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "2855:6:9",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2863:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2871:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2879:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2887:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2895:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2903:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2911:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2919:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2930:4:9",
														"type": ""
													}
												],
												"src": "2463:1175:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3738:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3748:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3760:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3771:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3748:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3790:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3815:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3808:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3808:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3801:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3783:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3783:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3707:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3718:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3729:4:9",
														"type": ""
													}
												],
												"src": "3643:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3949:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3959:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3971:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3959:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4001:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4016:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4032:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4037:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4028:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4028:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4041:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4024:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4024:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4012:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3994:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3929:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3940:4:9",
														"type": ""
													}
												],
												"src": "3835:216:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4230:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4247:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4258:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4281:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4292:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4297:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4270:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4320:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4331:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4336:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4309:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4309:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4391:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4402:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4387:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4407:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4207:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4221:4:9",
														"type": ""
													}
												],
												"src": "4056:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4677:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4743:18:9",
																		"type": "",
																		"value": "Not enough value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4771:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4779:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4771:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4628:4:9",
														"type": ""
													}
												],
												"src": "4463:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4999:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5010:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4992:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5033:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5044:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5029:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5029:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5022:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5022:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5022:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5072:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5083:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5068:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5068:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5088:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5061:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5061:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5132:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5132:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4959:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4973:4:9",
														"type": ""
													}
												],
												"src": "4808:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5270:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5280:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5292:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5303:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5288:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5280:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5333:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5315:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5239:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5250:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5261:4:9",
														"type": ""
													}
												],
												"src": "5169:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5580:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5590:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5602:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5613:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5598:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5590:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5633:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5626:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5626:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5626:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5671:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5682:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5667:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5687:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5714:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5710:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5710:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5730:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5703:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5757:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5768:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5753:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5753:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5773:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5746:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5746:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5811:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5824:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5824:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5817:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5817:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5871:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "5891:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5884:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5884:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5877:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5877:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5849:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5509:9:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5520:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5528:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5536:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5544:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5552:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5560:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5571:4:9",
														"type": ""
													}
												],
												"src": "5351:555:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6152:294:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6162:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6174:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6185:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6162:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6205:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6216:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6198:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6198:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6198:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6243:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6254:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6239:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6232:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6286:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6297:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6282:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6302:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6275:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6275:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6329:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6340:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6318:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6383:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6368:19:9"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6389:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6361:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6416:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6427:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6412:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6412:19:9"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6433:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6405:35:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6081:9:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6092:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6100:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6108:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6116:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6124:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6132:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6143:4:9",
														"type": ""
													}
												],
												"src": "5911:535:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6497:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "6549:1:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6556:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6561:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6552:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6552:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6542:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6542:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6542:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6593:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6596:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6586:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6586:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6586:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "6621:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6624:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6614:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6614:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6614:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6517:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:9:9"
															},
															"nodeType": "YulIf",
															"src": "6507:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6648:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6657:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6660:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6653:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6653:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6648:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6482:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6485:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6491:1:9",
														"type": ""
													}
												],
												"src": "6451:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6725:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6784:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6786:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6786:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6786:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6756:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6749:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6749:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6742:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6742:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6764:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6775:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6771:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6771:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6779:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6767:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6767:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6761:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6761:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:45:9"
															},
															"nodeType": "YulIf",
															"src": "6735:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6815:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6830:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6833:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6826:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6815:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6704:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6707:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6713:7:9",
														"type": ""
													}
												],
												"src": "6673:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6895:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6917:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6919:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6919:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6919:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6908:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:8:9"
															},
															"nodeType": "YulIf",
															"src": "6905:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6948:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6960:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6963:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6948:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6877:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6880:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6886:4:9",
														"type": ""
													}
												],
												"src": "6846:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7037:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7028:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7065:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7068:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7058:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7058:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7058:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7089:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7092:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7082:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7082:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6976:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7140:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7164:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7169:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7160:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7160:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7197:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7200:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7221:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7224:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7214:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7214:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7285:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7349:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7358:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7361:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7351:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7351:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7351:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7308:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7319:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7334:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7339:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7330:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7330:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7343:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7326:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7326:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7315:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7315:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7305:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7305:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:50:9"
															},
															"nodeType": "YulIf",
															"src": "7295:2:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7274:5:9",
														"type": ""
													}
												],
												"src": "7240:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _2 := 32\n        let value_1 := calldataload(add(headStart, _2))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        if gt(add(headStart, _1), dataEnd) { revert(value3, value3) }\n        let i := value3\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_contract$_IERC20Metadata_$102(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), iszero(iszero(value12)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not enough value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fe5760003560e01c8063861faf5f11610095578063ad5c464811610064578063ad5c4648146103ed578063cad5b0f71461040d578063e2d3f42314610432578063f2fde38b146104b9578063f8b2cb4f146104d957600080fd5b8063861faf5f146102a35780638da5cb5b146102ab5780638f1eae4c146102dd578063acfb23551461039557600080fd5b80634329db46116100d15780634329db461461022c57806356c5f34914610241578063715018a61461026e578063796478331461028357600080fd5b806318856a2f14610103578063200d2ed2146101d357806338266b22146101f65780633b5ef2ad14610216575b600080fd5b34801561010f57600080fd5b50600b54600c54600d54600e54600f5460105460115460125460135460145460155460165460175461015b9c6001600160a01b039081169c81169b169998979695949392919060ff168d565b604080516001600160a01b039e8f1681529c8e1660208e01529a909c16998b019990995260608a0197909752608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408301526101608201529015156101808201526101a0015b60405180910390f35b3480156101df57600080fd5b506101e8610501565b6040519081526020016101ca565b34801561020257600080fd5b506101e861021136600461091d565b61052a565b34801561022257600080fd5b506101e860195481565b61023f61023a3660046109fa565b6105a3565b005b34801561024d57600080fd5b506101e861025c36600461091d565b60036020526000908152604090205481565b34801561027a57600080fd5b5061023f6105dd565b34801561028f57600080fd5b506101e861029e3660046109fa565b610648565b61023f610711565b3480156102b757600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016101ca565b3480156102e957600080fd5b5061023f6102f8366004610939565b600b80546001600160a01b03199081166001600160a01b0396871617909155600c8054821694861694909417909355600d80549093169184169182179092558151600e556020820151600f5560408201516010556060820151601155608082015160125560a082015160135560c082015160145560e0820151601555610100909101516016556018546017805460ff191691909316909114179055565b3480156103a157600080fd5b506004546005546006546007546008546009546103c095949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016101ca565b3480156103f957600080fd5b506018546102c5906001600160a01b031681565b34801561041957600080fd5b50610422610740565b60405190151581526020016101ca565b34801561043e57600080fd5b5061048861044d36600461091d565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c0016101ca565b3480156104c557600080fd5b5061023f6104d436600461091d565b610752565b3480156104e557600080fd5b506101e86104f436600461091d565b6001600160a01b03163190565b600f546000904210156105145750600090565b6010544211156105245750600290565b50600190565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561056557600080fd5b505afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d9190610a12565b92915050565b336108fc6105b18334610a69565b6040518115909202916000818181858888f193505050501580156105d9573d6000803e3d6000fd5b5050565b6001546001600160a01b0316331461063c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6106466000610836565b565b3360009081526002602052604081206013548390819084906103e8908310156106a65760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610633565b6106ae610740565b6106de576106db816106d5856106cf6019548661088890919063ffffffff16565b90610894565b906108a0565b92505b6014546000906106ef908590610a69565b601154909150600090610703908690610894565b905050505050505050919050565b60405133904780156108fc02916000818181858888f1935050505015801561073d573d6000803e3d6000fd5b50565b600061074d601a336108ac565b905090565b6001546001600160a01b031633146107ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610633565b6001600160a01b0381166108115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610633565b61073d81610836565b600061082f836001600160a01b0384166108ce565b9392505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061082f8284610a69565b600061082f8284610a4a565b600061082f8284610a2a565b6001600160a01b0381166000908152600183016020526040812054151561082f565b60008181526001830160205260408120546109155750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561059d565b50600061059d565b60006020828403121561092e578081fd5b813561082f81610aac565b600080600080610180808688031215610950578384fd5b853561095b81610aac565b945060208681013561096c81610aac565b9450604087013561097c81610aac565b9350607f8701881361098c578283fd5b604051610120810181811067ffffffffffffffff821117156109b0576109b0610a96565b6040528060608901848a018b10156109c6578586fd5b8594505b60098510156109e95780358252600194909401939083019083016109ca565b505080935050505092959194509250565b600060208284031215610a0b578081fd5b5035919050565b600060208284031215610a23578081fd5b5051919050565b600082610a4557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610a6457610a64610a80565b500290565b600082821015610a7b57610a7b610a80565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461073d57600080fdfea2646970667358221220e89da4fcd5c843c7fad7ecc12f128b94b55ef83674c5d08cb4ef2b1f541921d264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4329DB46 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x38266B22 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x3B5EF2AD EQ PUSH2 0x216 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH2 0x15B SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP13 DUP2 AND SWAP12 AND SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP15 DUP16 AND DUP2 MSTORE SWAP13 DUP15 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP11 SWAP1 SWAP13 AND SWAP10 DUP12 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x60 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x711 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x939 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH1 0xE SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x14 SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x15 SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x16 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 SWAP2 EQ OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x3C0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x2C5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x514 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO PUSH2 0x524 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59D SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x5B1 DUP4 CALLVALUE PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x646 PUSH1 0x0 PUSH2 0x836 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x13 SLOAD DUP4 SWAP1 DUP2 SWAP1 DUP5 SWAP1 PUSH2 0x3E8 SWAP1 DUP4 LT ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x633 JUMP JUMPDEST PUSH2 0x6AE PUSH2 0x740 JUMP JUMPDEST PUSH2 0x6DE JUMPI PUSH2 0x6DB DUP2 PUSH2 0x6D5 DUP6 PUSH2 0x6CF PUSH1 0x19 SLOAD DUP7 PUSH2 0x888 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x894 JUMP JUMPDEST SWAP1 PUSH2 0x8A0 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x6EF SWAP1 DUP6 SWAP1 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x703 SWAP1 DUP7 SWAP1 PUSH2 0x894 JUMP JUMPDEST SWAP1 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x73D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH1 0x1A CALLER PUSH2 0x8AC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x633 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x633 JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0x836 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP3 DUP5 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP3 DUP5 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82F DUP3 DUP5 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x915 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x59D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x82F DUP2 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x950 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x95B DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x96C DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x97C DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x98C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9B0 JUMPI PUSH2 0x9B0 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x9C6 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x9E9 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x9CA JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA23 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA64 JUMPI PUSH2 0xA64 PUSH2 0xA80 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0xA80 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP14 LOG4 0xFC 0xD5 0xC8 NUMBER 0xC7 STATICCALL 0xD7 0xEC 0xC1 0x2F SLT DUP12 SWAP5 0xB5 0x5E 0xF8 CALLDATASIZE PUSH21 0xC5D08CB4EF2B1F541921D264736F6C634300080400 CALLER ",
							"sourceMap": "378:4398:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:26;;;;;;;;;;-1:-1:-1;1563:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1563:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3003:32:9;;;2985:51;;3072:32;;;3067:2;3052:18;;3045:60;3141:32;;;;3121:18;;;3114:60;;;;3205:2;3190:18;;3183:34;;;;3248:3;3233:19;;3226:35;;;;3023:3;3277:19;;3270:35;;;;3336:3;3321:19;;3314:35;;;;3380:3;3365:19;;3358:35;3424:3;3409:19;;3402:35;3468:3;3453:19;;3446:35;3512:3;3497:19;;3490:36;3557:3;3542:19;;3535:36;3615:15;;3608:23;3602:3;3587:19;;3580:52;2972:3;2957:19;1563:26:2;;;;;;;;3001:337;;;;;;;;;;;;;:::i;:::-;;;5315:25:9;;;5303:2;5288:18;3001:337:2;5270:76:9;4654:117:2;;;;;;;;;;-1:-1:-1;4654:117:2;;;;;:::i;:::-;;:::i;1621:24::-;;;;;;;;;;;;;;;;4525:121;;;;;;:::i;:::-;;:::i;:::-;;1473:42;;;;;;;;;;-1:-1:-1;1473:42:2;;;;;:::i;:::-;;;;;;;;;;;;;;1714:103:5;;;;;;;;;;;;;:::i;3465:814:2:-;;;;;;;;;;-1:-1:-1;3465:814:2;;;;;:::i;:::-;;:::i;4409:108::-;;;:::i;1063:87:5:-;;;;;;;;;;-1:-1:-1;1136:6:5;;-1:-1:-1;;;;;1136:6:5;1063:87;;;-1:-1:-1;;;;;2419:32:9;;;2401:51;;2389:2;2374:18;1063:87:5;2356:102:9;2202:790:2;;;;;;;;;;-1:-1:-1;2202:790:2;;;;;:::i;:::-;2385:9;:38;;-1:-1:-1;;;;;;2385:38:2;;;-1:-1:-1;;;;;2385:38:2;;;;;;;2434:19;:32;;;;;;;;;;;;;;2477:19;:32;;;;;;;;;;;;;;2543:8;;2520:20;:31;2543:8;2584;;;2562:19;:30;2623:8;;;;2603:17;:28;2669:8;;;;2642:24;:35;2715:8;;;;2688:24;:35;2763:8;;;;2734:26;:37;2811:8;;;;2782:26;:37;2852:8;;;;2830:19;:30;2892:8;;;;;2871:18;:29;2947:4;;2911:25;:73;;-1:-1:-1;;2911:73:2;2947:4;;;;2939:45;;;2911:73;;;2202:790;1522:34;;;;;;;;;;-1:-1:-1;1522:34:2;;;;;;;;;;;;;;;;;;;;;;;;;6198:25:9;;;6254:2;6239:18;;6232:34;;;;6282:18;;;6275:34;;;;6340:2;6325:18;;6318:34;6383:3;6368:19;;6361:35;6427:3;6412:19;;6405:35;6185:3;6170:19;1522:34:2;6152:294:9;1596:18:2;;;;;;;;;;-1:-1:-1;1596:18:2;;;;-1:-1:-1;;;;;1596:18:2;;;3347:110;;;;;;;;;;;;;:::i;:::-;;;3808:14:9;;3801:22;3783:41;;3771:2;3756:18;3347:110:2;3738:92:9;1420:46:2;;;;;;;;;;-1:-1:-1;1420:46:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5626:25:9;;;5682:2;5667:18;;5660:34;;;;5710:18;;;5703:34;;;;5768:2;5753:18;;5746:34;5824:14;5817:22;5811:3;5796:19;;5789:51;5884:14;5877:22;5871:3;5856:19;;5849:51;5613:3;5598:19;1420:46:2;5580:326:9;1972:201:5;;;;;;;;;;-1:-1:-1;1972:201:5;;;;;:::i;:::-;;:::i;4287:111:2:-;;;;;;;;;;-1:-1:-1;4287:111:2;;;;;:::i;:::-;-1:-1:-1;;;;;4374:16:2;;;4287:111;3001:337;3080:19;;3039:7;;3062:15;:37;3059:272;;;-1:-1:-1;3123:1:2;;3001:337::o;3059:272::-;3190:17;;3172:15;:35;3169:151;;;-1:-1:-1;3235:1:2;;3001:337::o;3169:151::-;-1:-1:-1;3293:1:2;;3001:337::o;4654:117::-;4716:7;4744:8;-1:-1:-1;;;;;4744:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4736:27;4654:117;-1:-1:-1;;4654:117:2:o;4525:121::-;4598:10;4590:48;4619:18;4631:6;4619:9;:18;:::i;:::-;4590:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4525:121;:::o;1714:103:5:-;1136:6;;-1:-1:-1;;;;;1136:6:5;736:10:3;1283:23:5;1275:68;;;;-1:-1:-1;;;1275:68:5;;5010:2:9;1275:68:5;;;4992:21:9;;;5029:18;;;5022:30;5088:34;5068:18;;;5061:62;5140:18;;1275:68:5;;;;;;;;;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;3465:814:2:-;3637:10;3521:7;3627:21;;;:9;:21;;;;;3833:26;;3679:7;;;;3521;;3792:4;;3815:44;;;3807:101;;;;-1:-1:-1;;;3807:101:2;;4665:2:9;3807:101:2;;;4647:21:9;4704:2;4684:18;;;4677:30;-1:-1:-1;;;4723:18:9;;;4716:46;4779:18;;3807:101:2;4637:166:9;3807:101:2;3923:19;:17;:19::i;:::-;3919:202;;3976:133;4095:13;3977:81;4043:14;3978:28;3996:9;;3978:13;:17;;:28;;;;:::i;:::-;3977:65;;:81::i;:::-;3976:118;;:133::i;:::-;3959:150;;3919:202;4151:26;;4131:17;;4151:43;;4180:14;;4151:43;:::i;:::-;4245:24;;4131:63;;-1:-1:-1;4205:17:2;;4226:44;;:14;;:18;:44::i;:::-;4205:66;;3465:814;;;;;;;;;;:::o;4409:108::-;4458:51;;4466:10;;4487:21;4458:51;;;;;;;;;4487:21;4466:10;4458:51;;;;;;;;;;;;;;;;;;;;;4409:108::o;3347:110::-;3396:4;3420:29;:6;736:10:3;3420:15:2;:29::i;:::-;3413:36;;3347:110;:::o;1972:201:5:-;1136:6;;-1:-1:-1;;;;;1136:6:5;736:10:3;1283:23:5;1275:68;;;;-1:-1:-1;;;1275:68:5;;5010:2:9;1275:68:5;;;4992:21:9;;;5029:18;;;5022:30;5088:34;5068:18;;;5061:62;5140:18;;1275:68:5;4982:182:9;1275:68:5;-1:-1:-1;;;;;2061:22:5;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:5;;4258:2:9;2053:73:5::1;::::0;::::1;4240:21:9::0;4297:2;4277:18;;;4270:30;4336:34;4316:18;;;4309:62;-1:-1:-1;;;4387:18:9;;;4380:36;4433:19;;2053:73:5::1;4230:228:9::0;2053:73:5::1;2137:28;2156:8;2137:18;:28::i;8259:152:4:-:0;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:4;;8353:4;:50::i;:::-;8346:57;8259:152;-1:-1:-1;;;8259:152:4:o;2333:191:5:-;2426:6;;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2333:191;;:::o;3228:98:7:-;3286:7;3313:5;3317:1;3313;:5;:::i;3585:98::-;3643:7;3670:5;3674:1;3670;:5;:::i;3984:98::-;4042:7;4069:5;4073:1;4069;:5;:::i;8831:167:4:-;-1:-1:-1;;;;;8965:23:4;;8911:4;4367:19;;;:12;;;:19;;;;;;:24;;8935:55;4270:129;2174:414;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:4;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:4;2557:12;;14:257:9;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:1296::-;419:6;427;435;443;474:3;518:2;506:9;497:7;493:23;489:32;486:2;;;539:6;531;524:22;486:2;583:9;570:23;602:31;627:5;602:31;:::i;:::-;652:5;-1:-1:-1;676:2:9;715:18;;;702:32;743:33;702:32;743:33;:::i;:::-;795:7;-1:-1:-1;854:2:9;839:18;;826:32;867:33;826:32;867:33;:::i;:::-;919:7;-1:-1:-1;964:3:9;949:19;;945:33;-1:-1:-1;935:2:9;;997:6;989;982:22;935:2;1035;1029:9;1077:3;1069:6;1065:16;1147:6;1135:10;1132:22;1111:18;1099:10;1096:34;1093:62;1090:2;;;1158:18;;:::i;:::-;1194:2;1187:22;1229:6;1270:2;1255:18;;1288;;;1285:31;-1:-1:-1;1282:2:9;;;1334:6;1326;1319:22;1282:2;1361:6;1352:15;;1376:165;1390:4;1387:1;1384:11;1376:165;;;1449:17;;1437:30;;1410:1;1403:9;;;;;1487:12;;;;1519;;1376:165;;;1380:3;;1560:6;1550:16;;;;;454:1118;;;;;;;:::o;1861:190::-;1920:6;1973:2;1961:9;1952:7;1948:23;1944:32;1941:2;;;1994:6;1986;1979:22;1941:2;-1:-1:-1;2022:23:9;;1931:120;-1:-1:-1;1931:120:9:o;2056:194::-;2126:6;2179:2;2167:9;2158:7;2154:23;2150:32;2147:2;;;2200:6;2192;2185:22;2147:2;-1:-1:-1;2228:16:9;;2137:113;-1:-1:-1;2137:113:9:o;6451:217::-;6491:1;6517;6507:2;;-1:-1:-1;;;6542:31:9;;6596:4;6593:1;6586:15;6624:4;6549:1;6614:15;6507:2;-1:-1:-1;6653:9:9;;6497:171::o;6673:168::-;6713:7;6779:1;6775;6771:6;6767:14;6764:1;6761:21;6756:1;6749:9;6742:17;6738:45;6735:2;;;6786:18;;:::i;:::-;-1:-1:-1;6826:9:9;;6725:116::o;6846:125::-;6886:4;6914:1;6911;6908:8;6905:2;;;6919:18;;:::i;:::-;-1:-1:-1;6956:9:9;;6895:76::o;6976:127::-;7037:10;7032:3;7028:20;7025:1;7018:31;7068:4;7065:1;7058:15;7092:4;7089:1;7082:15;7108:127;7169:10;7164:3;7160:20;7157:1;7150:31;7200:4;7197:1;7190:15;7224:4;7221:1;7214:15;7240:131;-1:-1:-1;;;;;7315:31:9;;7305:42;;7295:2;;7361:1;7358;7351:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "561400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "1059",
								"backToken()": "infinite",
								"buyerInfo(address)": "4682",
								"checkAdminAddress()": "1217",
								"depodit(uint256)": "infinite",
								"feeAnyone()": "1085",
								"getBalance(address)": "1172",
								"getData(address)": "infinite",
								"initialSaleInfor(address,address,address,uint256[9])": "infinite",
								"owner()": "1065",
								"presaleStatus()": "5213",
								"renounceOwnership()": "23484",
								"saleInfor()": "11001",
								"status()": "1911",
								"transferETH(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"userFee(address)": "1258"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1988,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1974,
									"end": 2031,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2042,
									"end": 2048,
									"name": "PUSH",
									"source": 2,
									"value": "1A"
								},
								{
									"begin": 2053,
									"end": 2095,
									"name": "PUSH",
									"source": 2,
									"value": "6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED"
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551718"
								},
								{
									"begin": 2042,
									"end": 2052,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2118,
									"end": 2160,
									"name": "PUSH",
									"source": 2,
									"value": "4F0B12BBF40FC182559822A5B1DB6D34DBC3E016"
								},
								{
									"begin": 2107,
									"end": 2113,
									"name": "PUSH",
									"source": 2,
									"value": "1A"
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551718"
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2107,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2184,
									"end": 2186,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2172,
									"end": 2181,
									"name": "PUSH",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2172,
									"end": 2186,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8329,
									"end": 8333,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 8358,
									"end": 8361,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8353,
									"end": 8357,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2237,
									"end": 2241,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2308,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2564,
									"end": 2569,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 4776,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e89da4fcd5c843c7fad7ecc12f128b94b55ef83674c5d08cb4ef2b1f541921d264736f6c63430008040033",
									".code": [
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "861FAF5F"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "AD5C4648"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "AD5C4648"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "CAD5B0F7"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "E2D3F423"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "F8B2CB4F"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "861FAF5F"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "8F1EAE4C"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "ACFB2355"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "4329DB46"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "4329DB46"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "56C5F349"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "79647833"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "18856A2F"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "200D2ED2"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "38266B22"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "3B5EF2AD"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 4776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP13",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP13",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP12",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3003,
											"end": 3035,
											"name": "SWAP15",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3035,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3035,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3104,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3104,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3105,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3173,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3173,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3173,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3174,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3174,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3251,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3233,
											"end": 3252,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3226,
											"end": 3261,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3226,
											"end": 3261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3226,
											"end": 3261,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3226,
											"end": 3261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3305,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3305,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3321,
											"end": 3340,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3321,
											"end": 3340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3349,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3349,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3365,
											"end": 3384,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3427,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3409,
											"end": 3428,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 3471,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3453,
											"end": 3472,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3515,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3497,
											"end": 3516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3542,
											"end": 3561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3587,
											"end": 3606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3580,
											"end": 3632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2972,
											"end": 2975,
											"name": "PUSH",
											"source": 9,
											"value": "1A0"
										},
										{
											"begin": 2957,
											"end": 2976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5305,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5270,
											"end": 5346,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1645,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1515,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2419,
											"end": 2451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2451,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2451,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2389,
											"end": 2391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2356,
											"end": 2458,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2423,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 2562,
											"end": 2592,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2631,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2603,
											"end": 2631,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2669,
											"end": 2677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2677,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2642,
											"end": 2677,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2712,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2688,
											"end": 2723,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2771,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 2763,
											"end": 2771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2771,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2760,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2734,
											"end": 2771,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2782,
											"end": 2819,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2830,
											"end": 2860,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2892,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2871,
											"end": 2900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2911,
											"end": 2984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2984,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2984,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2984,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2984,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2984,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2992,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6198,
											"end": 6223,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6223,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6256,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6257,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6232,
											"end": 6266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6300,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6300,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6309,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6309,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6342,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6386,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6361,
											"end": 6396,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6427,
											"end": 6430,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6412,
											"end": 6431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6412,
											"end": 6431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6185,
											"end": 6188,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6170,
											"end": 6189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6152,
											"end": 6446,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3822,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3822,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3824,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3773,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3738,
											"end": 3830,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5626,
											"end": 5651,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5651,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5667,
											"end": 5685,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5694,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5694,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5753,
											"end": 5771,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5824,
											"end": 5838,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5817,
											"end": 5839,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5814,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5796,
											"end": 5815,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 5815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5898,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 5899,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5871,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5856,
											"end": 5875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5856,
											"end": 5875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5598,
											"end": 5617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5580,
											"end": 5906,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4398,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3077,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3059,
											"end": 3331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3059,
											"end": 3331,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3059,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3190,
											"end": 3207,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3169,
											"end": 3320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3236,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3235,
											"end": 3236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3169,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3169,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3293,
											"end": 3294,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3293,
											"end": 3294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3338,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4744,
											"end": 4761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4761,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4744,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4736,
											"end": 4763,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4608,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4631,
											"end": 4637,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4646,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5022,
											"end": 5052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3647,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3636,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3859,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3859,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3859,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F7567682076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4716,
											"end": 4762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4637,
											"end": 4803,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3807,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3923,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3919,
											"end": 4121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4095,
											"end": 4108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4043,
											"end": 4057,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3991,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 4042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3977,
											"end": 4058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 4058,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3977,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3976,
											"end": 4109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4109,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3976,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 4109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 4109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 4121,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3919,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4151,
											"end": 4177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4151,
											"end": 4194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4180,
											"end": 4194,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4180,
											"end": 4194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4151,
											"end": 4194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4151,
											"end": 4194,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4151,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4245,
											"end": 4269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4226,
											"end": 4270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4240,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4226,
											"end": 4270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4226,
											"end": 4270,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4226,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4205,
											"end": 4271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4205,
											"end": 4271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 4279,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4476,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4508,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4508,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4476,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4517,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3457,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5022,
											"end": 5052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5140,
											"end": 5158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4982,
											"end": 5164,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4260,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4299,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4230,
											"end": 4458,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3228,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3228,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3585,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3585,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4082,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3984,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4049,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8935,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4270,
											"end": 4399,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 486,
											"end": 488,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 524,
											"end": 546,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 486,
											"end": 488,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 592,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 570,
											"end": 593,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 715,
											"end": 733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 702,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 702,
											"end": 734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 802,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 856,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 826,
											"end": 858,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 826,
											"end": 858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 967,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 949,
											"end": 968,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 949,
											"end": 968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 945,
											"end": 978,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 935,
											"end": 937,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1065,
											"end": 1081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1111,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1130,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1155,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1316,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1861,
											"end": 2051,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1861,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1959,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1948,
											"end": 1971,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1976,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 2001,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2045,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 2051,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2056,
											"end": 2250,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2056,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2181,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2207,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2244,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2244,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2250,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6451,
											"end": 6668,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6451,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6542,
											"end": 6573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6600,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 6593,
											"end": 6594,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6629,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6668,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6673,
											"end": 6841,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6673,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6713,
											"end": 6720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6777,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6767,
											"end": 6781,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 6759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6783,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6841,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6846,
											"end": 6971,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6846,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6908,
											"end": 6916,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6956,
											"end": 6965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 6965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6971,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6976,
											"end": 7103,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6976,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7047,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7032,
											"end": 7035,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7028,
											"end": 7048,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7065,
											"end": 7066,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7058,
											"end": 7073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7097,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7235,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 7108,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7179,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 7164,
											"end": 7167,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7160,
											"end": 7180,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7200,
											"end": 7204,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7228,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7221,
											"end": 7222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7229,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7371,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7240,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7315,
											"end": 7346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7346,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7347,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7363,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"checkAdminAddress()": "cad5b0f7",
							"depodit(uint256)": "79647833",
							"feeAnyone()": "3b5ef2ad",
							"getBalance(address)": "f8b2cb4f",
							"getData(address)": "38266b22",
							"initialSaleInfor(address,address,address,uint256[9])": "8f1eae4c",
							"owner()": "8da5cb5b",
							"presaleStatus()": "acfb2355",
							"renounceOwnership()": "715018a6",
							"saleInfor()": "18856a2f",
							"status()": "200d2ed2",
							"transferETH(uint256)": "4329db46",
							"transferOwnership(address)": "f2fde38b",
							"userFee(address)": "56c5f349"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRefund\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAdminAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAnyone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numByer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueSwapToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"saleIsBaseToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0xa9ecc354444c350fcb48051e33beb5e450ee2559b6abcd9423307810166093e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3919cd9884322c69151cd792b1eef2c3af3d4ea259a3b34c6bf53e2b3c8a355\",\"dweb:/ipfs/QmdSa3ya46xDjzNWjgKXamDoV6MeqjPix4JaSnwDiCdZDV\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1289,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1181,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 185,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)164_storage)"
							},
							{
								"astId": 189,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 192,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(PresaleStatus)180_storage"
							},
							{
								"astId": 195,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "11",
								"type": "t_struct(SaleInfor)151_storage"
							},
							{
								"astId": 198,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "24",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 200,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "feeAnyone",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 203,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "admins",
								"offset": 0,
								"slot": "26",
								"type": "t_struct(AddressSet)886_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)164_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)164_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)886_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 885,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)585_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(BuyerInfo)164_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 153,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 155,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 157,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 159,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 161,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isRefund",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 163,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isClaim",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PresaleStatus)180_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 166,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 168,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 170,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 172,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 174,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numByer",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 176,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 179,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "admin",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(SaleInfor)151_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 124,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 127,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 130,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 132,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 134,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 136,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 138,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "valueSwapToken",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "feeTransaction",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 146,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 148,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 150,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleIsBaseToken",
										"offset": 0,
										"slot": "12",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(Set)585_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 580,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 584,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 EXTCODECOPY 0x49 JUMPDEST 0xBC 0xB9 JUMPDEST 0x26 CALLDATACOPY MSIZE ORIGIN PUSH5 0x1AEBC5C4C0 0xC1 DUP5 0xB4 PUSH10 0x1D7201B38F69C15214BD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1265:11783:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1265:11783:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 EXTCODECOPY 0x49 JUMPDEST 0xBC 0xB9 JUMPDEST 0x26 CALLDATACOPY MSIZE ORIGIN PUSH5 0x1AEBC5C4C0 0xC1 DUP5 0xB4 PUSH10 0x1D7201B38F69C15214BD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1265:11783:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53c495bbcb95b26375932641aebc5c4c0c184b4691d7201b38f69c15214bdc164736f6c63430008040033",
									".code": [
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1181,
								"contract": "Utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1289,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/SafeMath.sol\":497:7008  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/SafeMath.sol\":497:7008  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0b337010d3b45e2490a749575289c7fd3966b6186b0a19be6d68cb1c67b6dd064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0b337010d3b45e2490a749575289c7fd3966b6186b0a19be6d68cb1c67b6dd064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xB3 CALLDATACOPY ADD 0xD EXTCODESIZE GASLIMIT 0xE2 0x49 EXP PUSH21 0x9575289C7FD3966B6186B0A19BE6D68CB1C67B6DD0 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "497:6511:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;497:6511:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0b337010d3b45e2490a749575289c7fd3966b6186b0a19be6d68cb1c67b6dd064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xB3 CALLDATACOPY ADD 0xD EXTCODESIZE GASLIMIT 0xE2 0x49 EXP PUSH21 0x9575289C7FD3966B6186B0A19BE6D68CB1C67B6DD0 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "497:6511:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0b337010d3b45e2490a749575289c7fd3966b6186b0a19be6d68cb1c67b6dd064736f6c63430008040033",
									".code": [
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1892:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> Ethereum/Presale.sol:117:61:\n    |\n117 |     function depodit(uint256 _amount) external view returns(uint256) {\n    |                                                             ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3528,
					"file": "Ethereum/Presale.sol",
					"start": 3521
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Ethereum/Presale.sol:119:9:\n    |\n119 |         BuyerInfo storage buyer = buyerInfo[msg.sender];\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3624,
					"file": "Ethereum/Presale.sol",
					"start": 3601
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Ethereum/Presale.sol:122:9:\n    |\n122 |         uint256 fee = 0;\n    |         ^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3753,
					"file": "Ethereum/Presale.sol",
					"start": 3742
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Ethereum/Presale.sol:132:9:\n    |\n132 |         uint256 remaining = saleInfor.maxSpendPerBuyer - real_amount_in;\n    |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4148,
					"file": "Ethereum/Presale.sol",
					"start": 4131
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Ethereum/Presale.sol:133:9:\n    |\n133 |         uint256 tokenSold = (real_amount_in.mul(saleInfor.valueSwapToken));\n    |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4222,
					"file": "Ethereum/Presale.sol",
					"start": 4205
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1027:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1250:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1267:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1259:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1279:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1271:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1305:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1305:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:6:0"
									},
									"scope": 77,
									"src": "1241:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1319:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1604:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1637:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1629:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1669:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:9:0"
									},
									"scope": 77,
									"src": "1595:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1686:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2356:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2372:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2364:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2389:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2381:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:6:0"
									},
									"scope": 77,
									"src": "2347:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2429:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2739:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2762:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2814:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2846:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2846:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:6:0"
									},
									"scope": 77,
									"src": "2730:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2645:0",
							"usedErrors": []
						}
					],
					"src": "109:2748:0"
				},
				"id": 0
			},
			"ERC20/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 78,
							"src": "140:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "316:6:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:1",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 102,
							"linearizedBaseContracts": [
								102,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "431:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:1"
									},
									"scope": 102,
									"src": "392:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:1",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "559:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:1"
									},
									"scope": 102,
									"src": "518:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:1",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "698:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:1"
									},
									"scope": 102,
									"src": "655:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 103,
							"src": "288:422:1",
							"usedErrors": []
						}
					],
					"src": "113:599:1"
				},
				"id": 1
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"Context": [
							574
						],
						"EnumerableSet": [
							1173
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							102
						],
						"Ownable": [
							1278
						],
						"Presale": [
							552
						],
						"ReentrancyGuard": [
							1318
						],
						"SafeMath": [
							1630
						],
						"TransferHelper": [
							1779
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:2"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 78,
							"src": "120:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/IERC20Metadata.sol",
							"file": "../ERC20/IERC20Metadata.sol",
							"id": 106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 103,
							"src": "151:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 1319,
							"src": "190:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 1780,
							"src": "230:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 1174,
							"src": "269:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 1279,
							"src": "307:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/SafeMath.sol",
							"file": "../Utils/SafeMath.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 1631,
							"src": "339:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 112,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1318,
										"src": "398:15:2"
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "398:15:2"
								},
								{
									"baseName": {
										"id": 114,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1278,
										"src": "415:7:2"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "415:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552,
								1278,
								574,
								1318
							],
							"name": "Presale",
							"nameLocation": "387:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 119,
									"libraryName": {
										"id": 116,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "435:13:2"
									},
									"nodeType": "UsingForDirective",
									"src": "429:49:2",
									"typeName": {
										"id": 118,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 117,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 886,
											"src": "453:24:2"
										},
										"referencedDeclaration": 886,
										"src": "453:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1630,
										"src": "490:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "484:27:2",
									"typeName": {
										"id": 121,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "503:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 151,
									"members": [
										{
											"constant": false,
											"id": 124,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "563:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "547:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 123,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "547:15:2",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 127,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "593:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "586:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 126,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 125,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "586:6:2"
												},
												"referencedDeclaration": 77,
												"src": "586:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "620:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "613:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 129,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 128,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "613:6:2"
												},
												"referencedDeclaration": 77,
												"src": "613:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "648:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "640:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "640:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "677:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "669:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "669:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "705:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "697:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "697:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "valueSwapToken",
											"nameLocation": "731:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "723:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "723:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "feeTransaction",
											"nameLocation": "764:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "756:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 139,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "756:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "797:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "789:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 141,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "789:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "832:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "824:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "824:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "867:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "859:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "859:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "895:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "887:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 147,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "887:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "saleIsBaseToken",
											"nameLocation": "919:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "914:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 149,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "914:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "526:9:2",
									"nodeType": "StructDefinition",
									"scope": 552,
									"src": "519:423:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 164,
									"members": [
										{
											"constant": false,
											"id": 153,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "986:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "978:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "978:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 155,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "1016:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "1008:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 157,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "1045:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "1037:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1037:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 159,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1076:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "1068:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1068:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "isRefund",
											"nameLocation": "1110:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "1105:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 160,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1105:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 163,
											"mutability": "mutable",
											"name": "isClaim",
											"nameLocation": "1134:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 164,
											"src": "1129:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 162,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1129:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "957:9:2",
									"nodeType": "StructDefinition",
									"scope": 552,
									"src": "950:199:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 180,
									"members": [
										{
											"constant": false,
											"id": 166,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "1197:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1189:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 165,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1189:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "1234:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1226:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 167,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1267:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1259:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1259:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1304:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1296:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1296:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "numByer",
											"nameLocation": "1340:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1332:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1332:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "totalFee",
											"nameLocation": "1366:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1358:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1358:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 179,
											"mutability": "mutable",
											"name": "admin",
											"nameLocation": "1395:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "1385:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 178,
												"nodeType": "ArrayTypeName",
												"src": "1385:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "1164:13:2",
									"nodeType": "StructDefinition",
									"scope": 552,
									"src": "1157:251:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 185,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1457:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1420:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$164_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1428:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1420:29:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$164_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 183,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 182,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 164,
												"src": "1439:9:2"
											},
											"referencedDeclaration": 164,
											"src": "1439:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$164_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 189,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1508:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1473:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 188,
										"keyType": {
											"id": 186,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1481:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1473:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 187,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1492:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 192,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1543:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1522:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$180_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 180,
											"src": "1522:13:2"
										},
										"referencedDeclaration": 180,
										"src": "1522:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$180_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 195,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1580:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1563:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 194,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 193,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 151,
											"src": "1563:9:2"
										},
										"referencedDeclaration": 151,
										"src": "1563:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$151_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 198,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1610:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1596:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 197,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 196,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1596:6:2"
										},
										"referencedDeclaration": 77,
										"src": "1596:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b5ef2ad",
									"id": 200,
									"mutability": "mutable",
									"name": "feeAnyone",
									"nameLocation": "1636:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1621:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1621:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1685:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1652:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$886_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 202,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 201,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 886,
											"src": "1652:24:2"
										},
										"referencedDeclaration": 886,
										"src": "1652:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1722:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 208,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "1757:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1757:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 206,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "1741:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$886_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "1741:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$886_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$886_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1741:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061646d696e",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															},
															"value": "Not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1733:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1733:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1733:51:2"
											},
											{
												"id": 214,
												"nodeType": "PlaceholderStatement",
												"src": "1795:1:2"
											}
										]
									},
									"id": 216,
									"name": "onlyAdmin",
									"nameLocation": "1710:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:2"
									},
									"src": "1701:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1837:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 219,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "1856:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1856:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 221,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "1872:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "presaleOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "1872:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1856:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742073616c65206f776e6572",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															},
															"value": "Not sale owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1848:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1848:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1848:65:2"
											},
											{
												"id": 227,
												"nodeType": "PlaceholderStatement",
												"src": "1924:1:2"
											}
										]
									},
									"id": 229,
									"name": "onlySaleOwner",
									"nameLocation": "1821:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:2:2"
									},
									"src": "1812:121:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1963:231:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1974:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1988:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 233,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1981:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1981:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1974:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1974:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836436362343165656441356130373330373646334537644331363134433138356235664134316544",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2053:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 238,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2042:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$886_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 913,
														"src": "2042:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$886_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$886_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2042:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307834663042313262424634304663313832353539383232413562316442364433346462433345303136",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2118:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 244,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2107:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$886_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 913,
														"src": "2107:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$886_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$886_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2107:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2107:54:2"
											},
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 250,
														"name": "feeAnyone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2172:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2184:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "2172:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "2172:14:2"
											}
										]
									},
									"id": 255,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1963:0:2"
									},
									"scope": 552,
									"src": "1941:253:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2374:618:2",
										"statements": [
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 270,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2385:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "2385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 273,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2410:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2385:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2385:38:2"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 276,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2434:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 127,
														"src": "2434:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 279,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "2456:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "2434:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "2434:32:2"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 282,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2477:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 130,
														"src": "2477:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 285,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2499:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "2477:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2477:32:2"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 288,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2520:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "2520:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 291,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2543:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 293,
														"indexExpression": {
															"hexValue": "30",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2549:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2543:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2520:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "2520:31:2"
											},
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 296,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2562:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 134,
														"src": "2562:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 299,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 301,
														"indexExpression": {
															"hexValue": "31",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2584:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2562:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "2562:30:2"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 304,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2603:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "2603:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 307,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2623:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 309,
														"indexExpression": {
															"hexValue": "32",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2629:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2623:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2603:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2603:28:2"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 312,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2642:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "valueSwapToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "2642:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 315,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 317,
														"indexExpression": {
															"hexValue": "33",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2675:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2669:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2642:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2642:35:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 320,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2688:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "2688:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 323,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2715:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 325,
														"indexExpression": {
															"hexValue": "34",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2721:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2715:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2688:35:2"
											},
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 328,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2734:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "2734:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 331,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 333,
														"indexExpression": {
															"hexValue": "35",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2763:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2734:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2734:37:2"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 336,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2782:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2782:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 339,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2811:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 341,
														"indexExpression": {
															"hexValue": "36",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2817:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2811:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2782:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "2782:37:2"
											},
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 344,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2830:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "2830:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 347,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2852:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 349,
														"indexExpression": {
															"hexValue": "37",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2858:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2852:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2830:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "2830:30:2"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 352,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2871:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "2871:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 355,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2892:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 357,
														"indexExpression": {
															"hexValue": "38",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2892:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2871:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2871:29:2"
											},
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 360,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2911:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "2911:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "2947:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2939:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 363,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2939:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2939:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 369,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "2964:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "baseToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 130,
																	"src": "2964:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2956:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2956:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2956:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2939:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2911:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2911:73:2"
											}
										]
									},
									"functionSelector": "8f1eae4c",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "2211:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "2254:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2238:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2238:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "2285:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2278:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 258,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2278:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "2313:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2306:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 261,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2306:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2306:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2334:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 264,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2334:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"length": {
														"hexValue": "39",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2342:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "2334:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:137:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:2"
									},
									"scope": 552,
									"src": "2202:790:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3048:290:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 381,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3062:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3062:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 383,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "3080:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 134,
														"src": "3080:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3062:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "3154:177:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 389,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3172:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3172:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 391,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "3190:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 136,
																	"src": "3190:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3172:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 399,
																"nodeType": "Block",
																"src": "3267:53:2",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3293:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 380,
																		"id": 398,
																		"nodeType": "Return",
																		"src": "3286:8:2"
																	}
																]
															},
															"id": 400,
															"nodeType": "IfStatement",
															"src": "3169:151:2",
															"trueBody": {
																"id": 396,
																"nodeType": "Block",
																"src": "3209:54:2",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3235:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 380,
																		"id": 395,
																		"nodeType": "Return",
																		"src": "3228:8:2"
																	}
																]
															}
														}
													]
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "3059:272:2",
												"trueBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "3101:49:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3123:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 380,
															"id": 387,
															"nodeType": "Return",
															"src": "3116:8:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "3010:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3039:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3038:9:2"
									},
									"scope": 552,
									"src": "3001:337:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "3402:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 411,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "3436:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 409,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "3420:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$886_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "3420:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$886_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$886_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "3413:36:2"
											}
										]
									},
									"functionSelector": "cad5b0f7",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAdminAddress",
									"nameLocation": "3356:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:2:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3396:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3396:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3395:6:2"
									},
									"scope": 552,
									"src": "3347:110:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "3530:749:2",
										"statements": [
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "3619:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "3601:23:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$164_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 424,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 423,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 164,
																"src": "3601:9:2"
															},
															"referencedDeclaration": 164,
															"src": "3601:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$164_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"baseExpression": {
														"id": 426,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3627:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$164_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 429,
													"indexExpression": {
														"expression": {
															"id": 427,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3637:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3637:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3627:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$164_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3601:47:2"
											},
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "amount_in",
														"nameLocation": "3667:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "3659:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3659:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"id": 433,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 418,
													"src": "3679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3659:27:2"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "real_amount_in",
														"nameLocation": "3705:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "3697:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3697:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"id": 437,
													"name": "amount_in",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 432,
													"src": "3722:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3697:34:2"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3750:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "3742:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3742:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"hexValue": "30",
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3756:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3742:15:2"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "fullPercenFee",
														"nameLocation": "3776:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "3768:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3768:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"hexValue": "31303030",
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3792:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3768:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "3815:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 449,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "3833:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "minSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 142,
																"src": "3833:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3815:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682076616c7565",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3879:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															},
															"value": "Not enough value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:101:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "3807:101:2"
											},
											{
												"condition": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3922:20:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 455,
															"name": "checkAdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "3923:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3923:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "3919:202:2",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "3944:177:2",
													"statements": [
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 458,
																	"name": "real_amount_in",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "3959:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 469,
																			"name": "fullPercenFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "4095:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"id": 465,
																							"name": "real_amount_in",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 436,
																							"src": "4043:14:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"id": 461,
																											"name": "feeAnyone",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 200,
																											"src": "3996:9:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 459,
																											"name": "fullPercenFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 444,
																											"src": "3978:13:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 460,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1509,
																										"src": "3978:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 462,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3978:28:2",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 463,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3977:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 464,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1524,
																						"src": "3977:65:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3977:81:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 467,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3976:83:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1539,
																		"src": "3976:118:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3976:133:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3959:150:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "3959:150:2"
														}
													]
												}
											},
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "4139:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "4131:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4131:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 477,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "4151:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "4151:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 479,
														"name": "real_amount_in",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "4180:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4151:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4131:63:2"
											},
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "tokenSold",
														"nameLocation": "4213:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "4205:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4205:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 486,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "4245:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$151_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "valueSwapToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 138,
																	"src": "4245:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 484,
																	"name": "real_amount_in",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "4226:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1524,
																"src": "4226:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4226:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 489,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4225:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4205:66:2"
											}
										]
									},
									"functionSelector": "79647833",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depodit",
									"nameLocation": "3474:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3490:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3482:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:17:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3521:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:9:2"
									},
									"scope": 552,
									"src": "3465:814:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4356:42:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 499,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4374:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 498,
												"id": 501,
												"nodeType": "Return",
												"src": "4367:23:2"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4296:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4315:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4307:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4306:18:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4347:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4346:9:2"
									},
									"scope": 552,
									"src": "4287:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "4447:70:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 514,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4495:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$552",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$552",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4487:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4487:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4487:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4487:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 508,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4466:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4466:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4458:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4458:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4458:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4458:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4458:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "4458:51:2"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "4418:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4427:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4447:0:2"
									},
									"scope": 552,
									"src": "4409:108:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "4579:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 531,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4619:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4619:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 533,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "4631:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4619:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 527,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4598:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4598:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4590:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4590:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4590:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4590:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4590:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "4590:48:2"
											}
										]
									},
									"functionSelector": "4329db46",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferETH",
									"nameLocation": "4534:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4554:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "4546:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4545:16:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4579:0:2"
									},
									"scope": 552,
									"src": "4525:121:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "4725:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 546,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4744:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$102",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "4744:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 549,
												"nodeType": "Return",
												"src": "4736:27:2"
											}
										]
									},
									"functionSelector": "38266b22",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "4663:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4686:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4671:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Metadata_$102",
													"typeString": "contract IERC20Metadata"
												},
												"typeName": {
													"id": 540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 539,
														"name": "IERC20Metadata",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 102,
														"src": "4671:14:2"
													},
													"referencedDeclaration": 102,
													"src": "4671:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Metadata_$102",
														"typeString": "contract IERC20Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:25:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4716:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4715:9:2"
									},
									"scope": 552,
									"src": "4654:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 553,
							"src": "378:4398:2",
							"usedErrors": []
						}
					],
					"src": "93:4683:2"
				},
				"id": 2
			},
			"Utils/Context.sol": {
				"ast": {
					"absolutePath": "Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							574
						]
					},
					"id": 575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 555,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 574,
							"linearizedBaseContracts": [
								574
							],
							"name": "Context",
							"nameLocation": "641:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "718:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 560,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 559,
												"id": 562,
												"nodeType": "Return",
												"src": "729:17:3"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 574,
									"src": "656:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "829:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 569,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 568,
												"id": 571,
												"nodeType": "Return",
												"src": "840:15:3"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:3"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "813:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:3"
									},
									"scope": 574,
									"src": "762:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 575,
							"src": "623:243:3",
							"usedErrors": []
						}
					],
					"src": "89:779:3"
				},
				"id": 3
			},
			"Utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 576,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 577,
								"nodeType": "StructuredDocumentation",
								"src": "145:1118:4",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "EnumerableSet",
							"nameLocation": "1273:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 585,
									"members": [
										{
											"constant": false,
											"id": 580,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1809:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "1799:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 579,
												"nodeType": "ArrayTypeName",
												"src": "1799:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 584,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1980:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 585,
											"src": "1952:36:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 583,
												"keyType": {
													"id": 581,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1952:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1750:3:4",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "1743:253:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "2243:345:4",
										"statements": [
											{
												"condition": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2258:22:4",
													"subExpression": {
														"arguments": [
															{
																"id": 597,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "2269:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 598,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "2274:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 596,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2259:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "2542:39:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 595,
															"id": 623,
															"nodeType": "Return",
															"src": "2557:12:4"
														}
													]
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "2254:327:4",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "2282:254:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 606,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "2314:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 601,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "2297:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "2297:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2297:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 608,
															"nodeType": "ExpressionStatement",
															"src": "2297:23:4"
														},
														{
															"expression": {
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 609,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "2458:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 612,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 584,
																		"src": "2458:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 613,
																	"indexExpression": {
																		"id": 611,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "2471:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2458:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 614,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "2480:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "2480:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2480:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 618,
															"nodeType": "ExpressionStatement",
															"src": "2458:40:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 595,
															"id": 620,
															"nodeType": "Return",
															"src": "2513:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2004:164:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2183:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2200:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2188:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 587,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "2188:3:4"
													},
													"referencedDeclaration": 585,
													"src": "2188:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2213:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2205:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 590,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2237:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2237:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:6:4"
									},
									"scope": 1173,
									"src": "2174:414:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "2836:1348:4",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2956:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "2948:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2948:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 640,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2969:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 584,
														"src": "2969:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 643,
													"indexExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "2982:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:40:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 645,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3005:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3019:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3005:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "4138:39:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4160:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 637,
															"id": 707,
															"nodeType": "Return",
															"src": "4153:12:4"
														}
													]
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "3001:1176:4",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "3022:1110:4",
													"statements": [
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3388:13:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 705,
																	"src": "3380:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3380:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 653,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 650,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "3404:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3404:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3380:38:4"
														},
														{
															"assignments": [
																655
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 655,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3441:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 705,
																	"src": "3433:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 654,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3433:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 661,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 656,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "3453:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "3453:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3453:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3453:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3433:42:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 662,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "3496:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 663,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "3509:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3496:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 689,
															"nodeType": "IfStatement",
															"src": "3492:405:4",
															"trueBody": {
																"id": 688,
																"nodeType": "Block",
																"src": "3524:373:4",
																"statements": [
																	{
																		"assignments": [
																			666
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 666,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 688,
																				"src": "3543:17:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 665,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 671,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 667,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "3563:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 668,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "3563:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 670,
																			"indexExpression": {
																				"id": 669,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 655,
																				"src": "3575:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:4"
																	},
																	{
																		"expression": {
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 672,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 631,
																						"src": "3688:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 675,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 580,
																					"src": "3688:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 676,
																				"indexExpression": {
																					"id": 674,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "3700:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 677,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 666,
																				"src": "3717:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3688:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 679,
																		"nodeType": "ExpressionStatement",
																		"src": "3688:38:4"
																	},
																	{
																		"expression": {
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 680,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 631,
																						"src": "3802:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 683,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 584,
																					"src": "3802:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 684,
																				"indexExpression": {
																					"id": 682,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "3815:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3802:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 685,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "3828:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3802:36:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 687,
																		"nodeType": "ExpressionStatement",
																		"src": "3802:36:4"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 690,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "3978:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "3978:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3978:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 696,
															"nodeType": "ExpressionStatement",
															"src": "3978:17:4"
														},
														{
															"expression": {
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4066:26:4",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 697,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "4073:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 584,
																		"src": "4073:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 700,
																	"indexExpression": {
																		"id": 699,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "4086:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4073:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "4066:26:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4116:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 637,
															"id": 704,
															"nodeType": "Return",
															"src": "4109:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "2596:162:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2773:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2793:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2781:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 629,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "2781:3:4"
													},
													"referencedDeclaration": 585,
													"src": "2781:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2798:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 632,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:32:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2830:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:4"
									},
									"scope": 1173,
									"src": "2764:1420:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4349:50:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 722,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "4367:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 584,
															"src": "4367:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 725,
														"indexExpression": {
															"id": 724,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "4380:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4367:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4390:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4367:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 721,
												"id": 728,
												"nodeType": "Return",
												"src": "4360:31:4"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4279:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4301:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4289:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 713,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "4289:3:4"
													},
													"referencedDeclaration": 585,
													"src": "4289:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:32:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4343:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:6:4"
									},
									"scope": 1173,
									"src": "4270:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "4550:44:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 739,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4568:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "4568:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4568:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 738,
												"id": 742,
												"nodeType": "Return",
												"src": "4561:25:4"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4407:72:4",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4494:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4514:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4502:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 732,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "4502:3:4"
													},
													"referencedDeclaration": 585,
													"src": "4502:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:17:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4541:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:9:4"
									},
									"scope": 1173,
									"src": "4485:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "5024:44:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 755,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "5042:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "5042:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 758,
													"indexExpression": {
														"id": 757,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "5054:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5042:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 754,
												"id": 759,
												"nodeType": "Return",
												"src": "5035:25:4"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "4602:340:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4957:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4973:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "4961:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 747,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 746,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "4961:3:4"
													},
													"referencedDeclaration": 585,
													"src": "4961:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4986:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "4978:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:32:4"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "5015:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:4"
									},
									"scope": 1173,
									"src": "4948:120:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "5692:37:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 771,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "5710:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 580,
													"src": "5710:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 770,
												"id": 773,
												"nodeType": "Return",
												"src": "5703:18:4"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "5076:536:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5627:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5647:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "5635:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "5635:3:4"
													},
													"referencedDeclaration": 585,
													"src": "5635:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:17:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "5674:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 767,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 768,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:18:4"
									},
									"scope": 1173,
									"src": "5618:111:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 779,
									"members": [
										{
											"constant": false,
											"id": 778,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5791:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "5787:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 777,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 776,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "5787:3:4"
												},
												"referencedDeclaration": 585,
												"src": "5787:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5765:10:4",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "5758:47:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6059:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 791,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "6082:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "6082:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "6094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 790,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "6077:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 789,
												"id": 795,
												"nodeType": "Return",
												"src": "6070:30:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "5813:164:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5992:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6015:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5996:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 781,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "5996:10:4"
													},
													"referencedDeclaration": 779,
													"src": "5996:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6028:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6020:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:39:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6053:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:4"
									},
									"scope": 1173,
									"src": "5983:125:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "6363:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 809,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "6389:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "6389:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 811,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6401:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 808,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "6381:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 807,
												"id": 813,
												"nodeType": "Return",
												"src": "6374:33:4"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "6116:162:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6293:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6319:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "6300:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 799,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "6300:10:4"
													},
													"referencedDeclaration": 779,
													"src": "6300:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "6324:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:39:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "6357:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6357:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:6:4"
									},
									"scope": 1173,
									"src": "6284:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "6587:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 827,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "6615:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "6615:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 829,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "6627:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 826,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "6605:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 825,
												"id": 831,
												"nodeType": "Return",
												"src": "6598:35:4"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "6423:72:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6510:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6538:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "6519:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "6519:10:4"
													},
													"referencedDeclaration": 779,
													"src": "6519:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6551:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "6543:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:39:4"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "6581:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:6:4"
									},
									"scope": 1173,
									"src": "6501:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "6799:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 843,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "6825:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "6825:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 842,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "6817:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 841,
												"id": 846,
												"nodeType": "Return",
												"src": "6810:26:4"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "6649:72:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6736:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6762:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6743:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "6743:10:4"
													},
													"referencedDeclaration": 779,
													"src": "6743:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6742:24:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:4"
									},
									"scope": 1173,
									"src": "6727:117:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "7281:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 860,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7303:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "7303:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 862,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7315:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "7299:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 858,
												"id": 864,
												"nodeType": "Return",
												"src": "7292:29:4"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "6852:340:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7207:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7229:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "7210:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 850,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "7210:10:4"
													},
													"referencedDeclaration": 779,
													"src": "7210:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "7234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:39:4"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "7272:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:9:4"
									},
									"scope": 1173,
									"src": "7198:131:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "7960:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 877,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "7986:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "7986:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 876,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "7978:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 875,
												"id": 880,
												"nodeType": "Return",
												"src": "7971:26:4"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "7337:536:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7888:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7914:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "7895:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 868,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "7895:10:4"
													},
													"referencedDeclaration": 779,
													"src": "7895:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$779_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:24:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "7942:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 872,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7942:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 873,
													"nodeType": "ArrayTypeName",
													"src": "7942:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:18:4"
									},
									"scope": 1173,
									"src": "7879:126:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 886,
									"members": [
										{
											"constant": false,
											"id": 885,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8067:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 886,
											"src": "8063:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 884,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 883,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "8063:3:4"
												},
												"referencedDeclaration": 585,
												"src": "8063:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8041:10:4",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "8034:47:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "8335:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 898,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "8358:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 885,
															"src": "8358:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 906,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 892,
																					"src": "8394:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8386:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 904,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8386:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8378:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 902,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8378:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8370:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 900,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8370:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8370:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 897,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "8353:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 896,
												"id": 911,
												"nodeType": "Return",
												"src": "8346:57:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "8089:164:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8268:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8291:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "8272:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 888,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "8272:10:4"
													},
													"referencedDeclaration": 886,
													"src": "8272:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8304:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "8296:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:39:4"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "8329:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8329:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:6:4"
									},
									"scope": 1173,
									"src": "8259:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "8666:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 925,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "8692:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 885,
															"src": "8692:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 933,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 919,
																					"src": "8728:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8720:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 931,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8720:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8720:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8712:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 929,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8712:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8712:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8704:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 927,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8704:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8704:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 924,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8684:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 923,
												"id": 938,
												"nodeType": "Return",
												"src": "8677:60:4"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "8419:162:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8596:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8622:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8603:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 915,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "8603:10:4"
													},
													"referencedDeclaration": 886,
													"src": "8603:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8635:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8627:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8602:39:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8660:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:4"
									},
									"scope": 1173,
									"src": "8587:158:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "8917:81:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 952,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "8945:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 885,
															"src": "8945:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 960,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "8981:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8973:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 958,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8973:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8973:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8965:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8965:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8965:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 954,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 951,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "8935:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 950,
												"id": 965,
												"nodeType": "Return",
												"src": "8928:62:4"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "8753:72:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8840:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8868:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "8849:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "8849:10:4"
													},
													"referencedDeclaration": 886,
													"src": "8849:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8881:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "8873:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:39:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "8911:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8911:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:6:4"
									},
									"scope": 1173,
									"src": "8831:167:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "9156:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 977,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "9182:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 885,
															"src": "9182:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 976,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "9174:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 975,
												"id": 980,
												"nodeType": "Return",
												"src": "9167:26:4"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "9006:72:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9093:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9119:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "9100:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 969,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "9100:10:4"
													},
													"referencedDeclaration": 886,
													"src": "9100:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:24:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "9147:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9146:9:4"
									},
									"scope": 1173,
									"src": "9084:117:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "9638:75:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1000,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 986,
																						"src": "9684:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 885,
																					"src": "9684:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$585_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1002,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "9696:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$585_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 999,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 761,
																				"src": "9680:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9680:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9672:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 997,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9672:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9672:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9664:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 995,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9664:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9664:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9656:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 993,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 992,
												"id": 1007,
												"nodeType": "Return",
												"src": "9649:56:4"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "9209:340:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "9567:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 984,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "9567:10:4"
													},
													"referencedDeclaration": 886,
													"src": "9567:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "9591:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:4"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "9629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:4"
									},
									"scope": 1173,
									"src": "9555:158:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "10344:229:4",
										"statements": [
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10372:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "10355:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1021,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10355:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1022,
															"nodeType": "ArrayTypeName",
															"src": "10355:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1025,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "10388:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 885,
															"src": "10388:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1024,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "10380:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10355:44:4"
											},
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10427:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "10410:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1031,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10410:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1032,
															"nodeType": "ArrayTypeName",
															"src": "10410:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:23:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10499:41:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10514:15:4",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10524:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1033,
														"isOffset": false,
														"isSlot": false,
														"src": "10514:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1023,
														"isOffset": false,
														"isSlot": false,
														"src": "10524:5:4",
														"valueSize": 1
													}
												],
												"id": 1035,
												"nodeType": "InlineAssembly",
												"src": "10490:50:4"
											},
											{
												"expression": {
													"id": 1036,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1033,
													"src": "10559:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1037,
												"nodeType": "Return",
												"src": "10552:13:4"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "9721:536:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10272:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10298:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "10279:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1011,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "10279:10:4"
													},
													"referencedDeclaration": 886,
													"src": "10279:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$886_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:24:4"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "10326:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1015,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10326:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1016,
													"nodeType": "ArrayTypeName",
													"src": "10326:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:18:4"
									},
									"scope": 1173,
									"src": "10263:310:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1043,
									"members": [
										{
											"constant": false,
											"id": 1042,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10629:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1043,
											"src": "10625:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1041,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1040,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "10625:3:4"
												},
												"referencedDeclaration": 585,
												"src": "10625:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$585_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10606:7:4",
									"nodeType": "StructDefinition",
									"scope": 1173,
									"src": "10599:44:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "10894:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1055,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "10917:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1042,
															"src": "10917:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1059,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "10937:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10929:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1057,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10929:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10929:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1054,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "10912:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1062,
												"nodeType": "Return",
												"src": "10905:39:4"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "10651:164:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10830:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10850:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10834:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1045,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "10834:7:4"
													},
													"referencedDeclaration": 1043,
													"src": "10834:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10863:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10855:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:36:4"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10888:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10888:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:6:4"
									},
									"scope": 1173,
									"src": "10821:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "11204:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1076,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "11230:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1042,
															"src": "11230:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1080,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "11250:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11242:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11242:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11242:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1075,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "11222:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1074,
												"id": 1083,
												"nodeType": "Return",
												"src": "11215:42:4"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "10960:162:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11137:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11160:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "11144:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1066,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "11144:7:4"
													},
													"referencedDeclaration": 1043,
													"src": "11144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11173:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "11165:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:36:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "11198:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11198:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:6:4"
									},
									"scope": 1173,
									"src": "11128:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "11434:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1097,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "11462:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1042,
															"src": "11462:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1101,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "11482:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11474:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1099,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11474:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11474:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1096,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "11452:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1104,
												"nodeType": "Return",
												"src": "11445:44:4"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "11273:72:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11360:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11385:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "11369:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1087,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "11369:7:4"
													},
													"referencedDeclaration": 1043,
													"src": "11369:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11398:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "11390:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11390:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:36:4"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "11428:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1093,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11428:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11427:6:4"
									},
									"scope": 1173,
									"src": "11351:146:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "11652:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1116,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "11678:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1042,
															"src": "11678:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1115,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "11670:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1119,
												"nodeType": "Return",
												"src": "11663:26:4"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "11505:72:4",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11592:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11615:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "11599:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1108,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "11599:7:4"
													},
													"referencedDeclaration": 1043,
													"src": "11599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:21:4"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "11643:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11642:9:4"
									},
									"scope": 1173,
									"src": "11583:114:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "12131:57:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1135,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "12161:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1042,
																	"src": "12161:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$585_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1137,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "12173:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$585_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1134,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "12157:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12157:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12149:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1140,
												"nodeType": "Return",
												"src": "12142:38:4"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "11705:340:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12060:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12079:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "12063:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1123,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "12063:7:4"
													},
													"referencedDeclaration": 1043,
													"src": "12063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12092:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "12084:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:36:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "12122:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:9:4"
									},
									"scope": 1173,
									"src": "12051:137:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "12816:229:4",
										"statements": [
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12844:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "12827:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1154,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12827:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1155,
															"nodeType": "ArrayTypeName",
															"src": "12827:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1158,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "12860:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1042,
															"src": "12860:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$585_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1157,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "12852:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$585_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12827:44:4"
											},
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12899:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "12882:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1164,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ArrayTypeName",
															"src": "12882:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1167,
												"nodeType": "VariableDeclarationStatement",
												"src": "12882:23:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12971:41:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12986:15:4",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12996:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1166,
														"isOffset": false,
														"isSlot": false,
														"src": "12986:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "12996:5:4",
														"valueSize": 1
													}
												],
												"id": 1168,
												"nodeType": "InlineAssembly",
												"src": "12962:50:4"
											},
											{
												"expression": {
													"id": 1169,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1166,
													"src": "13031:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1170,
												"nodeType": "Return",
												"src": "13024:13:4"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "12196:536:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12747:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12770:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "12754:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1043,
														"src": "12754:7:4"
													},
													"referencedDeclaration": 1043,
													"src": "12754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1043_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:21:4"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "12798:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1148,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1149,
													"nodeType": "ArrayTypeName",
													"src": "12798:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:18:4"
									},
									"scope": 1173,
									"src": "12738:307:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1174,
							"src": "1265:11783:4",
							"usedErrors": []
						}
					],
					"src": "118:12930:4"
				},
				"id": 4
			},
			"Utils/Ownable.sol": {
				"ast": {
					"absolutePath": "Utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							574
						],
						"Ownable": [
							1278
						]
					},
					"id": 1279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:5"
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "./Context.sol",
							"id": 1176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1279,
							"sourceUnit": 575,
							"src": "117:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1178,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 574,
										"src": "680:7:5"
									},
									"id": 1179,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1177,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1278,
							"linearizedBaseContracts": [
								1278,
								574
							],
							"name": "Ownable",
							"nameLocation": "669:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1181,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1278,
									"src": "695:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1180,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1187,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "753:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "784:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:5"
									},
									"src": "726:84:5"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "931:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1192,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "961:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1191,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "942:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "942:32:5"
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:5"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:5"
									},
									"scope": 1278,
									"src": "917:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "1118:32:5",
										"statements": [
											{
												"expression": {
													"id": 1203,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1181,
													"src": "1136:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1202,
												"id": 1204,
												"nodeType": "Return",
												"src": "1129:13:5"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:5"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1109:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:5"
									},
									"scope": 1278,
									"src": "1063:87:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1264:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1210,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "1283:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1212,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "1294:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:5"
											},
											{
												"id": 1218,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:5"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1220,
									"name": "onlyOwner",
									"nameLocation": "1252:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:5"
									},
									"src": "1243:120:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "1768:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1227,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1226,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "1779:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:5"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1223,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1220,
												"src": "1758:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:5"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1723:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:5"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:5"
									},
									"scope": 1278,
									"src": "1714:103:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "2042:131:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1243,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "2061:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1244,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1253,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "2156:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1252,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2137:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:5"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1240,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1239,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1220,
												"src": "2032:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1981:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2007:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1999:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:5"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:5"
									},
									"scope": 1278,
									"src": "1972:201:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "2396:128:5",
										"statements": [
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2415:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "2407:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1263,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"id": 1265,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1181,
													"src": "2426:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:5"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1267,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "2443:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1268,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2452:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1272,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "2497:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "2507:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1271,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "2476:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "2471:45:5"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2342:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2369:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2361:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:5"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:5"
									},
									"scope": 1278,
									"src": "2333:191:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1279,
							"src": "651:1876:5",
							"usedErrors": []
						}
					],
					"src": "90:2437:5"
				},
				"id": 5
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1318
						]
					},
					"id": 1319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1281,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1318,
							"linearizedBaseContracts": [
								1318
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1284,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1318,
									"src": "1694:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1283,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1287,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1318,
									"src": "1742:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1289,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1318,
									"src": "1788:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "1834:41:6",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "1845:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1293,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "1855:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:6"
											}
										]
									},
									"id": 1297,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:6"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:6"
									},
									"scope": 1318,
									"src": "1820:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "2285:433:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1301,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "2376:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1302,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "2387:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:6"
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1307,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "2509:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1308,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "2519:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:6"
											},
											{
												"id": 1311,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:6"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "2688:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "2698:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:6"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1317,
									"name": "nonReentrant",
									"nameLocation": "2270:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:6"
									},
									"src": "2261:457:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1319,
							"src": "894:1827:6",
							"usedErrors": []
						}
					],
					"src": "100:2621:6"
				},
				"id": 6
			},
			"Utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "Utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1630
						]
					},
					"id": 1631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1321,
								"nodeType": "StructuredDocumentation",
								"src": "294:201:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1630,
							"linearizedBaseContracts": [
								1630
							],
							"name": "SafeMath",
							"nameLocation": "505:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "738:146:7",
										"statements": [
											{
												"id": 1351,
												"nodeType": "UncheckedBlock",
												"src": "749:128:7",
												"statements": [
													{
														"assignments": [
															1334
														],
														"declarations": [
															{
																"constant": false,
																"id": 1334,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "782:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1351,
																"src": "774:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1333,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "774:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1338,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1335,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1336,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "774:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "810:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "814:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1346,
														"nodeType": "IfStatement",
														"src": "806:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "825:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "832:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "824:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1332,
															"id": 1345,
															"nodeType": "Return",
															"src": "817:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "857:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1348,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "863:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1349,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "856:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1332,
														"id": 1350,
														"nodeType": "Return",
														"src": "849:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "521:135:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "671:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "686:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "678:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "697:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "689:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:22:7"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "723:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "729:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:7"
									},
									"scope": 1630,
									"src": "662:222:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "1112:118:7",
										"statements": [
											{
												"id": 1379,
												"nodeType": "UncheckedBlock",
												"src": "1123:100:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "1152:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1366,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "1156:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1152:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1372,
														"nodeType": "IfStatement",
														"src": "1148:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1167:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1174:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1166:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1364,
															"id": 1371,
															"nodeType": "Return",
															"src": "1159:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1374,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "1205:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1375,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "1209:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1205:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1377,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1198:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1364,
														"id": 1378,
														"nodeType": "Return",
														"src": "1191:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "892:138:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1045:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1060:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1052:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1071:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1063:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:22:7"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1097:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1103:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:15:7"
									},
									"scope": 1630,
									"src": "1036:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "1461:427:7",
										"statements": [
											{
												"id": 1421,
												"nodeType": "UncheckedBlock",
												"src": "1472:409:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "1734:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1734:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1400,
														"nodeType": "IfStatement",
														"src": "1730:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1756:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1392,
															"id": 1399,
															"nodeType": "Return",
															"src": "1742:16:7"
														}
													},
													{
														"assignments": [
															1402
														],
														"declarations": [
															{
																"constant": false,
																"id": 1402,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1781:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1421,
																"src": "1773:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1773:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1406,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1403,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "1785:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1404,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "1789:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1785:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1773:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1407,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "1809:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1408,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1809:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1410,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "1818:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1809:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1416,
														"nodeType": "IfStatement",
														"src": "1805:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1829:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1828:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1392,
															"id": 1415,
															"nodeType": "Return",
															"src": "1821:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1861:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1418,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "1867:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1419,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1860:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1392,
														"id": 1420,
														"nodeType": "Return",
														"src": "1853:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "1238:141:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1394:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1409:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1401:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:22:7"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1446:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1452:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:15:7"
									},
									"scope": 1630,
									"src": "1385:503:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "2120:119:7",
										"statements": [
											{
												"id": 1449,
												"nodeType": "UncheckedBlock",
												"src": "2131:101:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1435,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "2160:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2160:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1442,
														"nodeType": "IfStatement",
														"src": "2156:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2176:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2183:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2175:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1434,
															"id": 1441,
															"nodeType": "Return",
															"src": "2168:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2208:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1444,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "2214:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1445,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "2218:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2214:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1447,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2207:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1434,
														"id": 1448,
														"nodeType": "Return",
														"src": "2200:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "1896:142:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2053:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2068:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "2060:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2079:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "2071:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:22:7"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "2105:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2105:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "2111:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:15:7"
									},
									"scope": 1630,
									"src": "2044:195:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "2481:119:7",
										"statements": [
											{
												"id": 1477,
												"nodeType": "UncheckedBlock",
												"src": "2492:101:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1463,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "2521:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2521:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1470,
														"nodeType": "IfStatement",
														"src": "2517:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2537:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2544:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1468,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2536:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1462,
															"id": 1469,
															"nodeType": "Return",
															"src": "2529:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1472,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "2575:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1473,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1456,
																		"src": "2579:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2575:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1475,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2568:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1462,
														"id": 1476,
														"nodeType": "Return",
														"src": "2561:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "2247:152:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2414:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2429:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2421:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2440:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2432:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:22:7"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2466:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2472:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:15:7"
									},
									"scope": 1630,
									"src": "2405:195:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "2914:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1489,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "2932:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1490,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "2936:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1492,
												"nodeType": "Return",
												"src": "2925:12:7"
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "2608:233:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2856:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2868:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2860:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2879:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2871:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:22:7"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2905:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:9:7"
									},
									"scope": 1630,
									"src": "2847:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "3295:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1504,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "3313:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1505,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "3317:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1503,
												"id": 1507,
												"nodeType": "Return",
												"src": "3306:12:7"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "2953:269:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3237:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3249:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3241:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3260:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3252:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:22:7"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3286:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:9:7"
									},
									"scope": 1630,
									"src": "3228:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3652:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "3670:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "3674:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1522,
												"nodeType": "Return",
												"src": "3663:12:7"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "3334:245:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3594:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3606:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3598:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3617:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3609:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:22:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3643:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:7"
									},
									"scope": 1630,
									"src": "3585:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "4051:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "4069:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "4073:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1533,
												"id": 1537,
												"nodeType": "Return",
												"src": "4062:12:7"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "3691:287:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3993:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "3997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "4008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:22:7"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "4042:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:9:7"
									},
									"scope": 1630,
									"src": "3984:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "4616:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1549,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "4634:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1550,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "4638:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4634:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1552,
												"nodeType": "Return",
												"src": "4627:12:7"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "4090:453:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4558:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4570:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4562:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4581:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4573:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:22:7"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4607:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:9:7"
									},
									"scope": 1630,
									"src": "4549:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "5255:111:7",
										"statements": [
											{
												"id": 1577,
												"nodeType": "UncheckedBlock",
												"src": "5266:93:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1567,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "5299:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1568,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1557,
																		"src": "5304:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5299:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1570,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "5307:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1566,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5291:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1572,
														"nodeType": "ExpressionStatement",
														"src": "5291:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "5342:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1574,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "5346:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1565,
														"id": 1576,
														"nodeType": "Return",
														"src": "5335:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "4655:465:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5135:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5157:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5149:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5177:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5169:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5203:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5189:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5189:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:84:7"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5246:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:9:7"
									},
									"scope": 1630,
									"src": "5126:240:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "5993:110:7",
										"statements": [
											{
												"id": 1602,
												"nodeType": "UncheckedBlock",
												"src": "6004:92:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1592,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "6037:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6041:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6037:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1595,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "6044:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1591,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6029:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6029:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1597,
														"nodeType": "ExpressionStatement",
														"src": "6029:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1598,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "6079:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1599,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "6083:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6079:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1590,
														"id": 1601,
														"nodeType": "Return",
														"src": "6072:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "5374:484:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5873:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5895:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "5887:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "5907:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5941:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "5927:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5927:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:84:7"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "5984:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:9:7"
									},
									"scope": 1630,
									"src": "5864:239:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "6895:110:7",
										"statements": [
											{
												"id": 1627,
												"nodeType": "UncheckedBlock",
												"src": "6906:92:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1617,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "6939:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6943:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6939:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1620,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "6946:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1616,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6931:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6931:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1622,
														"nodeType": "ExpressionStatement",
														"src": "6931:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1623,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "6981:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1624,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "6985:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6981:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1615,
														"id": 1626,
														"nodeType": "Return",
														"src": "6974:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "6111:649:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6775:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6797:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6789:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6817:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6809:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6809:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6843:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6829:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6829:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:84:7"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6886:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:9:7"
									},
									"scope": 1630,
									"src": "6766:239:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1631,
							"src": "497:6511:7",
							"usedErrors": []
						}
					],
					"src": "110:6898:7"
				},
				"id": 7
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							1779
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1633,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:8",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "380:284:8",
										"statements": [
											{
												"assignments": [
													1643,
													1645
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "392:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1642,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1645,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "406:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1644,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 1651,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "487:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "491:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1648,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1646,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "427:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1657,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "541:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1658,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1645,
																					"src": "553:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1664,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1645,
																					"src": "584:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1666,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1665,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1667,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1662,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1670,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 1656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "519:137:8"
											}
										]
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "305:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "329:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "350:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:8"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:8"
									},
									"scope": 1779,
									"src": "274:390:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "1246:296:8",
										"statements": [
											{
												"assignments": [
													1688,
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1688,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1263:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "1258:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1687,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1258:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1285:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "1272:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1689,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1272:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1341:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1696,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "1353:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1697,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1682,
																	"src": "1359:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "1363:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1693,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1318:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1318:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1318:51:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1691,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "1293:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1293:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1257:123:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1703,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "1413:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1704,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1690,
																					"src": "1425:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1425:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1440:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1425:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1710,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1690,
																					"src": "1456:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1712,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1463:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1711,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1463:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1713,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1462:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1708,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1445:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1445:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1425:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1424:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1413:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1485:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:143:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "1391:143:8"
											}
										]
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1121:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1156:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1148:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1180:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1172:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1195:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1224:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1216:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:99:8"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:8"
									},
									"scope": 1779,
									"src": "1112:430:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "1733:400:8",
										"statements": [
											{
												"condition": {
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1748:8:8",
													"subExpression": {
														"id": 1733,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "1749:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1775,
													"nodeType": "Block",
													"src": "1809:317:8",
													"statements": [
														{
															"assignments": [
																1743,
																1745
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1743,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1830:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1775,
																	"src": "1825:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1742,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1825:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1745,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1852:4:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1775,
																	"src": "1839:17:8",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1744,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1839:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1755,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 1750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1912:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 1751,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "1924:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 1752,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "1928:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1748,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1889:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1889:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:45:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1746,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "1860:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1860:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:89:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1824:125:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1757,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1743,
																			"src": "1990:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1761,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1758,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1745,
																								"src": "2002:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 1759,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "2002:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1760,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2017:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2002:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1764,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1745,
																								"src": "2033:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 1766,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2040:4:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 1765,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2040:4:8",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 1767,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2039:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 1762,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "2022:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1763,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "2022:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1768,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2022:24:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2002:44:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1770,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2001:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1990:57:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2066:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 1756,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1964:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:150:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1774,
															"nodeType": "ExpressionStatement",
															"src": "1964:150:8"
														}
													]
												},
												"id": 1776,
												"nodeType": "IfStatement",
												"src": "1744:382:8",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "1758:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1738,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "1785:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1735,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "1773:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1773:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1773:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "1773:18:8"
														}
													]
												}
											}
										]
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1595:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1635:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1627:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1651:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1688:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1680:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1709:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1704:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:107:8"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:8"
									},
									"scope": 1779,
									"src": "1586:547:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "244:1892:8",
							"usedErrors": []
						}
					],
					"src": "35:2103:8"
				},
				"id": 8
			}
		}
	}
}