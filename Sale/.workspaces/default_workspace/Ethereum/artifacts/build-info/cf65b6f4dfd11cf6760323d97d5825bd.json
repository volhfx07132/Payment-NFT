{
	"id": "cf65b6f4dfd11cf6760323d97d5825bd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\n\r\ncontract Presale is ReentrancyGuard{\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        IERC20 saleToken;\r\n        IERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 valueSwapERC20;\r\n        uint256 feeTransaction;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        bool isRefund;\r\n        bool isClaim;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numByer;\r\n        uint256 totalFee;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n\r\n    constructor() payable {\r\n        WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        IERC20 _saleToken,\r\n        IERC20 _baseTOken,\r\n        uint256[9] memory datas\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0];\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.valueSwapERC20 = datas[3];\r\n        saleInfor.feeTransaction = datas[4];\r\n        saleInfor.minSpendPerBuyer = datas[5];\r\n        saleInfor.maxSpendPerBuyer = datas[6];\r\n        saleInfor.refundFee = datas[7];\r\n        saleInfor.claimFee = datas[8];\r\n    } \r\n\r\n    function status() external view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    }\r\n\r\n    function depodit(uint256 value) external payable nonReentrant {}\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function transferETH(uint256 amount) external payable {\r\n        payable(msg.sender).transfer(msg.value - amount);\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    // function safeTransfer(\r\n    //     address token,\r\n    //     address to,\r\n    //     uint256 value\r\n    // ) internal {\r\n    //     (bool success, bytes memory data) = token.call(\r\n    //         abi.encodeWithSelector(0xa9059cbb, to, value)\r\n    //     );\r\n    //     require(\r\n    //         success && (data.length == 0 || abi.decode(data, (bool))),\r\n    //         \"TransferHelper: TRANSFER_FAILED\"\r\n    //     );\r\n    // }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRefund",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numByer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valueSwapERC20",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeTransaction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":232:2923  contract Presale is ReentrancyGuard{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Ethereum/Presale.sol\":1354:1358  WETH */\n  0x15\n    /* \"Ethereum/Presale.sol\":1354:1411  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Ethereum/Presale.sol\":1368:1410  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n    /* \"Ethereum/Presale.sol\":1354:1411  WETH = IERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":232:2923  contract Presale is ReentrancyGuard{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":232:2923  contract Presale is ReentrancyGuard{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x861faf5f\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f1eae4c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x18856a2f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4329db46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x79647833\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1261:1287  SaleInfor public saleInfor */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sload(0x09)\n      sload(0x0a)\n      sload(0x0b)\n      sload(0x0c)\n      sload(0x0d)\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      tag_15\n      swap12\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap12\n      dup2\n      and\n      swap11\n      and\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      dup13\n      jump\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2327:2342   */\n      swap14\n      dup15\n      and\n        /* \"#utility.yul\":2309:2343   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2379:2394   */\n      swap12\n      dup14\n      and\n        /* \"#utility.yul\":2374:2376   */\n      0x20\n        /* \"#utility.yul\":2359:2377   */\n      dup14\n      add\n        /* \"#utility.yul\":2352:2395   */\n      mstore\n        /* \"#utility.yul\":2431:2446   */\n      swap10\n      swap1\n      swap12\n      and\n        /* \"#utility.yul\":2411:2429   */\n      swap9\n      dup11\n      add\n        /* \"#utility.yul\":2404:2447   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":2478:2480   */\n      0x60\n        /* \"#utility.yul\":2463:2481   */\n      dup10\n      add\n        /* \"#utility.yul\":2456:2490   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":2521:2524   */\n      0x80\n        /* \"#utility.yul\":2506:2525   */\n      dup9\n      add\n        /* \"#utility.yul\":2499:2534   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":2289:2292   */\n      0xa0\n        /* \"#utility.yul\":2550:2569   */\n      dup8\n      add\n        /* \"#utility.yul\":2543:2578   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2609:2612   */\n      0xc0\n        /* \"#utility.yul\":2594:2613   */\n      dup7\n      add\n        /* \"#utility.yul\":2587:2622   */\n      mstore\n        /* \"#utility.yul\":2653:2656   */\n      0xe0\n        /* \"#utility.yul\":2638:2657   */\n      dup6\n      add\n        /* \"#utility.yul\":2631:2666   */\n      mstore\n        /* \"#utility.yul\":2697:2700   */\n      0x0100\n        /* \"#utility.yul\":2682:2701   */\n      dup5\n      add\n        /* \"#utility.yul\":2675:2710   */\n      mstore\n        /* \"#utility.yul\":2741:2744   */\n      0x0120\n        /* \"#utility.yul\":2726:2745   */\n      dup4\n      add\n        /* \"#utility.yul\":2719:2754   */\n      mstore\n        /* \"#utility.yul\":2785:2788   */\n      0x0140\n        /* \"#utility.yul\":2770:2789   */\n      dup3\n      add\n        /* \"#utility.yul\":2763:2799   */\n      mstore\n        /* \"#utility.yul\":2830:2833   */\n      0x0160\n        /* \"#utility.yul\":2815:2834   */\n      dup2\n      add\n        /* \"#utility.yul\":2808:2844   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2258:2261   */\n      0x0180\n        /* \"#utility.yul\":2243:2262   */\n      add\n        /* \"Ethereum/Presale.sol\":1261:1287  SaleInfor public saleInfor */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":2142:2481  function status() external view returns(uint256) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":3582:3607   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3570:3572   */\n      0x20\n        /* \"#utility.yul\":3555:3573   */\n      add\n        /* \"Ethereum/Presale.sol\":2142:2481  function status() external view returns(uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":3537:3613   */\n      jump\n        /* \"Ethereum/Presale.sol\":2799:2920  function transferETH(uint256 amount) external payable {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Ethereum/Presale.sol\":1171:1213  mapping(address => uint256) public userFee */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_20\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":2489:2553  function depodit(uint256 value) external payable nonReentrant {} */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":2683:2791  function backToken() external payable {\r... */\n    tag_7:\n      tag_24\n      tag_38\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1427:2133  function initialSaleInfor(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_24\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Ethereum/Presale.sol\":1610:1619  saleInfor */\n      0x09\n        /* \"Ethereum/Presale.sol\":1610:1648  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":1659:1678  saleInfor.saleToken */\n      0x0a\n        /* \"Ethereum/Presale.sol\":1659:1691  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup7\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Ethereum/Presale.sol\":1702:1721  saleInfor.baseToken */\n      0x0b\n        /* \"Ethereum/Presale.sol\":1702:1734  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap2\n      swap1\n      swap4\n      and\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":1768:1776  datas[0] */\n      dup1\n      mload\n        /* \"Ethereum/Presale.sol\":1745:1765  saleInfor.tokenPrice */\n      0x0c\n        /* \"Ethereum/Presale.sol\":1745:1776  saleInfor.tokenPrice = datas[0] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1768:1776  datas[0] */\n      0x20\n        /* \"Ethereum/Presale.sol\":1809:1817  datas[1] */\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1787:1806  saleInfor.startSale */\n      0x0d\n        /* \"Ethereum/Presale.sol\":1787:1817  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1848:1856  datas[2] */\n      0x40\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1828:1845  saleInfor.endSale */\n      0x0e\n        /* \"Ethereum/Presale.sol\":1828:1856  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1894:1902  datas[3] */\n      0x60\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1867:1891  saleInfor.valueSwapERC20 */\n      0x0f\n        /* \"Ethereum/Presale.sol\":1867:1902  saleInfor.valueSwapERC20 = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1940:1948  datas[4] */\n      0x80\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1913:1937  saleInfor.feeTransaction */\n      0x10\n        /* \"Ethereum/Presale.sol\":1913:1948  saleInfor.feeTransaction = datas[4] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1988:1996  datas[5] */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":1959:1985  saleInfor.minSpendPerBuyer */\n      0x11\n        /* \"Ethereum/Presale.sol\":1959:1996  saleInfor.minSpendPerBuyer = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2036:2044  datas[6] */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2007:2033  saleInfor.maxSpendPerBuyer */\n      0x12\n        /* \"Ethereum/Presale.sol\":2007:2044  saleInfor.maxSpendPerBuyer = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2077:2085  datas[7] */\n      0xe0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2055:2074  saleInfor.refundFee */\n      0x13\n        /* \"Ethereum/Presale.sol\":2055:2085  saleInfor.refundFee = datas[7] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2117:2125  datas[8] */\n      0x0100\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2096:2114  saleInfor.claimFee */\n      0x14\n        /* \"Ethereum/Presale.sol\":2096:2125  saleInfor.claimFee = datas[8] */\n      sstore\n        /* \"Ethereum/Presale.sol\":1427:2133  function initialSaleInfor(\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":1220:1254  PresaleStatus public presaleStatus */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sload(0x03)\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      tag_45\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      dup7\n      jump\n    tag_45:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4465:4490   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":4521:4523   */\n      0x20\n        /* \"#utility.yul\":4506:4524   */\n      dup8\n      add\n        /* \"#utility.yul\":4499:4533   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":4549:4567   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":4542:4576   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4607:4609   */\n      0x60\n        /* \"#utility.yul\":4592:4610   */\n      dup5\n      add\n        /* \"#utility.yul\":4585:4619   */\n      mstore\n        /* \"#utility.yul\":4650:4653   */\n      0x80\n        /* \"#utility.yul\":4635:4654   */\n      dup4\n      add\n        /* \"#utility.yul\":4628:4663   */\n      mstore\n        /* \"#utility.yul\":4694:4697   */\n      0xa0\n        /* \"#utility.yul\":4679:4698   */\n      dup3\n      add\n        /* \"#utility.yul\":4672:4707   */\n      mstore\n        /* \"#utility.yul\":4452:4455   */\n      0xc0\n        /* \"#utility.yul\":4437:4456   */\n      add\n        /* \"Ethereum/Presale.sol\":1220:1254  PresaleStatus public presaleStatus */\n      tag_17\n        /* \"#utility.yul\":4419:4713   */\n      jump\n        /* \"Ethereum/Presale.sol\":1294:1312  IERC20 public WETH */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      sload(0x15)\n      tag_50\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3032:3064   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3014:3065   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3002:3004   */\n      0x20\n        /* \"#utility.yul\":2987:3005   */\n      add\n        /* \"Ethereum/Presale.sol\":1294:1312  IERC20 public WETH */\n      tag_17\n        /* \"#utility.yul\":2969:3071   */\n      jump\n        /* \"Ethereum/Presale.sol\":1118:1164  mapping(address => BuyerInfo) public buyerInfo */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_56:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup7\n      jump\n    tag_55:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3893:3918   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":3949:3951   */\n      0x20\n        /* \"#utility.yul\":3934:3952   */\n      dup8\n      add\n        /* \"#utility.yul\":3927:3961   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":3977:3995   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":3970:4004   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4035:4037   */\n      0x60\n        /* \"#utility.yul\":4020:4038   */\n      dup5\n      add\n        /* \"#utility.yul\":4013:4047   */\n      mstore\n        /* \"#utility.yul\":4091:4105   */\n      iszero\n        /* \"#utility.yul\":4084:4106   */\n      iszero\n        /* \"#utility.yul\":4078:4081   */\n      0x80\n        /* \"#utility.yul\":4063:4082   */\n      dup4\n      add\n        /* \"#utility.yul\":4056:4107   */\n      mstore\n        /* \"#utility.yul\":4151:4165   */\n      iszero\n        /* \"#utility.yul\":4144:4166   */\n      iszero\n        /* \"#utility.yul\":4138:4141   */\n      0xa0\n        /* \"#utility.yul\":4123:4142   */\n      dup3\n      add\n        /* \"#utility.yul\":4116:4167   */\n      mstore\n        /* \"#utility.yul\":3880:3883   */\n      0xc0\n        /* \"#utility.yul\":3865:3884   */\n      add\n        /* \"Ethereum/Presale.sol\":1118:1164  mapping(address => BuyerInfo) public buyerInfo */\n      tag_17\n        /* \"#utility.yul\":3847:4173   */\n      jump\n        /* \"Ethereum/Presale.sol\":2561:2672  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_20\n      tag_62\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":2648:2664  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":2561:2672  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":2142:2481  function status() external view returns(uint256) {\r... */\n    tag_21:\n        /* \"Ethereum/Presale.sol\":2223:2242  saleInfor.startSale */\n      sload(0x0d)\n        /* \"Ethereum/Presale.sol\":2182:2189  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2205:2220  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2205:2242  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":2202:2474  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_66\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2266:2267  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":2142:2481  function status() external view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2202:2474  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_66:\n        /* \"Ethereum/Presale.sol\":2333:2350  saleInfor.endSale */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":2315:2330  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":2315:2350  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":2312:2463  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_68\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":2378:2379  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":2142:2481  function status() external view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2312:2463  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_68:\n      pop\n        /* \"Ethereum/Presale.sol\":2436:2437  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":2142:2481  function status() external view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2799:2920  function transferETH(uint256 amount) external payable {\r... */\n    tag_27:\n        /* \"Ethereum/Presale.sol\":2872:2882  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":2864:2912  payable(msg.sender).transfer(msg.value - amount) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":2893:2911  msg.value - amount */\n      tag_71\n        /* \"Ethereum/Presale.sol\":2905:2911  amount */\n      dup4\n        /* \"Ethereum/Presale.sol\":2893:2902  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":2893:2911  msg.value - amount */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"Ethereum/Presale.sol\":2864:2912  payable(msg.sender).transfer(msg.value - amount) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n        /* \"Ethereum/Presale.sol\":2799:2920  function transferETH(uint256 amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2489:2553  function depodit(uint256 value) external payable nonReentrant {} */\n    tag_36:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3260:3281   */\n      mstore\n        /* \"#utility.yul\":3317:3319   */\n      0x1f\n        /* \"#utility.yul\":3297:3315   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3290:3320   */\n      mstore\n        /* \"#utility.yul\":3356:3389   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3336:3354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3329:3390   */\n      mstore\n        /* \"#utility.yul\":3407:3425   */\n      0x64\n      add\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":2489:2553  function depodit(uint256 value) external payable nonReentrant {} */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2683:2791  function backToken() external payable {\r... */\n    tag_38:\n        /* \"Ethereum/Presale.sol\":2732:2783  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":2740:2750  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":2761:2782  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":2732:2783  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":2761:2782  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":2740:2750  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":2732:2783  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n        /* \"Ethereum/Presale.sol\":2683:2791  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:271   */\n    tag_31:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_96:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_97\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":260:265   */\n      swap4\n        /* \"#utility.yul\":84:271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:1572   */\n    tag_42:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":474:477   */\n      0x0180\n        /* \"#utility.yul\":518:520   */\n      dup1\n        /* \"#utility.yul\":506:515   */\n      dup7\n        /* \"#utility.yul\":497:504   */\n      dup9\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:488   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":539:545   */\n      dup4\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":524:546   */\n      revert\n        /* \"#utility.yul\":486:488   */\n    tag_100:\n        /* \"#utility.yul\":583:592   */\n      dup6\n        /* \"#utility.yul\":570:593   */\n      calldataload\n        /* \"#utility.yul\":602:633   */\n      tag_101\n        /* \"#utility.yul\":627:632   */\n      dup2\n        /* \"#utility.yul\":602:633   */\n      tag_98\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":652:657   */\n      swap5\n      pop\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":715:733   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":702:734   */\n      calldataload\n        /* \"#utility.yul\":743:776   */\n      tag_102\n        /* \"#utility.yul\":702:734   */\n      dup2\n        /* \"#utility.yul\":743:776   */\n      tag_98\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":795:802   */\n      swap5\n      pop\n        /* \"#utility.yul\":854:856   */\n      0x40\n        /* \"#utility.yul\":839:857   */\n      dup8\n      add\n        /* \"#utility.yul\":826:858   */\n      calldataload\n        /* \"#utility.yul\":867:900   */\n      tag_103\n        /* \"#utility.yul\":826:858   */\n      dup2\n        /* \"#utility.yul\":867:900   */\n      tag_98\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":919:926   */\n      swap4\n      pop\n        /* \"#utility.yul\":964:967   */\n      0x7f\n        /* \"#utility.yul\":949:968   */\n      dup8\n      add\n        /* \"#utility.yul\":945:978   */\n      dup9\n      sgt\n        /* \"#utility.yul\":935:937   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":997:1003   */\n      dup3\n        /* \"#utility.yul\":989:995   */\n      dup4\n        /* \"#utility.yul\":982:1004   */\n      revert\n        /* \"#utility.yul\":935:937   */\n    tag_104:\n        /* \"#utility.yul\":1035:1037   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      mload\n        /* \"#utility.yul\":1077:1080   */\n      0x0120\n        /* \"#utility.yul\":1069:1075   */\n      dup2\n        /* \"#utility.yul\":1065:1081   */\n      add\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1135:1145   */\n      dup2\n        /* \"#utility.yul\":1132:1154   */\n      lt\n        /* \"#utility.yul\":1111:1129   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1099:1109   */\n      dup3\n        /* \"#utility.yul\":1096:1130   */\n      gt\n        /* \"#utility.yul\":1093:1155   */\n      or\n        /* \"#utility.yul\":1090:1092   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1158:1176   */\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1194:1196   */\n      0x40\n        /* \"#utility.yul\":1187:1209   */\n      mstore\n        /* \"#utility.yul\":1229:1235   */\n      dup1\n        /* \"#utility.yul\":1270:1272   */\n      0x60\n        /* \"#utility.yul\":1255:1273   */\n      dup10\n      add\n        /* \"#utility.yul\":1288:1306   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":1285:1316   */\n      dup12\n      lt\n        /* \"#utility.yul\":1282:1284   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":1334:1340   */\n      dup6\n        /* \"#utility.yul\":1326:1332   */\n      dup7\n        /* \"#utility.yul\":1319:1341   */\n      revert\n        /* \"#utility.yul\":1282:1284   */\n    tag_108:\n        /* \"#utility.yul\":1361:1367   */\n      dup6\n        /* \"#utility.yul\":1352:1367   */\n      swap5\n      pop\n        /* \"#utility.yul\":1376:1541   */\n    tag_109:\n        /* \"#utility.yul\":1390:1394   */\n      0x09\n        /* \"#utility.yul\":1387:1388   */\n      dup6\n        /* \"#utility.yul\":1384:1395   */\n      lt\n        /* \"#utility.yul\":1376:1541   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1449:1466   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1437:1467   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1410:1411   */\n      0x01\n        /* \"#utility.yul\":1403:1412   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":1487:1499   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1519:1531   */\n      dup4\n      add\n        /* \"#utility.yul\":1376:1541   */\n      jump(tag_109)\n    tag_111:\n        /* \"#utility.yul\":1380:1383   */\n      pop\n      pop\n        /* \"#utility.yul\":1560:1566   */\n      dup1\n        /* \"#utility.yul\":1550:1566   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":454:1572   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1577:1767   */\n    tag_26:\n        /* \"#utility.yul\":1636:1642   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1677:1686   */\n      dup3\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1664:1687   */\n      sub\n        /* \"#utility.yul\":1660:1692   */\n      slt\n        /* \"#utility.yul\":1657:1659   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1710:1716   */\n      dup1\n        /* \"#utility.yul\":1702:1708   */\n      dup2\n        /* \"#utility.yul\":1695:1717   */\n      revert\n        /* \"#utility.yul\":1657:1659   */\n    tag_113:\n      pop\n        /* \"#utility.yul\":1738:1761   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1647:1767   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4718:4946   */\n    tag_72:\n        /* \"#utility.yul\":4758:4762   */\n      0x00\n        /* \"#utility.yul\":4786:4787   */\n      dup3\n        /* \"#utility.yul\":4783:4784   */\n      dup3\n        /* \"#utility.yul\":4780:4788   */\n      lt\n        /* \"#utility.yul\":4777:4779   */\n      iszero\n      tag_121\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4811:4845   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4868:4872   */\n      0x11\n        /* \"#utility.yul\":4865:4866   */\n      0x04\n        /* \"#utility.yul\":4858:4873   */\n      mstore\n        /* \"#utility.yul\":4899:4903   */\n      0x24\n        /* \"#utility.yul\":4818:4822   */\n      dup2\n        /* \"#utility.yul\":4886:4904   */\n      revert\n        /* \"#utility.yul\":4777:4779   */\n    tag_121:\n      pop\n        /* \"#utility.yul\":4931:4940   */\n      sub\n      swap1\n        /* \"#utility.yul\":4767:4946   */\n      jump\t// out\n        /* \"#utility.yul\":4951:5078   */\n    tag_107:\n        /* \"#utility.yul\":5012:5022   */\n      0x4e487b71\n        /* \"#utility.yul\":5007:5010   */\n      0xe0\n        /* \"#utility.yul\":5003:5023   */\n      shl\n        /* \"#utility.yul\":5000:5001   */\n      0x00\n        /* \"#utility.yul\":4993:5024   */\n      mstore\n        /* \"#utility.yul\":5043:5047   */\n      0x41\n        /* \"#utility.yul\":5040:5041   */\n      0x04\n        /* \"#utility.yul\":5033:5048   */\n      mstore\n        /* \"#utility.yul\":5067:5071   */\n      0x24\n        /* \"#utility.yul\":5064:5065   */\n      0x00\n        /* \"#utility.yul\":5057:5072   */\n      revert\n        /* \"#utility.yul\":5083:5214   */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5158:5189   */\n      dup2\n      and\n        /* \"#utility.yul\":5148:5190   */\n      dup2\n      eq\n        /* \"#utility.yul\":5138:5140   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":5204:5205   */\n      0x00\n        /* \"#utility.yul\":5201:5202   */\n      dup1\n        /* \"#utility.yul\":5194:5206   */\n      revert\n\n    auxdata: 0xa26469706673582212206078491ded6bea607f95e8c9fe398a3d1ef394f415731aa9037bb3909864fa4564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001600055601580546001600160a01b03191673c778417e063141139fce010982780140aa0cd5ab17905561062f8061003e6000396000f3fe60806040526004361061009c5760003560e01c8063861faf5f11610064578063861faf5f146101d95780638f1eae4c146101e1578063acfb235514610280578063ad5c4648146102d8578063e2d3f42314610310578063f8b2cb4f1461039657600080fd5b806318856a2f146100a1578063200d2ed2146101615780634329db461461018457806356c5f3491461019957806379647833146101c6575b600080fd5b3480156100ad57600080fd5b50600954600a54600b54600c54600d54600e54600f546010546011546012546013546014546100f29b6001600160a01b039081169b81169a169897969594939291908c565b604080516001600160a01b039d8e1681529b8d1660208d015299909b16988a01989098526060890196909652608088019490945260a087019290925260c086015260e0850152610100840152610120830152610140820152610160810191909152610180015b60405180910390f35b34801561016d57600080fd5b506101766103be565b604051908152602001610158565b610197610192366004610593565b6103e7565b005b3480156101a557600080fd5b506101766101b43660046104af565b60026020526000908152604090205481565b6101976101d4366004610593565b610421565b610197610480565b3480156101ed57600080fd5b506101976101fc3660046104d2565b600980546001600160a01b03199081166001600160a01b0396871617909155600a8054821694861694909417909355600b8054909316919093161790558051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c081015160125560e08101516013556101000151601455565b34801561028c57600080fd5b506003546004546005546006546007546008546102ab95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610158565b3480156102e457600080fd5b506015546102f8906001600160a01b031681565b6040516001600160a01b039091168152602001610158565b34801561031c57600080fd5b5061036561032b3660046104af565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610158565b3480156103a257600080fd5b506101766103b13660046104af565b6001600160a01b03163190565b600d546000904210156103d15750600090565b600e544211156103e15750600290565b50600190565b336108fc6103f583346105ab565b6040518115909202916000818181858888f1935050505015801561041d573d6000803e3d6000fd5b5050565b600260005414156104785760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b506001600055565b60405133904780156108fc02916000818181858888f193505050501580156104ac573d6000803e3d6000fd5b50565b6000602082840312156104c0578081fd5b81356104cb816105e4565b9392505050565b6000806000806101808086880312156104e9578384fd5b85356104f4816105e4565b9450602086810135610505816105e4565b94506040870135610515816105e4565b9350607f87018813610525578283fd5b604051610120810181811067ffffffffffffffff82111715610549576105496105ce565b6040528060608901848a018b101561055f578586fd5b8594505b6009851015610582578035825260019490940193908301908301610563565b505080935050505092959194509250565b6000602082840312156105a4578081fd5b5035919050565b6000828210156105c957634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104ac57600080fdfea26469706673582212206078491ded6bea607f95e8c9fe398a3d1ef394f415731aa9037bb3909864fa4564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB OR SWAP1 SSTORE PUSH2 0x62F DUP1 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH2 0xF2 SWAP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP12 DUP2 AND SWAP11 AND SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND DUP2 MSTORE SWAP12 DUP14 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP12 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x480 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0xC SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xE SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x13 SSTORE PUSH2 0x100 ADD MLOAD PUSH1 0x14 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2AB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x2F8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x3D1 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x3E1 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x3F5 DUP4 CALLVALUE PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x41D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4CB DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4E9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4F4 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x505 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x515 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x525 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x55F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x582 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x563 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x78 0x49 SAR 0xED PUSH12 0xEA607F95E8C9FE398A3D1EF3 SWAP5 DELEGATECALL ISZERO PUSH20 0x1AA9037BB3909864FA4564736F6C634300080400 CALLER ",
							"sourceMap": "232:2691:1:-:0;;;1734:1:2;1845:7;:22;1354:4:1;:57;;-1:-1:-1;;;;;;1354:57:1;1368:42;1354:57;;;232:2691;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5216:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:257:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:13:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "474:3:4",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "468:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "531:6:4"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "518:2:4"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:4"
															},
															"nodeType": "YulIf",
															"src": "486:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "557:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "583:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "570:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "561:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "627:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "602:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "652:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "666:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "676:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "670:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "702:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:32:4"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "691:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "743:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "785:17:4",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "795:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "811:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "826:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:4"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "815:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "892:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "867:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:17:4",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "919:7:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "989:6:4"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "997:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "982:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "964:3:4",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "949:19:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:33:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:41:4"
															},
															"nodeType": "YulIf",
															"src": "935:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1015:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1019:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1047:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1069:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:3:4",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:16:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1051:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1158:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1099:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1096:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1135:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1132:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1093:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:62:4"
															},
															"nodeType": "YulIf",
															"src": "1090:2:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1198:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:22:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1218:17:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1229:6:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1222:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1244:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:18:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1248:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1326:6:4"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1334:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1292:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1303:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1308:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1285:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:31:4"
															},
															"nodeType": "YulIf",
															"src": "1282:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1352:15:4",
															"value": {
																"name": "value3",
																"nodeType": "YulIdentifier",
																"src": "1361:6:4"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1356:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1423:118:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1444:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:4"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1449:12:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1449:17:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1437:30:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1437:30:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1480:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1496:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1487:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1480:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1512:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1523:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1528:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1519:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1519:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1512:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1387:1:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:4:4",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1384:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:11:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1396:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1398:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1407:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1403:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1403:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1398:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1380:3:4",
																"statements": []
															},
															"src": "1376:165:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:16:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1560:6:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:4",
														"type": ""
													}
												],
												"src": "276:1296:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1647:120:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1693:26:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1702:6:4"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1710:6:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1695:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1695:22:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1695:22:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1677:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1660:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:32:4"
															},
															"nodeType": "YulIf",
															"src": "1657:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1728:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1751:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1738:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1613:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1624:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1636:6:4",
														"type": ""
													}
												],
												"src": "1577:190:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:625:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2235:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2247:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:3:4",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2243:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2235:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2271:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2289:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2294:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2285:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2285:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2275:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2316:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2339:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2327:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2309:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2309:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2374:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2383:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2391:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2379:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2379:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2352:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2443:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2483:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2510:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2521:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2499:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2554:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2565:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2550:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2550:19:4"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2571:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2598:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2609:3:4",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2594:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:19:4"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "2615:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2587:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2653:3:4",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:19:4"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "2659:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2631:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2631:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:3:4",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:19:4"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "2703:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2730:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2741:3:4",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2726:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2726:19:4"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "2747:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2719:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2785:3:4",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:19:4"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "2791:7:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2763:36:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:3:4",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:19:4"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "2836:7:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2104:9:4",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "2115:7:4",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "2124:7:4",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "2133:6:4",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "2141:6:4",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2149:6:4",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2157:6:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2165:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2173:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2181:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2205:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2216:4:4",
														"type": ""
													}
												],
												"src": "1772:1078:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2969:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2979:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2979:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3021:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3052:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3057:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3048:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3048:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3061:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3044:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3032:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2938:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2960:4:4",
														"type": ""
													}
												],
												"src": "2855:216:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3250:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3260:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3260:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3301:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3297:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3317:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3340:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3351:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3336:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:18:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3356:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3329:61:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3329:61:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3411:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3407:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3399:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3227:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3241:4:4",
														"type": ""
													}
												],
												"src": "3076:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3547:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3559:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3570:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3547:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3582:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3582:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3506:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3517:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3528:4:4",
														"type": ""
													}
												],
												"src": "3436:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3847:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3857:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3869:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3880:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3865:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3857:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3900:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3911:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3893:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3949:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3954:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3927:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3981:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3992:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3977:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3977:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3997:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3970:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4035:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4020:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4040:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4013:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4013:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4078:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4063:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4063:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "4098:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4091:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4091:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4084:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4084:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4056:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4056:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4127:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4138:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "4158:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4151:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4151:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4144:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3776:9:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3787:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3795:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3803:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3811:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3819:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3827:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3838:4:4",
														"type": ""
													}
												],
												"src": "3618:555:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4419:294:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4429:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4441:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4452:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4437:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4437:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4429:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4472:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4483:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4510:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4521:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4506:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4526:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4499:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4499:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4553:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4564:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4569:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4542:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4542:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4607:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4592:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4612:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4585:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4650:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4635:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4656:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4628:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4683:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4694:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:19:4"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4700:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4672:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4672:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4672:35:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4348:9:4",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4359:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4367:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4375:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4383:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4391:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4399:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4410:4:4",
														"type": ""
													}
												],
												"src": "4178:535:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4767:179:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4797:117:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "4818:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4828:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4833:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4824:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4824:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4811:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4811:34:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4811:34:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4865:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4868:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4858:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4858:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4858:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "4893:4:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4899:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4886:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4886:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4886:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4783:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4786:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4780:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4780:8:4"
															},
															"nodeType": "YulIf",
															"src": "4777:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4923:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4935:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4938:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4923:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4749:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4752:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4758:4:4",
														"type": ""
													}
												],
												"src": "4718:228:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4983:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5000:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5007:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5012:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5003:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5003:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4993:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5043:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5033:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5064:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5067:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5057:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5057:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4951:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5128:86:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5192:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5201:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5204:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5194:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5194:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5194:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5151:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5162:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5177:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5182:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5173:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5173:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5186:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "5169:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5169:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5158:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5158:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5148:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5148:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5141:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5141:50:4"
															},
															"nodeType": "YulIf",
															"src": "5138:2:4"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5117:5:4",
														"type": ""
													}
												],
												"src": "5083:131:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_IERC20_$77t_contract$_IERC20_$77t_array$_t_uint256_$9_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _2 := 32\n        let value_1 := calldataload(add(headStart, _2))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        if gt(add(headStart, _1), dataEnd) { revert(value3, value3) }\n        let i := value3\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_IERC20_$77_t_contract$_IERC20_$77_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 384)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009c5760003560e01c8063861faf5f11610064578063861faf5f146101d95780638f1eae4c146101e1578063acfb235514610280578063ad5c4648146102d8578063e2d3f42314610310578063f8b2cb4f1461039657600080fd5b806318856a2f146100a1578063200d2ed2146101615780634329db461461018457806356c5f3491461019957806379647833146101c6575b600080fd5b3480156100ad57600080fd5b50600954600a54600b54600c54600d54600e54600f546010546011546012546013546014546100f29b6001600160a01b039081169b81169a169897969594939291908c565b604080516001600160a01b039d8e1681529b8d1660208d015299909b16988a01989098526060890196909652608088019490945260a087019290925260c086015260e0850152610100840152610120830152610140820152610160810191909152610180015b60405180910390f35b34801561016d57600080fd5b506101766103be565b604051908152602001610158565b610197610192366004610593565b6103e7565b005b3480156101a557600080fd5b506101766101b43660046104af565b60026020526000908152604090205481565b6101976101d4366004610593565b610421565b610197610480565b3480156101ed57600080fd5b506101976101fc3660046104d2565b600980546001600160a01b03199081166001600160a01b0396871617909155600a8054821694861694909417909355600b8054909316919093161790558051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c081015160125560e08101516013556101000151601455565b34801561028c57600080fd5b506003546004546005546006546007546008546102ab95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610158565b3480156102e457600080fd5b506015546102f8906001600160a01b031681565b6040516001600160a01b039091168152602001610158565b34801561031c57600080fd5b5061036561032b3660046104af565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c001610158565b3480156103a257600080fd5b506101766103b13660046104af565b6001600160a01b03163190565b600d546000904210156103d15750600090565b600e544211156103e15750600290565b50600190565b336108fc6103f583346105ab565b6040518115909202916000818181858888f1935050505015801561041d573d6000803e3d6000fd5b5050565b600260005414156104785760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b506001600055565b60405133904780156108fc02916000818181858888f193505050501580156104ac573d6000803e3d6000fd5b50565b6000602082840312156104c0578081fd5b81356104cb816105e4565b9392505050565b6000806000806101808086880312156104e9578384fd5b85356104f4816105e4565b9450602086810135610505816105e4565b94506040870135610515816105e4565b9350607f87018813610525578283fd5b604051610120810181811067ffffffffffffffff82111715610549576105496105ce565b6040528060608901848a018b101561055f578586fd5b8594505b6009851015610582578035825260019490940193908301908301610563565b505080935050505092959194509250565b6000602082840312156105a4578081fd5b5035919050565b6000828210156105c957634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104ac57600080fdfea26469706673582212206078491ded6bea607f95e8c9fe398a3d1ef394f415731aa9037bb3909864fa4564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18856A2F EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x4329DB46 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x79647833 EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH2 0xF2 SWAP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP12 DUP2 AND SWAP11 AND SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND DUP2 MSTORE SWAP12 DUP14 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP12 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x480 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0xC SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xE SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x10 SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x13 SSTORE PUSH2 0x100 ADD MLOAD PUSH1 0x14 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2AB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x2F8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x3D1 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x3E1 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x8FC PUSH2 0x3F5 DUP4 CALLVALUE PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x41D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4CB DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4E9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4F4 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x505 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x515 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x525 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x55F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x582 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x563 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x78 0x49 SAR 0xED PUSH12 0xEA607F95E8C9FE398A3D1EF3 SWAP5 DELEGATECALL ISZERO PUSH20 0x1AA9037BB3909864FA4564736F6C634300080400 CALLER ",
							"sourceMap": "232:2691:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:26;;;;;;;;;;-1:-1:-1;1261:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1261:26:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2327:15:4;;;2309:34;;2379:15;;;2374:2;2359:18;;2352:43;2431:15;;;;2411:18;;;2404:43;;;;2478:2;2463:18;;2456:34;;;;2521:3;2506:19;;2499:35;;;;2289:3;2550:19;;2543:35;;;;2609:3;2594:19;;2587:35;2653:3;2638:19;;2631:35;2697:3;2682:19;;2675:35;2741:3;2726:19;;2719:35;2785:3;2770:19;;2763:36;2830:3;2815:19;;2808:36;;;;2258:3;2243:19;1261:26:1;;;;;;;;2142:339;;;;;;;;;;;;;:::i;:::-;;;3582:25:4;;;3570:2;3555:18;2142:339:1;3537:76:4;2799:121:1;;;;;;:::i;:::-;;:::i;:::-;;1171:42;;;;;;;;;;-1:-1:-1;1171:42:1;;;;;:::i;:::-;;;;;;;;;;;;;;2489:64;;;;;;:::i;:::-;;:::i;2683:108::-;;;:::i;1427:706::-;;;;;;;;;;-1:-1:-1;1427:706:1;;;;;:::i;:::-;1610:9;:38;;-1:-1:-1;;;;;;1610:38:1;;;-1:-1:-1;;;;;1610:38:1;;;;;;;1659:19;:32;;;;;;;;;;;;;;1702:19;:32;;;;;;;;;;;;1768:8;;1745:20;:31;1768:8;1809;;;1787:19;:30;1848:8;;;;1828:17;:28;1894:8;;;;1867:24;:35;1940:8;;;;1913:24;:35;1988:8;;;;1959:26;:37;2036:8;;;;2007:26;:37;2077:8;;;;2055:19;:30;2117:8;;;2096:18;:29;1427:706;1220:34;;;;;;;;;;-1:-1:-1;1220:34:1;;;;;;;;;;;;;;;;;;;;;;;;;4465:25:4;;;4521:2;4506:18;;4499:34;;;;4549:18;;;4542:34;;;;4607:2;4592:18;;4585:34;4650:3;4635:19;;4628:35;4694:3;4679:19;;4672:35;4452:3;4437:19;1220:34:1;4419:294:4;1294:18:1;;;;;;;;;;-1:-1:-1;1294:18:1;;;;-1:-1:-1;;;;;1294:18:1;;;;;;-1:-1:-1;;;;;3032:32:4;;;3014:51;;3002:2;2987:18;1294::1;2969:102:4;1118:46:1;;;;;;;;;;-1:-1:-1;1118:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3893:25:4;;;3949:2;3934:18;;3927:34;;;;3977:18;;;3970:34;;;;4035:2;4020:18;;4013:34;4091:14;4084:22;4078:3;4063:19;;4056:51;4151:14;4144:22;4138:3;4123:19;;4116:51;3880:3;3865:19;1118:46:1;3847:326:4;2561:111:1;;;;;;;;;;-1:-1:-1;2561:111:1;;;;;:::i;:::-;-1:-1:-1;;;;;2648:16:1;;;2561:111;2142:339;2223:19;;2182:7;;2205:15;:37;2202:272;;;-1:-1:-1;2266:1:1;;2142:339::o;2202:272::-;2333:17;;2315:15;:35;2312:151;;;-1:-1:-1;2378:1:1;;2142:339::o;2312:151::-;-1:-1:-1;2436:1:1;;2142:339::o;2799:121::-;2872:10;2864:48;2893:18;2905:6;2893:9;:18;:::i;:::-;2864:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2799:121;:::o;2489:64::-;1778:1:2;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:2;;3278:2:4;2368:63:2;;;3260:21:4;3317:2;3297:18;;;3290:30;3356:33;3336:18;;;3329:61;3407:18;;2368:63:2;;;;;;;;-1:-1:-1;1734:1:2;2509:7;2688:22;2489:64:1:o;2683:108::-;2732:51;;2740:10;;2761:21;2732:51;;;;;;;;;2761:21;2740:10;2732:51;;;;;;;;;;;;;;;;;;;;;2683:108::o;14:257:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:4:o;276:1296::-;419:6;427;435;443;474:3;518:2;506:9;497:7;493:23;489:32;486:2;;;539:6;531;524:22;486:2;583:9;570:23;602:31;627:5;602:31;:::i;:::-;652:5;-1:-1:-1;676:2:4;715:18;;;702:32;743:33;702:32;743:33;:::i;:::-;795:7;-1:-1:-1;854:2:4;839:18;;826:32;867:33;826:32;867:33;:::i;:::-;919:7;-1:-1:-1;964:3:4;949:19;;945:33;-1:-1:-1;935:2:4;;997:6;989;982:22;935:2;1035;1029:9;1077:3;1069:6;1065:16;1147:6;1135:10;1132:22;1111:18;1099:10;1096:34;1093:62;1090:2;;;1158:18;;:::i;:::-;1194:2;1187:22;1229:6;1270:2;1255:18;;1288;;;1285:31;-1:-1:-1;1282:2:4;;;1334:6;1326;1319:22;1282:2;1361:6;1352:15;;1376:165;1390:4;1387:1;1384:11;1376:165;;;1449:17;;1437:30;;1410:1;1403:9;;;;;1487:12;;;;1519;;1376:165;;;1380:3;;1560:6;1550:16;;;;;454:1118;;;;;;;:::o;1577:190::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1710:6;1702;1695:22;1657:2;-1:-1:-1;1738:23:4;;1647:120;-1:-1:-1;1647:120:4:o;4718:228::-;4758:4;4786:1;4783;4780:8;4777:2;;;-1:-1:-1;;;4811:34:4;;4868:4;4865:1;4858:15;4899:4;4818;4886:18;4777:2;-1:-1:-1;4931:9:4;;4767:179::o;4951:127::-;5012:10;5007:3;5003:20;5000:1;4993:31;5043:4;5040:1;5033:15;5067:4;5064:1;5057:15;5083:131;-1:-1:-1;;;;;5158:31:4;;5148:42;;5138:2;;5204:1;5201;5194:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "316600",
								"executionCost": "41173",
								"totalCost": "357773"
							},
							"external": {
								"WETH()": "1103",
								"backToken()": "infinite",
								"buyerInfo(address)": "4701",
								"depodit(uint256)": "21120",
								"getBalance(address)": "1172",
								"initialSaleInfor(address,address,address,uint256[9])": "infinite",
								"presaleStatus()": "5168",
								"saleInfor()": "10142",
								"status()": "1888",
								"transferETH(uint256)": "infinite",
								"userFee(address)": "1280"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 2923,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1354,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1354,
									"end": 1411,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1411,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1354,
									"end": 1411,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1410,
									"name": "PUSH",
									"source": 1,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": 1354,
									"end": 1411,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1411,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2923,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206078491ded6bea607f95e8c9fe398a3d1ef394f415731aa9037bb3909864fa4564736f6c63430008040033",
									".code": [
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "861FAF5F"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "8F1EAE4C"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "ACFB2355"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "AD5C4648"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "E2D3F423"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "18856A2F"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "200D2ED2"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "4329DB46"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "56C5F349"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "79647833"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 2923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2447,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2447,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2480,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2490,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2490,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2534,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2534,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2534,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2292,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2569,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2656,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2638,
											"end": 2657,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2700,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2682,
											"end": 2701,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2788,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2789,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2243,
											"end": 2262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1287,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3572,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3537,
											"end": 3613,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1213,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1648,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1678,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1691,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1765,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1745,
											"end": 1776,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1806,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1828,
											"end": 1856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1891,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1913,
											"end": 1948,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1959,
											"end": 1996,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2036,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2085,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2077,
											"end": 2085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2085,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2055,
											"end": 2085,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 2133,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4490,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4490,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4533,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4533,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4609,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4653,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4635,
											"end": 4654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4635,
											"end": 4654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4628,
											"end": 4663,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4697,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4679,
											"end": 4698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4452,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 4437,
											"end": 4456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4419,
											"end": 4713,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3065,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2969,
											"end": 3071,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3961,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3961,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4004,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4004,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4063,
											"end": 4082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4138,
											"end": 4141,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4116,
											"end": 4167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3865,
											"end": 3884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3847,
											"end": 4173,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2223,
											"end": 2242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2242,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2202,
											"end": 2474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2202,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2202,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2330,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2350,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2312,
											"end": 2463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2312,
											"end": 2463,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2312,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2882,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3356,
											"end": 3389,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3390,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3425,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3407,
											"end": 3425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2750,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2750,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 84,
											"end": 271,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 271,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 276,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 486,
											"end": 488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 524,
											"end": 546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 486,
											"end": 488,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 583,
											"end": 592,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 570,
											"end": 593,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 602,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 602,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 715,
											"end": 733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 702,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 702,
											"end": 734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 743,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 795,
											"end": 802,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 854,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 826,
											"end": 858,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 826,
											"end": 858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 867,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 867,
											"end": 900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 919,
											"end": 926,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 949,
											"end": 968,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 949,
											"end": 968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 945,
											"end": 978,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 935,
											"end": 937,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1129,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1130,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1093,
											"end": 1155,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 1316,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1341,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1376,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 1572,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1577,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1692,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1717,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4718,
											"end": 4946,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4718,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4780,
											"end": 4788,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4811,
											"end": 4845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 4873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4946,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4951,
											"end": 5078,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4951,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5022,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 5007,
											"end": 5010,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5040,
											"end": 5041,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5033,
											"end": 5048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5071,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5064,
											"end": 5065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5083,
											"end": 5214,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5083,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5158,
											"end": 5189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5148,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5148,
											"end": 5190,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"depodit(uint256)": "79647833",
							"getBalance(address)": "f8b2cb4f",
							"initialSaleInfor(address,address,address,uint256[9])": "8f1eae4c",
							"presaleStatus()": "acfb2355",
							"saleInfor()": "18856a2f",
							"status()": "200d2ed2",
							"transferETH(uint256)": "4329db46",
							"userFee(address)": "56c5f349"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRefund\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numByer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueSwapERC20\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0x483114389a5d9843b42d8424c86f1dfcdffa307e8dca7dcb25aa31a74799dbf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d061c23f7ad0000a44f3e83b07bf4b081894dcbaa510e292010aa36383c3d86\",\"dweb:/ipfs/QmZfXLcRmtnqm4iic3rG9F6Dwn4bpBiyq23RBHW5ksMPPq\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 365,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 142,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)124_storage)"
							},
							{
								"astId": 146,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 149,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(PresaleStatus)137_storage"
							},
							{
								"astId": 152,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(SaleInfor)111_storage"
							},
							{
								"astId": 155,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "21",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)124_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)124_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(BuyerInfo)124_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 113,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 115,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 117,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 119,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 121,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isRefund",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 123,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isClaim",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PresaleStatus)137_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 126,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 128,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 130,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 132,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 134,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numByer",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 136,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalFee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(SaleInfor)111_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 86,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 89,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 92,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 94,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 96,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 98,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 100,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "valueSwapERC20",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 102,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "feeTransaction",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 365,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2136  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1892:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x2D 0xCA 0xE6 LOG0 JUMPI SGT 0x21 GASPRICE SHL 0xAB SWAP5 DUP11 0x2C 0xCC 0xEC SWAP4 0x4B 0x4B SWAP1 POP SWAP7 XOR ADD 0x21 GT BLOCKHASH KECCAK256 PUSH30 0x87EC0264736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "244:1892:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2136,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc2dcae6a05713213a1bab948a2cccec934b4b9050961801211140207d87ec0264736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2136,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x7ab3ec832cb3fa01c85928f2aa6535f00adda76d891cb087e75ba493b6027d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffc0f1cefbdb42cb111d8e76e27e788cd2ed8b846d3b8f19d0935beedffca891\",\"dweb:/ipfs/QmbRJm5q9Xqv9Py9aqkGqiKMfkHzdXvnidCLFH66oXY3Zk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0",
							"usedErrors": []
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Presale": [
							354
						],
						"ReentrancyGuard": [
							394
						],
						"TransferHelper": [
							543
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 355,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 355,
							"sourceUnit": 395,
							"src": "151:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 355,
							"sourceUnit": 544,
							"src": "191:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "252:15:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "252:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354,
								394
							],
							"name": "Presale",
							"nameLocation": "241:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 86,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "318:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "302:28:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 85,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "302:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 89,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "348:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "341:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 88,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 87,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "341:6:1"
												},
												"referencedDeclaration": 77,
												"src": "341:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 92,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "375:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "368:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 91,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 90,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "368:6:1"
												},
												"referencedDeclaration": 77,
												"src": "368:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "403:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "395:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 93,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "395:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "432:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "424:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "424:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "460:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "452:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "452:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "valueSwapERC20",
											"nameLocation": "486:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "478:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "478:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "feeTransaction",
											"nameLocation": "519:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "511:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "511:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "552:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "544:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "544:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "587:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "579:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "622:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "614:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "614:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "650:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "642:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "642:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "281:9:1",
									"nodeType": "StructDefinition",
									"scope": 354,
									"src": "274:392:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 124,
									"members": [
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "710:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "702:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "702:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "740:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "732:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "732:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "769:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "761:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "800:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "792:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "792:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "isRefund",
											"nameLocation": "834:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "829:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 120,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "829:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "isClaim",
											"nameLocation": "858:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "853:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 122,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "853:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "681:9:1",
									"nodeType": "StructDefinition",
									"scope": 354,
									"src": "674:199:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 137,
									"members": [
										{
											"constant": false,
											"id": 126,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "921:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "913:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "913:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "958:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "950:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 127,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "950:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "991:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "983:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 129,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "983:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1028:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "1020:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1020:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "numByer",
											"nameLocation": "1064:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "1056:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1056:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "totalFee",
											"nameLocation": "1090:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 137,
											"src": "1082:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1082:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "888:13:1",
									"nodeType": "StructDefinition",
									"scope": 354,
									"src": "881:225:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 142,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1155:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1118:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$124_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 141,
										"keyType": {
											"id": 138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1126:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1118:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$124_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 140,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 139,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 124,
												"src": "1137:9:1"
											},
											"referencedDeclaration": 124,
											"src": "1137:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$124_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 146,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1206:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1171:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 145,
										"keyType": {
											"id": 143,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1179:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1171:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1190:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 149,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1241:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1220:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$137_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 148,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 147,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 137,
											"src": "1220:13:1"
										},
										"referencedDeclaration": 137,
										"src": "1220:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$137_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 152,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1278:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1261:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 151,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 150,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 111,
											"src": "1261:9:1"
										},
										"referencedDeclaration": 111,
										"src": "1261:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$111_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 155,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1308:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1294:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 154,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 153,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1294:6:1"
										},
										"referencedDeclaration": 77,
										"src": "1294:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1343:76:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1354:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1368:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 159,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1361:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1361:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1354:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1354:57:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:2:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:1"
									},
									"scope": 354,
									"src": "1321:98:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1599:534:1",
										"statements": [
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 180,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1610:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "1610:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1635:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1610:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1610:38:1"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 186,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1659:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "1659:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 189,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1681:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1659:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1659:32:1"
											},
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 192,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1702:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "1702:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 195,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1724:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1702:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1702:32:1"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 198,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1745:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "1745:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 201,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1768:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 203,
														"indexExpression": {
															"hexValue": "30",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1774:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1768:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1745:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1745:31:1"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 206,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1787:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "1787:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 209,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1809:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 211,
														"indexExpression": {
															"hexValue": "31",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1815:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1809:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1787:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1787:30:1"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 214,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1828:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1828:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 217,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1848:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 219,
														"indexExpression": {
															"hexValue": "32",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1854:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1848:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1828:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1828:28:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 222,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1867:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "valueSwapERC20",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "1867:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 225,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1894:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 227,
														"indexExpression": {
															"hexValue": "33",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1900:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1894:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1867:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1867:35:1"
											},
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 230,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1913:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "1913:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 233,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1940:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 235,
														"indexExpression": {
															"hexValue": "34",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1940:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1913:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1913:35:1"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 238,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1959:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "1959:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 241,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1988:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 243,
														"indexExpression": {
															"hexValue": "35",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1994:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1988:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1959:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1959:37:1"
											},
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 246,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2007:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2007:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 249,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2036:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 251,
														"indexExpression": {
															"hexValue": "36",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2042:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2036:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2007:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "2007:37:1"
											},
											{
												"expression": {
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 254,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2055:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "2055:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 257,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2077:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 259,
														"indexExpression": {
															"hexValue": "37",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2083:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2077:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2055:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2055:30:1"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 262,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2096:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2096:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 265,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2117:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 267,
														"indexExpression": {
															"hexValue": "38",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2117:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2096:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2096:29:1"
											}
										]
									},
									"functionSelector": "8f1eae4c",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "1436:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "1479:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1463:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "1510:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1503:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 168,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1503:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1503:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "1538:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1531:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1531:6:1"
													},
													"referencedDeclaration": 77,
													"src": "1531:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "1577:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1559:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 174,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1559:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 176,
													"length": {
														"hexValue": "39",
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1567:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "1559:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:137:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:0:1"
									},
									"scope": 354,
									"src": "1427:706:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2191:290:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 276,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2205:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2205:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 278,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2223:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "2223:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2205:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "2297:177:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 284,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2315:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2315:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 286,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "2333:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$111_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 98,
																	"src": "2333:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2315:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 294,
																"nodeType": "Block",
																"src": "2410:53:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2436:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 275,
																		"id": 293,
																		"nodeType": "Return",
																		"src": "2429:8:1"
																	}
																]
															},
															"id": 295,
															"nodeType": "IfStatement",
															"src": "2312:151:1",
															"trueBody": {
																"id": 291,
																"nodeType": "Block",
																"src": "2352:54:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2378:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 275,
																		"id": 290,
																		"nodeType": "Return",
																		"src": "2371:8:1"
																	}
																]
															}
														}
													]
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "2202:272:1",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "2244:49:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2266:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 275,
															"id": 282,
															"nodeType": "Return",
															"src": "2259:8:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "2151:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:2:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2182:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:9:1"
									},
									"scope": 354,
									"src": "2142:339:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "2551:2:1",
										"statements": []
									},
									"functionSelector": "79647833",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 303,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 393,
												"src": "2538:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2538:12:1"
										}
									],
									"name": "depodit",
									"nameLocation": "2498:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2514:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2506:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:15:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2551:0:1"
									},
									"scope": 354,
									"src": "2489:64:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2630:42:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 314,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2648:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2648:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 316,
												"nodeType": "Return",
												"src": "2641:23:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2570:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2589:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2581:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2580:18:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:9:1"
									},
									"scope": 354,
									"src": "2561:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2721:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 329,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$354",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$354",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 327,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2761:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 323,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2740:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2740:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2732:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2732:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2732:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2732:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2732:51:1"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "2692:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2721:0:1"
									},
									"scope": 354,
									"src": "2683:108:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2853:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 346,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2893:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2893:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 348,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "2905:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2893:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 342,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2872:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2872:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2864:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 340,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2864:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2864:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2864:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "2864:48:1"
											}
										]
									},
									"functionSelector": "4329db46",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferETH",
									"nameLocation": "2808:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2828:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2820:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:16:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:0:1"
									},
									"scope": 354,
									"src": "2799:121:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 355,
							"src": "232:2691:1",
							"usedErrors": []
						}
					],
					"src": "93:2830:1"
				},
				"id": 1
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 360,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 359,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 363,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 364,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 369,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 373,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 394,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 377,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 378,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 384,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 387,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 389,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 393,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 395,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2621:2"
				},
				"id": 2
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							543
						]
					},
					"id": 544,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:3",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 543,
							"linearizedBaseContracts": [
								543
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "380:284:3",
										"statements": [
											{
												"assignments": [
													407,
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "392:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "406:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 415,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "487:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 416,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "491:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 412,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 410,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "427:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 421,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "541:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 422,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "553:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 428,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "584:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 430,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 429,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 431,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 426,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 434,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "519:137:3"
											}
										]
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "305:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "329:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "350:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:3"
									},
									"scope": 543,
									"src": "274:390:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1246:296:3",
										"statements": [
											{
												"assignments": [
													452,
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1263:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "1258:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 451,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1258:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1285:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "1272:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 453,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1272:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1341:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 460,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "1353:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 461,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1359:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 462,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1363:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 457,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1318:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1318:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1318:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "1293:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1293:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1257:123:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1413:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 468,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "1425:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1425:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1440:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1425:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 474,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "1456:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 476,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1463:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 475,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1463:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 477,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1462:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 472,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1445:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1445:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1425:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1424:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1413:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1485:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:143:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "1391:143:3"
											}
										]
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1121:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1156:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1148:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1180:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1172:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1203:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1195:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1224:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1216:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:99:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:3"
									},
									"scope": 543,
									"src": "1112:430:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "1733:400:3",
										"statements": [
											{
												"condition": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1748:8:3",
													"subExpression": {
														"id": 497,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "1749:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 539,
													"nodeType": "Block",
													"src": "1809:317:3",
													"statements": [
														{
															"assignments": [
																507,
																509
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 507,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1830:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 539,
																	"src": "1825:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 506,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1825:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 509,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1852:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 539,
																	"src": "1839:17:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1839:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 519,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1912:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 515,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 490,
																				"src": "1924:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 516,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 492,
																				"src": "1928:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 512,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1889:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1889:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:45:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 510,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "1860:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1860:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:89:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1824:125:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 521,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "1990:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 522,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 509,
																								"src": "2002:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 523,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "2002:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 524,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2017:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2002:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 528,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 509,
																								"src": "2033:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 530,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2040:4:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 529,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2040:4:3",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 531,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2039:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 526,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "2022:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 527,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "2022:10:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 532,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2022:24:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2002:44:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 534,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2001:46:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1990:57:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2066:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 520,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1964:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:150:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 538,
															"nodeType": "ExpressionStatement",
															"src": "1964:150:3"
														}
													]
												},
												"id": 540,
												"nodeType": "IfStatement",
												"src": "1744:382:3",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "1758:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 502,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "1785:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 499,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "1773:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1773:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1773:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "1773:18:3"
														}
													]
												}
											}
										]
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1595:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1635:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1627:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1667:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1651:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1704:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:107:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:3"
									},
									"scope": 543,
									"src": "1586:547:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 544,
							"src": "244:1892:3",
							"usedErrors": []
						}
					],
					"src": "35:2103:3"
				},
				"id": 3
			}
		}
	}
}