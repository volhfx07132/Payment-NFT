{
	"id": "dc109a27565b27ef6af04fc2fada4d9c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/ERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\nimport \"../Utils/Ownable.sol\";\r\nimport \"../Utils/Context.sol\";\r\nimport \"../Utils/SafeMath.sol\";\r\n\r\n\r\n\r\ncontract Presale is ReentrancyGuard, Ownable{\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n    using SafeMath for uint256;\r\n\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        ERC20 saleToken;\r\n        ERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n        bool saleIsBaseToken;\r\n        uint256 amountTokenForSale;\r\n    }\r\n    \r\n    struct SaleTotalSupply {\r\n        uint256 hardCap;\r\n        uint256 softCap;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 numberBuyer;\r\n        bool isOwnerClaimSaleToken;\r\n        bool isOwnerRefundBaseToken;\r\n        address[] admin;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleTotalSupply public saleTotalSupply;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n    uint256 public feeAnyone;\r\n    EnumerableSet.AddressSet private admins; \r\n    uint256 public totalFee;\r\n\r\n    modifier onlyAdmin() {\r\n        require(admins.contains(_msgSender()), \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyPresaleOwner() {\r\n        require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlySaleOwner() {\r\n        require(_msgSender() == saleInfor.presaleOwner, \"Not sale owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() payable {\r\n        WETH = ERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n        admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD);\r\n        admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016);\r\n        feeAnyone = 20;\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        ERC20 _saleToken,\r\n        ERC20 _baseTOken,\r\n        uint256[9] memory datas\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0] * 10** uint256(ERC20(saleInfor.saleToken).decimals());\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.minSpendPerBuyer = datas[3];\r\n        saleInfor.maxSpendPerBuyer = datas[4] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals());\r\n        saleInfor.refundFee = datas[5];\r\n        saleInfor.claimFee = datas[6];\r\n        saleTotalSupply.hardCap = datas[7] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals());\r\n        saleTotalSupply.softCap = datas[8] * 10** uint256(ERC20(saleInfor.baseToken).decimals());\r\n        saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken);\r\n        saleInfor.amountTokenForSale = saleInfor.tokenPrice.mul(saleTotalSupply.hardCap)/\r\n                                       (10** uint256(ERC20(saleInfor.baseToken).decimals()));\r\n    } \r\n\r\n    function status() public view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    } \r\n\r\n    function checkAdminAddress() public view returns(bool) {\r\n        return admins.contains(_msgSender());\r\n    }\r\n\r\n    function deposit(uint256 _amount) external payable nonReentrant {\r\n        // require(status() == 1, \"Not active\"); // ACTIVE\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        uint256 amount_in = _amount;\r\n        uint256 real_amount_in = amount_in;\r\n        uint256 fee = 0;\r\n        uint256 fullPercenFee = 1000;\r\n        require(msg.value >= real_amount_in, \"Please provide navite coin\");\r\n        require(real_amount_in >= saleInfor.minSpendPerBuyer, \r\n                \"Not enough value\"\r\n        );\r\n        require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r\n                \"Overflow value\"\r\n        );\r\n        if(!checkAdminAddress()) {\r\n            real_amount_in = ((fullPercenFee.sub(feeAnyone))\r\n                             .mul(real_amount_in))\r\n                             .div(fullPercenFee);\r\n            fee = amount_in - real_amount_in;                 \r\n        }\r\n        uint256 remainingByUser = saleInfor.maxSpendPerBuyer - buyer.baseDeposit;\r\n        uint256 remainingByPool = saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected;\r\n        uint256 allowance = remainingByUser > remainingByPool ? remainingByPool : remainingByUser;\r\n        require(real_amount_in <= allowance, \"Sale is success\");\r\n        uint256 tokenSold = (real_amount_in.\r\n                            mul(saleInfor.tokenPrice).\r\n                            div(10 ** uint256(ERC20(saleInfor.baseToken).decimals())));                 \r\n        buyer.baseDeposit += amount_in;\r\n        buyer.tokenOwner += tokenSold;\r\n        presaleStatus.totalBaseCollected += real_amount_in;\r\n        presaleStatus.totalTokenSold += tokenSold;\r\n        presaleStatus.numberBuyer++;\r\n        userFee[msg.sender] += fee;\r\n        totalFee += fee;  \r\n        if(saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value) {\r\n            payable(msg.sender).transfer(msg.value - real_amount_in - fee);\r\n        } \r\n        if(!saleInfor.saleIsBaseToken) {\r\n            TransferHelper.safeTransferFrom(\r\n                address(saleInfor.baseToken),\r\n                msg.sender,\r\n                address(this),\r\n                real_amount_in + fee\r\n            );\r\n        }            \r\n    }\r\n\r\n    function userClaimEmergency() external nonReentrant {\r\n        require(status() == 1, \"Sale sucesss\"); \r\n        require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r\n               \"All token has been withdraw\"\r\n        );\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\");\r\n        uint256 amountClaim = ((uint256(1000).sub(saleInfor.claimFee))\r\n                         .mul(buyer.tokenOwner))\r\n                         .div(uint256(1000));\r\n        presaleStatus.totalTokenWithDraw += amountClaim;\r\n        saleInfor.amountTokenForSale -= amountClaim;\r\n        buyer.baseDeposit  = 0;\r\n        buyer.tokenOwner = 0;\r\n        buyer.lastWithDraw = block.timestamp;\r\n        ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim);\r\n    }\r\n\r\n    function userRefundEmergency() external nonReentrant {\r\n        require(status() == 1, \"Sale sucesss\");\r\n        require(presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0, \r\n               \"All token has been withdraw\"\r\n        ); \r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\");\r\n        uint256 amountRefund = ((uint256(1000).sub(saleInfor.refundFee))\r\n                               .mul(buyer.baseDeposit))\r\n                               .div(uint256(1000));\r\n        totalFee += buyer.baseDeposit - amountRefund;\r\n        presaleStatus.totalBaseWithDraw += amountRefund;\r\n        buyer.baseDeposit  = 0;\r\n        buyer.tokenOwner = 0;\r\n        buyer.lastWithDraw = block.timestamp;\r\n        payable(msg.sender).transfer(amountRefund);\r\n    }\r\n\r\n    function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r\n        // require(status() == 2, \"Sale not yet sucesss\");\r\n        require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\");\r\n        require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\");\r\n        uint256 amountOwnerClaimToken = ERC20(saleInfor.saleToken).balanceOf(address(this));\r\n        uint256 amountOwnerRefundNativeCoin = address(this).balance;\r\n        presaleStatus.isOwnerClaimSaleToken = true;\r\n        saleInfor.amountTokenForSale = 0;\r\n        ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken);\r\n        payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin);\r\n    }\r\n\r\n    function userClaimWhenSaleSuccess() external {\r\n        // require(status() == 2, \"Sale not yet sucesss\"); \r\n        require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r\n               \"All token has been withdraw\"\r\n        );\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\");\r\n        presaleStatus.totalTokenWithDraw += buyer.tokenOwner;\r\n        saleInfor.amountTokenForSale -= buyer.tokenOwner;\r\n        buyer.baseDeposit  = 0;\r\n        buyer.tokenOwner = 0;\r\n        buyer.lastWithDraw = block.timestamp;\r\n        ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner);\r\n    }\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n}"
			},
			"Utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"Utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0xa9059cbb, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FAILED\"\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"../Utils/Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *z\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint256) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"ERC20/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint256);\r\n}\r\n"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    \r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. z This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"ERC20/ERC20.sol\":2085:2090  _name */\n  0x03\n  swap1\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2116  _symbol */\n  0x04\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:223   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:406   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:568   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:568   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:791   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:791   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":78:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1034   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1034   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1171   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1171   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1344   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1344   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1022:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1616   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1616   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1686   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1686   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1526:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1888:1983   */\ntag_21:\n    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_17\n        /* \"#utility.yul\":1335:1427   */\n      jump\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"ERC20/ERC20.sol\":3414:3426  _totalSupply */\n      sload(0x02)\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4924:5000   */\n      jump\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n    tag_7:\n        /* \"ERC20/ERC20.sol\":3251:3253  18 */\n      0x12\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n      jump(tag_25)\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_19\n      tag_38\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_25\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      and\n        /* \"ERC20/ERC20.sol\":3571:3578  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_47\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_19\n      tag_50\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_19\n      tag_54\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_25\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"ERC20/ERC20.sol\":2258:2271  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2291:2296  _name */\n      0x03\n        /* \"ERC20/ERC20.sol\":2284:2296  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_22:\n        /* \"ERC20/ERC20.sol\":4640:4644  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":4712:4719  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":4721:4727  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":4696:4704  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_72:\n      pop\n        /* \"ERC20/ERC20.sol\":4746:4750  true */\n      0x01\n      swap4\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_32:\n        /* \"ERC20/ERC20.sol\":5469:5473  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      tag_77\n        /* \"ERC20/ERC20.sol\":5543:5547  from */\n      dup6\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":5558:5564  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5527:5542  _spendAllowance */\n      tag_78\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_77:\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      tag_79\n        /* \"ERC20/ERC20.sol\":5586:5590  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":5592:5594  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":5596:5602  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5576:5585  _transfer */\n      tag_80\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"ERC20/ERC20.sol\":5621:5625  true */\n      0x01\n      swap5\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_39:\n        /* \"ERC20/ERC20.sol\":6130:6134  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":6239:6249  addedValue */\n      dup6\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      tag_85\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6211:6220  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20/ERC20.sol\":6211:6249  allowance(owner, spender) + addedValue */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"ERC20/ERC20.sol\":6186:6194  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_47:\n        /* \"ERC20/ERC20.sol\":2479:2492  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2512:2519  _symbol */\n      0x04\n        /* \"ERC20/ERC20.sol\":2505:2519  return _symbol */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_51:\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      dup2\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      tag_97\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":6976:6983  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":6959:6968  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"ERC20/ERC20.sol\":6932:6984  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":7023:7038  subtractedValue */\n      dup4\n        /* \"ERC20/ERC20.sol\":7003:7019  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":7003:7038  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_79\n        /* \"ERC20/ERC20.sol\":7125:7130  owner */\n      dup3\n        /* \"ERC20/ERC20.sol\":7132:7139  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":7160:7175  subtractedValue */\n      dup7\n        /* \"ERC20/ERC20.sol\":7141:7157  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":7141:7175  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20/ERC20.sol\":7116:7124  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_55:\n        /* \"ERC20/ERC20.sol\":3909:3913  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":3982:3984  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":3986:3992  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":3965:3974  _transfer */\n      tag_80\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":4175:4182  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":4202:4213  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":4202:4229  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10553:10572  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4186:4412   */\n      jump\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10632:10653  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":2612:2836   */\n      jump\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10705:10716  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10732  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10741  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n    tag_78:\n        /* \"ERC20/ERC20.sol\":11223:11247  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      tag_116\n        /* \"ERC20/ERC20.sol\":11260:11265  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11267:11274  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11250:11259  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"ERC20/ERC20.sol\":11223:11275  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC20/ERC20.sol\":11290:11306  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11290:11327  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20/ERC20.sol\":11286:11534  if (currentAllowance != type(uint256).max) {\r... */\n      tag_121\n      jumpi\n        /* \"ERC20/ERC20.sol\":11372:11378  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11368  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11378  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_99\n        /* \"#utility.yul\":3015:3194   */\n      jump\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_118:\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      tag_121\n        /* \"ERC20/ERC20.sol\":11465:11470  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11472:11479  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11500:11506  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11497  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11506  currentAllowance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":11456:11464  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_121:\n        /* \"ERC20/ERC20.sol\":11212:11541  {\r... */\n      pop\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":7698:8369  function _transfer(\r... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7829:7847  from != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3780:4007   */\n      jump\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7908:7924  to != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":2208:2433   */\n      jump\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":8028:8047  uint256 fromBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":8084:8105  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_99\n        /* \"#utility.yul\":3373:3601   */\n      jump\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20/ERC20.sol\":8202:8222  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20/ERC20.sol\":8184:8222  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":8244:8257  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      dup1\n      sload\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap3\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_134\n      swap1\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":8300:8302  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n        /* \"ERC20/ERC20.sol\":8294:8298  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20/ERC20.sol\":8304:8310  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4924:5000   */\n      jump\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":8324:8361  _afterTokenTransfer(from, to, amount) */\n      tag_121\n        /* \"ERC20/ERC20.sol\":12141:12266  function _beforeTokenTransfer(\r... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_141:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_143:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_43:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_145:\n        /* \"#utility.yul\":343:372   */\n      tag_146\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":262:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_59:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:482   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:482   */\n    tag_148:\n        /* \"#utility.yul\":551:580   */\n      tag_149\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_150\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":470:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:764   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:764   */\n    tag_152:\n        /* \"#utility.yul\":833:862   */\n      tag_153\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_154\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":752:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1080   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1080   */\n    tag_156:\n        /* \"#utility.yul\":1149:1178   */\n      tag_157\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1068:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_160:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1863   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1863   */\n    tag_163:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1553:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5230   */\n    tag_87:\n        /* \"#utility.yul\":5045:5048   */\n      0x00\n        /* \"#utility.yul\":5076:5077   */\n      dup3\n        /* \"#utility.yul\":5072:5078   */\n      not\n        /* \"#utility.yul\":5069:5070   */\n      dup3\n        /* \"#utility.yul\":5066:5079   */\n      gt\n        /* \"#utility.yul\":5063:5065   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5121:5131   */\n      0x4e487b71\n        /* \"#utility.yul\":5116:5119   */\n      0xe0\n        /* \"#utility.yul\":5112:5132   */\n      shl\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5102:5133   */\n      mstore\n        /* \"#utility.yul\":5156:5160   */\n      0x11\n        /* \"#utility.yul\":5153:5154   */\n      0x04\n        /* \"#utility.yul\":5146:5161   */\n      mstore\n        /* \"#utility.yul\":5184:5188   */\n      0x24\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5189   */\n      revert\n        /* \"#utility.yul\":5063:5065   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5215:5224   */\n      add\n      swap1\n        /* \"#utility.yul\":5053:5230   */\n      jump\t// out\n        /* \"#utility.yul\":5235:5615   */\n    tag_64:\n        /* \"#utility.yul\":5314:5315   */\n      0x01\n        /* \"#utility.yul\":5310:5322   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5357:5369   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5378:5380   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5432:5436   */\n      0x7f\n        /* \"#utility.yul\":5424:5430   */\n      dup3\n        /* \"#utility.yul\":5420:5437   */\n      and\n        /* \"#utility.yul\":5410:5437   */\n      swap2\n      pop\n        /* \"#utility.yul\":5378:5380   */\n    tag_175:\n        /* \"#utility.yul\":5485:5487   */\n      0x20\n        /* \"#utility.yul\":5477:5483   */\n      dup3\n        /* \"#utility.yul\":5474:5488   */\n      lt\n        /* \"#utility.yul\":5454:5472   */\n      dup2\n        /* \"#utility.yul\":5451:5489   */\n      eq\n        /* \"#utility.yul\":5448:5450   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5531:5541   */\n      0x4e487b71\n        /* \"#utility.yul\":5526:5529   */\n      0xe0\n        /* \"#utility.yul\":5522:5542   */\n      shl\n        /* \"#utility.yul\":5519:5520   */\n      0x00\n        /* \"#utility.yul\":5512:5543   */\n      mstore\n        /* \"#utility.yul\":5566:5570   */\n      0x22\n        /* \"#utility.yul\":5563:5564   */\n      0x04\n        /* \"#utility.yul\":5556:5571   */\n      mstore\n        /* \"#utility.yul\":5594:5598   */\n      0x24\n        /* \"#utility.yul\":5591:5592   */\n      0x00\n        /* \"#utility.yul\":5584:5599   */\n      revert\n        /* \"#utility.yul\":5448:5450   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5290:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:10"
															},
															"nodeType": "YulIf",
															"src": "88:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:10"
															},
															"nodeType": "YulIf",
															"src": "221:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:10"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:10"
															},
															"nodeType": "YulIf",
															"src": "404:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:10"
															},
															"nodeType": "YulIf",
															"src": "566:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:10",
																"statements": []
															},
															"src": "647:133:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:10"
															},
															"nodeType": "YulIf",
															"src": "789:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:10",
														"type": ""
													}
												],
												"src": "14:885:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:10"
															},
															"nodeType": "YulIf",
															"src": "1032:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:10"
															},
															"nodeType": "YulIf",
															"src": "1169:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:10"
															},
															"nodeType": "YulIf",
															"src": "1342:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:10",
														"type": ""
													}
												],
												"src": "904:562:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:10"
															},
															"nodeType": "YulIf",
															"src": "1614:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:10"
															},
															"nodeType": "YulIf",
															"src": "1684:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:10",
														"type": ""
													}
												],
												"src": "1471:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1138038062000b118339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61087f80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011b57806370a082311461012e57806395d89b4114610157578063a457c2d71461015f578063a9059cbb14610172578063dd62ed3e1461018557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610198565b6040516100c39190610793565b60405180910390f35b6100df6100da366004610769565b61022a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461072d565b610242565b60126100f3565b6100df610129366004610769565b610266565b6100f361013c3660046106d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610288565b6100df61016d366004610769565b610297565b6100df610180366004610769565b610317565b6100f36101933660046106fa565b610325565b6060600380546101a79061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d39061080e565b80156102205780601f106101f557610100808354040283529160200191610220565b820191906000526020600020905b81548152906001019060200180831161020357829003601f168201915b5050505050905090565b600033610238818585610350565b5060019392505050565b600033610250858285610474565b61025b8585856104ee565b506001949350505050565b6000336102388185856102798383610325565b61028391906107e8565b610350565b6060600480546101a79061080e565b600033816102a58286610325565b90508381101561030a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025b8286868403610350565b6000336102388185856104ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610301565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610301565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104808484610325565b905060001981146104e857818110156104db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610301565b6104e88484848403610350565b50505050565b6001600160a01b0383166105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610301565b6001600160a01b0382166105b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610301565b6001600160a01b0383166000908152602081905260409020548181101561062c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610301565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106639084906107e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106af91815260200190565b60405180910390a36104e8565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b6000806040838503121561070d57600080fd5b610716836106bc565b9150610724602084016106bc565b90509250929050565b60008060006060848603121561074257600080fd5b61074b846106bc565b9250610759602085016106bc565b9150604084013590509250925092565b6000806040838503121561077c57600080fd5b610785836106bc565b946020939093013593505050565b600060208083528351808285015260005b818110156107c0578581018301518582016040015282016107a4565b818111156107d2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB11 CODESIZE SUB DUP1 PUSH3 0xB11 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x87F DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D3 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x203 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP6 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x25B DUP6 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP5 DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x4E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x663 SWAP1 DUP5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6BC JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x49 0xC3 LOG0 0xCF MULMOD LOG3 XOR 0x49 0x2B 0xE8 PUSH29 0xB110F1986FCEFF1442081F3AA6A47213D1A57F6764736F6C6343000805 STOP CALLER ",
							"sourceMap": "1424:11573:0:-:0;;;2018:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2109:17:0;;;;:7;;:17;;;;;:::i;:::-;;2018:116;;1424:11573;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1424:11573:0;;;-1:-1:-1;1424:11573:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:10;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:10;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:10;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:10:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:10;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:2;;1526:325;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1888:95;1424:11573:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 848,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1720": {
									"entryPoint": null,
									"id": 1720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1140,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1262,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 805,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 554,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 663,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 614,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 408,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 648,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 578,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 791,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5617:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:2:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:10"
															},
															"nodeType": "YulIf",
															"src": "272:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:10",
														"type": ""
													}
												],
												"src": "192:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:10"
															},
															"nodeType": "YulIf",
															"src": "480:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:10",
														"type": ""
													}
												],
												"src": "383:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:10"
															},
															"nodeType": "YulIf",
															"src": "762:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:10",
														"type": ""
													}
												],
												"src": "648:328:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:10"
															},
															"nodeType": "YulIf",
															"src": "1078:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:10",
														"type": ""
													}
												],
												"src": "981:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:10",
														"type": ""
													}
												],
												"src": "1240:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:10",
																"statements": []
															},
															"src": "1712:140:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:10"
															},
															"nodeType": "YulIf",
															"src": "1861:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:10",
														"type": ""
													}
												],
												"src": "1432:597:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:10",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:10",
														"type": ""
													}
												],
												"src": "2034:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:10",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:10"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:10",
														"type": ""
													}
												],
												"src": "2438:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:10"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:10",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:10",
														"type": ""
													}
												],
												"src": "2841:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:10"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:10",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:10",
														"type": ""
													}
												],
												"src": "3199:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:10",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:10",
														"type": ""
													}
												],
												"src": "3606:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:10",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:10",
														"type": ""
													}
												],
												"src": "4012:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:10"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:10",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:10",
														"type": ""
													}
												],
												"src": "4417:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:10",
														"type": ""
													}
												],
												"src": "4823:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5088:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5109:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5116:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5121:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5112:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5112:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5102:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5102:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5102:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5153:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5156:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5146:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5146:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5146:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5184:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5174:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5174:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5069:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5076:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5066:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:13:10"
															},
															"nodeType": "YulIf",
															"src": "5063:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5208:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5219:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5222:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5208:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5036:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5039:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5045:3:10",
														"type": ""
													}
												],
												"src": "5005:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5300:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5314:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5317:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5331:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5361:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5335:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5408:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5410:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5424:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5432:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5420:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5420:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5410:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5388:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:26:10"
															},
															"nodeType": "YulIf",
															"src": "5378:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5498:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5519:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5526:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5531:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5522:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5522:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5512:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5512:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5512:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5563:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5566:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5556:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5556:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5591:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5594:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5584:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5584:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5584:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5454:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5477:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5485:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5474:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5474:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5451:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:38:10"
															},
															"nodeType": "YulIf",
															"src": "5448:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5270:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5279:6:10",
														"type": ""
													}
												],
												"src": "5235:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011b57806370a082311461012e57806395d89b4114610157578063a457c2d71461015f578063a9059cbb14610172578063dd62ed3e1461018557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610198565b6040516100c39190610793565b60405180910390f35b6100df6100da366004610769565b61022a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461072d565b610242565b60126100f3565b6100df610129366004610769565b610266565b6100f361013c3660046106d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610288565b6100df61016d366004610769565b610297565b6100df610180366004610769565b610317565b6100f36101933660046106fa565b610325565b6060600380546101a79061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d39061080e565b80156102205780601f106101f557610100808354040283529160200191610220565b820191906000526020600020905b81548152906001019060200180831161020357829003601f168201915b5050505050905090565b600033610238818585610350565b5060019392505050565b600033610250858285610474565b61025b8585856104ee565b506001949350505050565b6000336102388185856102798383610325565b61028391906107e8565b610350565b6060600480546101a79061080e565b600033816102a58286610325565b90508381101561030a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025b8286868403610350565b6000336102388185856104ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610301565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610301565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104808484610325565b905060001981146104e857818110156104db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610301565b6104e88484848403610350565b50505050565b6001600160a01b0383166105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610301565b6001600160a01b0382166105b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610301565b6001600160a01b0383166000908152602081905260409020548181101561062c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610301565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106639084906107e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106af91815260200190565b60405180910390a36104e8565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b6000806040838503121561070d57600080fd5b610716836106bc565b9150610724602084016106bc565b90509250929050565b60008060006060848603121561074257600080fd5b61074b846106bc565b9250610759602085016106bc565b9150604084013590509250925092565b6000806040838503121561077c57600080fd5b610785836106bc565b946020939093013593505050565b600060208083528351808285015260005b818110156107c0578581018301518582016040015282016107a4565b818111156107d2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D3 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x203 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP6 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x25B DUP6 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP5 DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x4E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x663 SWAP1 DUP5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6BC JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x49 0xC3 LOG0 0xCF MULMOD LOG3 XOR 0x49 0x2B 0xE8 PUSH29 0xB110F1986FCEFF1442081F3AA6A47213D1A57F6764736F6C6343000805 STOP CALLER ",
							"sourceMap": "1424:11573:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4557:201;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:10;;1398:22;1380:41;;1368:2;1353:18;4557:201:0;1335:92:10;3326:108:0;3414:12;;3326:108;;;4969:25:10;;;4957:2;4942:18;3326:108:0;4924:76:10;5338:295:0;;;;;;:::i;:::-;;:::i;3166:95::-;3251:2;3166:95;;6042:238;;;;;;:::i;:::-;;:::i;3497:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3598:18:0;3571:7;3598:18;;;;;;;;;;;;3497:127;2423:104;;;:::i;6783:436::-;;;;;;:::i;:::-;;:::i;3830:193::-;;;;;;:::i;:::-;;:::i;4086:151::-;;;;;;:::i;:::-;;:::i;2204:100::-;2258:13;2291:5;2284:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;:::o;4557:201::-;4640:4;736:10:4;4696:32:0;736:10:4;4712:7:0;4721:6;4696:8;:32::i;:::-;-1:-1:-1;4746:4:0;;4557:201;-1:-1:-1;;;4557:201:0:o;5338:295::-;5469:4;736:10:4;5527:38:0;5543:4;736:10:4;5558:6:0;5527:15;:38::i;:::-;5576:27;5586:4;5592:2;5596:6;5576:9;:27::i;:::-;-1:-1:-1;5621:4:0;;5338:295;-1:-1:-1;;;;5338:295:0:o;6042:238::-;6130:4;736:10:4;6186:64:0;736:10:4;6202:7:0;6239:10;6211:25;736:10:4;6202:7:0;6211:9;:25::i;:::-;:38;;;;:::i;:::-;6186:8;:64::i;2423:104::-;2479:13;2512:7;2505:14;;;;;:::i;6783:436::-;6876:4;736:10:4;6876:4:0;6959:25;736:10:4;6976:7:0;6959:9;:25::i;:::-;6932:52;;7023:15;7003:16;:35;;6995:85;;;;-1:-1:-1;;;6995:85:0;;4619:2:10;6995:85:0;;;4601:21:10;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:10;;;4741:35;4793:19;;6995:85:0;;;;;;;;;7116:60;7125:5;7132:7;7160:15;7141:16;:34;7116:8;:60::i;3830:193::-;3909:4;736:10:4;3965:28:0;736:10:4;3982:2:0;3986:6;3965:9;:28::i;4086:151::-;-1:-1:-1;;;;;4202:18:0;;;4175:7;4202:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4086:151::o;10417:380::-;-1:-1:-1;;;;;10553:19:0;;10545:68;;;;-1:-1:-1;;;10545:68:0;;4214:2:10;10545:68:0;;;4196:21:10;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:10;;;4336:34;4387:19;;10545:68:0;4186:226:10;10545:68:0;-1:-1:-1;;;;;10632:21:0;;10624:68;;;;-1:-1:-1;;;10624:68:0;;2640:2:10;10624:68:0;;;2622:21:10;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:10;;;2762:32;2811:19;;10624:68:0;2612:224:10;10624:68:0;-1:-1:-1;;;;;10705:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10757:32;;4969:25:10;;;10757:32:0;;4942:18:10;10757:32:0;;;;;;;10417:380;;;:::o;11088:453::-;11223:24;11250:25;11260:5;11267:7;11250:9;:25::i;:::-;11223:52;;-1:-1:-1;;11290:16:0;:37;11286:248;;11372:6;11352:16;:26;;11344:68;;;;-1:-1:-1;;;11344:68:0;;3043:2:10;11344:68:0;;;3025:21:10;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11344:68:0;3015:179:10;11344:68:0;11456:51;11465:5;11472:7;11500:6;11481:16;:25;11456:8;:51::i;:::-;11212:329;11088:453;;;:::o;7698:671::-;-1:-1:-1;;;;;7829:18:0;;7821:68;;;;-1:-1:-1;;;7821:68:0;;3808:2:10;7821:68:0;;;3790:21:10;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:10;;;3930:35;3982:19;;7821:68:0;3780:227:10;7821:68:0;-1:-1:-1;;;;;7908:16:0;;7900:64;;;;-1:-1:-1;;;7900:64:0;;2236:2:10;7900:64:0;;;2218:21:10;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:10;;;2358:33;2408:19;;7900:64:0;2208:225:10;7900:64:0;-1:-1:-1;;;;;8050:15:0;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:0;;3401:2:10;8076:72:0;;;3383:21:10;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:10;;;3523:36;3576:19;;8076:72:0;3373:228:10;8076:72:0;-1:-1:-1;;;;;8184:15:0;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8244:13;;;;;;;;:23;;8216:6;;8184:9;8244:23;;8216:6;;8244:23;:::i;:::-;;;;;;;;8300:2;-1:-1:-1;;;;;8285:26:0;8294:4;-1:-1:-1;;;;;8285:26:0;;8304:6;8285:26;;;;4969:25:10;;4957:2;4942:18;;4924:76;8285:26:0;;;;;;;;8324:37;12141:125;14:173:10;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:10:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:10:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:2;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:2;-1:-1:-1;2013:2:10;1992:15;-1:-1:-1;;1988:29:10;1973:45;;;;2020:2;1969:54;;1553:476;-1:-1:-1;;;1553:476:10:o;5005:225::-;5045:3;5076:1;5072:6;5069:1;5066:13;5063:2;;;5121:10;5116:3;5112:20;5109:1;5102:31;5156:4;5153:1;5146:15;5184:4;5181:1;5174:15;5063:2;-1:-1:-1;5215:9:10;;5053:177::o;5235:380::-;5314:1;5310:12;;;;5357;;;5378:2;;5432:4;5424:6;5420:17;5410:27;;5378:2;5485;5477:6;5474:14;5454:18;5451:38;5448:2;;;5531:10;5526:3;5522:20;5519:1;5512:31;5566:4;5563:1;5556:15;5594:4;5591:1;5584:15;5448:2;;5290:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "281",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 221,
									"end": 223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 221,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 404,
									"end": 406,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 404,
									"end": 406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 566,
									"end": 568,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 566,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 566,
									"end": 568,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 78,
									"end": 899,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 899,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1888,
									"end": 1983,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1888,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
									".code": [
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1335,
											"end": 1427,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4924,
											"end": 5000,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5586,
											"end": 5590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6249,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6976,
											"end": 6983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7132,
											"end": 7139,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4186,
											"end": 4412,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2612,
											"end": 2836,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11260,
											"end": 11265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11290,
											"end": 11306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3015,
											"end": 3194,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11465,
											"end": 11470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11472,
											"end": 11479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11212,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3780,
											"end": 4007,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2208,
											"end": 2433,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8028,
											"end": 8047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3373,
											"end": 3601,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 5000,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 262,
											"end": 378,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 378,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 480,
											"end": 482,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 480,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 480,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 643,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 762,
											"end": 764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 762,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 752,
											"end": 976,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 1235,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 2029,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 2029,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5005,
											"end": 5230,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 5005,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5078,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5079,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5131,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5112,
											"end": 5132,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5160,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5146,
											"end": 5161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5189,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5053,
											"end": 5230,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5235,
											"end": 5615,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5235,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5432,
											"end": 5436,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5437,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5487,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5488,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5489,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5531,
											"end": 5541,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5522,
											"end": 5542,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5556,
											"end": 5571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5599,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. z This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkAdminAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeAnyone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerClaimAndRefundToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numberBuyer",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isOwnerClaimSaleToken",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isOwnerRefundBaseToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "saleIsBaseToken",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenForSale",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hardCap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "softCap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userClaimEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userClaimWhenSaleSuccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userRefundEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":370:9839  contract Presale is ReentrancyGuard, Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_9\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"Ethereum/Presale.sol\":2246:2250  WETH */\n  0x19\n    /* \"Ethereum/Presale.sol\":2246:2302  WETH = ERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n    /* \"Ethereum/Presale.sol\":2259:2301  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Ethereum/Presale.sol\":2246:2302  WETH = ERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":2313:2367  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  tag_11\n    /* \"Ethereum/Presale.sol\":2313:2319  admins */\n  0x1b\n    /* \"Ethereum/Presale.sol\":2324:2366  0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD */\n  0x6ccb41eeda5a073076f3e7dc1614c185b5fa41ed\n    /* \"Ethereum/Presale.sol\":2313:2323  admins.add */\n  tag_12\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_116\n  or\n    /* \"Ethereum/Presale.sol\":2313:2367  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  swap1\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"Ethereum/Presale.sol\":2378:2432  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  tag_13\n    /* \"Ethereum/Presale.sol\":2389:2431  0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016 */\n  0x4f0b12bbf40fc182559822a5b1db6d34dbc3e016\n    /* \"Ethereum/Presale.sol\":2378:2384  admins */\n  0x1b\n    /* \"Ethereum/Presale.sol\":2378:2388  admins.add */\n  or(tag_0_116, shl(0x20, tag_12))\n  swap1\n    /* \"Ethereum/Presale.sol\":2378:2432  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"Ethereum/Presale.sol\":2455:2457  20 */\n  0x14\n    /* \"Ethereum/Presale.sol\":2443:2452  feeAnyone */\n  0x1a\n    /* \"Ethereum/Presale.sol\":2443:2457  feeAnyone = 20 */\n  sstore\n    /* \"Ethereum/Presale.sol\":370:9839  contract Presale is ReentrancyGuard, Ownable{\r... */\n  jump(tag_14)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_9:\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap2\n  and\n  swap2\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  swap1\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  dup3\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n  pop\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_12:\n    /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_18\n    /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n  tag_19\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_18:\n    /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_17:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\ntag_19:\n    /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  dup2\n  dup2\n  mstore\n    /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n  0x01\n  dup4\n  add\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n  tag_23\n  jumpi\n  pop\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n  dup5\n  sload\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n  jump(tag_17)\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\ntag_23:\n  pop\n    /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n  jump(tag_17)\n    /* \"Ethereum/Presale.sol\":370:9839  contract Presale is ReentrancyGuard, Ownable{\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":370:9839  contract Presale is ReentrancyGuard, Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f1eae4c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb6b55f25\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcad5b0f7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xce441b18\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x8f1eae4c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95661e70\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xab33985a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x56c5f349\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8edf18e6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x12e5d0b9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18856a2f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1df4ccfc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3b5ef2ad\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1624:1662  SaleTotalSupply public saleTotalSupply */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      sload(0x0b)\n      sload(0x0c)\n      tag_27\n      swap2\n      swap1\n      dup3\n      jump\n    tag_27:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11128:11153   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":11184:11186   */\n      0x20\n        /* \"#utility.yul\":11169:11187   */\n      dup4\n      add\n        /* \"#utility.yul\":11162:11196   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11101:11119   */\n      add\n        /* \"Ethereum/Presale.sol\":1624:1662  SaleTotalSupply public saleTotalSupply */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":1669:1695  SaleInfor public saleInfor */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      sload(0x0d)\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      sload(0x15)\n      sload(0x16)\n      sload(0x17)\n      sload(0x18)\n      tag_32\n      swap12\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap12\n      dup2\n      and\n      swap11\n      and\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      0xff\n      and\n      swap1\n      dup13\n      jump\n    tag_32:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3376:3391   */\n      swap14\n      dup15\n      and\n        /* \"#utility.yul\":3358:3392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3428:3443   */\n      swap12\n      dup14\n      and\n        /* \"#utility.yul\":3423:3425   */\n      0x20\n        /* \"#utility.yul\":3408:3426   */\n      dup14\n      add\n        /* \"#utility.yul\":3401:3444   */\n      mstore\n        /* \"#utility.yul\":3480:3495   */\n      swap10\n      swap1\n      swap12\n      and\n        /* \"#utility.yul\":3460:3478   */\n      swap9\n      dup11\n      add\n        /* \"#utility.yul\":3453:3496   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":3527:3529   */\n      0x60\n        /* \"#utility.yul\":3512:3530   */\n      dup10\n      add\n        /* \"#utility.yul\":3505:3539   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":3570:3573   */\n      0x80\n        /* \"#utility.yul\":3555:3574   */\n      dup9\n      add\n        /* \"#utility.yul\":3548:3583   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3338:3341   */\n      0xa0\n        /* \"#utility.yul\":3599:3618   */\n      dup8\n      add\n        /* \"#utility.yul\":3592:3627   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3658:3661   */\n      0xc0\n        /* \"#utility.yul\":3643:3662   */\n      dup7\n      add\n        /* \"#utility.yul\":3636:3671   */\n      mstore\n        /* \"#utility.yul\":3702:3705   */\n      0xe0\n        /* \"#utility.yul\":3687:3706   */\n      dup6\n      add\n        /* \"#utility.yul\":3680:3715   */\n      mstore\n        /* \"#utility.yul\":3746:3749   */\n      0x0100\n        /* \"#utility.yul\":3731:3750   */\n      dup5\n      add\n        /* \"#utility.yul\":3724:3759   */\n      mstore\n        /* \"#utility.yul\":3790:3793   */\n      0x0120\n        /* \"#utility.yul\":3775:3794   */\n      dup4\n      add\n        /* \"#utility.yul\":3768:3803   */\n      mstore\n        /* \"#utility.yul\":3847:3862   */\n      iszero\n        /* \"#utility.yul\":3840:3863   */\n      iszero\n        /* \"#utility.yul\":3834:3837   */\n      0x0140\n        /* \"#utility.yul\":3819:3838   */\n      dup3\n      add\n        /* \"#utility.yul\":3812:3864   */\n      mstore\n        /* \"#utility.yul\":3895:3898   */\n      0x0160\n        /* \"#utility.yul\":3880:3899   */\n      dup2\n      add\n        /* \"#utility.yul\":3873:3909   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3307:3310   */\n      0x0180\n        /* \"#utility.yul\":3292:3311   */\n      add\n        /* \"Ethereum/Presale.sol\":1669:1695  SaleInfor public saleInfor */\n      tag_29\n        /* \"#utility.yul\":3274:3915   */\n      jump\n        /* \"Ethereum/Presale.sol\":1805:1828  uint256 public totalFee */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      sload(0x1d)\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":10918:10943   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10906:10908   */\n      0x20\n        /* \"#utility.yul\":10891:10909   */\n      add\n        /* \"Ethereum/Presale.sol\":1805:1828  uint256 public totalFee */\n      tag_29\n        /* \"#utility.yul\":10873:10949   */\n      jump\n        /* \"Ethereum/Presale.sol\":3672:4009  function status() public view returns(uint256) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_37\n      tag_43\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1727:1751  uint256 public feeAnyone */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_37\n      sload(0x1a)\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":1534:1576  mapping(address => uint256) public userFee */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_37\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Ethereum/Presale.sol\":9728:9836  function backToken() external payable {\r... */\n    tag_9:\n      tag_56\n      tag_59\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_61:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2783:2815   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2765:2816   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2753:2755   */\n      0x20\n        /* \"#utility.yul\":2738:2756   */\n      add\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      tag_29\n        /* \"#utility.yul\":2720:2822   */\n      jump\n        /* \"Ethereum/Presale.sol\":8106:8861  function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_56\n      tag_67\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":2473:3663  function initialSaleInfor(\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_56\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":7238:8098  function userRefundEmergency() external nonReentrant {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_56\n      tag_75\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":6351:7230  function userClaimEmergency() external nonReentrant {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_56\n      tag_78\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1583:1617  PresaleStatus public presaleStatus */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      sload(0x09)\n      tag_80\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup8\n      jump\n    tag_80:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11906:11931   */\n      swap8\n      dup9\n      mstore\n        /* \"#utility.yul\":11962:11964   */\n      0x20\n        /* \"#utility.yul\":11947:11965   */\n      dup9\n      add\n        /* \"#utility.yul\":11940:11974   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":11990:12008   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":11983:12017   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":12048:12050   */\n      0x60\n        /* \"#utility.yul\":12033:12051   */\n      dup6\n      add\n        /* \"#utility.yul\":12026:12060   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12091:12094   */\n      0x80\n        /* \"#utility.yul\":12076:12095   */\n      dup5\n      add\n        /* \"#utility.yul\":12069:12104   */\n      mstore\n        /* \"#utility.yul\":12148:12162   */\n      iszero\n        /* \"#utility.yul\":12141:12163   */\n      iszero\n        /* \"#utility.yul\":12135:12138   */\n      0xa0\n        /* \"#utility.yul\":12120:12139   */\n      dup4\n      add\n        /* \"#utility.yul\":12113:12164   */\n      mstore\n        /* \"#utility.yul\":12208:12222   */\n      iszero\n        /* \"#utility.yul\":12201:12223   */\n      iszero\n        /* \"#utility.yul\":12195:12198   */\n      0xc0\n        /* \"#utility.yul\":12180:12199   */\n      dup3\n      add\n        /* \"#utility.yul\":12173:12224   */\n      mstore\n        /* \"#utility.yul\":11893:11896   */\n      0xe0\n        /* \"#utility.yul\":11878:11897   */\n      add\n        /* \"Ethereum/Presale.sol\":1583:1617  PresaleStatus public presaleStatus */\n      tag_29\n        /* \"#utility.yul\":11860:12230   */\n      jump\n        /* \"Ethereum/Presale.sol\":1702:1720  IERC20 public WETH */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      sload(0x19)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":4136:6343  function deposit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_17:\n      tag_56\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4018:4128  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n        /* \"#utility.yul\":5031:5045   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5024:5046   */\n      iszero\n        /* \"#utility.yul\":5006:5047   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4994:4996   */\n      0x20\n        /* \"#utility.yul\":4979:4997   */\n      add\n        /* \"Ethereum/Presale.sol\":4018:4128  function checkAdminAddress() public view returns(bool) {\r... */\n      tag_29\n        /* \"#utility.yul\":4961:5053   */\n      jump\n        /* \"Ethereum/Presale.sol\":8869:9598  function userClaimWhenSaleSuccess() external {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_56\n      tag_100\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1481:1527  mapping(address => BuyerInfo) public buyerInfo */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_103:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      swap2\n      swap1\n      dup5\n      jump\n    tag_102:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11438:11463   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":11494:11496   */\n      0x20\n        /* \"#utility.yul\":11479:11497   */\n      dup6\n      add\n        /* \"#utility.yul\":11472:11506   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":11522:11540   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":11515:11549   */\n      mstore\n        /* \"#utility.yul\":11580:11582   */\n      0x60\n        /* \"#utility.yul\":11565:11583   */\n      dup3\n      add\n        /* \"#utility.yul\":11558:11592   */\n      mstore\n        /* \"#utility.yul\":11425:11428   */\n      0x80\n        /* \"#utility.yul\":11410:11429   */\n      add\n        /* \"Ethereum/Presale.sol\":1481:1527  mapping(address => BuyerInfo) public buyerInfo */\n      tag_29\n        /* \"#utility.yul\":11392:11598   */\n      jump\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_56\n      tag_109\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":9606:9717  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_37\n      tag_113\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":9693:9709  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":9606:9717  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":3672:4009  function status() public view returns(uint256) {\r... */\n    tag_43:\n        /* \"Ethereum/Presale.sol\":3751:3770  saleInfor.startSale */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":3710:3717  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":3733:3748  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":3733:3770  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":3730:4002  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":3794:3795  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":3672:4009  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3730:4002  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_118:\n        /* \"Ethereum/Presale.sol\":3861:3878  saleInfor.endSale */\n      sload(0x12)\n        /* \"Ethereum/Presale.sol\":3843:3858  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":3843:3878  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":3840:3991  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":3906:3907  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":3672:4009  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":3840:3991  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_120:\n      pop\n        /* \"Ethereum/Presale.sol\":3964:3965  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":3672:4009  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_57:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9146:9148   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9128:9149   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9165:9183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9158:9188   */\n      mstore\n        /* \"#utility.yul\":9224:9258   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9204:9222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9197:9259   */\n      mstore\n        /* \"#utility.yul\":9276:9294   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_130\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_131\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":9728:9836  function backToken() external payable {\r... */\n    tag_59:\n        /* \"Ethereum/Presale.sol\":9777:9828  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":9785:9795  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":9806:9827  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":9777:9828  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":9806:9827  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":9785:9795  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":9777:9828  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n        /* \"Ethereum/Presale.sol\":9728:9836  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":8106:8861  function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r... */\n    tag_67:\n        /* \"Ethereum/Presale.sol\":2011:2020  saleInfor */\n      0x0d\n        /* \"Ethereum/Presale.sol\":2011:2033  saleInfor.presaleOwner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":1995:2033  _msgSender() == saleInfor.presaleOwner */\n      and\n      eq\n        /* \"Ethereum/Presale.sol\":1987:2056  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8799:8801   */\n      0x20\n        /* \"Ethereum/Presale.sol\":1987:2056  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8781:8802   */\n      mstore\n        /* \"#utility.yul\":8838:8840   */\n      0x12\n        /* \"#utility.yul\":8818:8836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8811:8841   */\n      mstore\n      shl(0x71, 0x27b7363c90383932b9b0b6329037bbb732b9)\n        /* \"#utility.yul\":8857:8875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8850:8898   */\n      mstore\n        /* \"#utility.yul\":8915:8933   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":1987:2056  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n      tag_127\n        /* \"#utility.yul\":8771:8939   */\n      jump\n        /* \"Ethereum/Presale.sol\":1987:2056  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n    tag_138:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_144\n      jump\t// in\n    tag_142:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":8260:8295  presaleStatus.isOwnerClaimSaleToken */\n      and(0xff, sload(0x09))\n        /* \"Ethereum/Presale.sol\":8259:8295  !presaleStatus.isOwnerClaimSaleToken */\n      iszero\n        /* \"Ethereum/Presale.sol\":8251:8329  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9912:9914   */\n      0x20\n        /* \"Ethereum/Presale.sol\":8251:8329  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9894:9915   */\n      mstore\n        /* \"#utility.yul\":9951:9953   */\n      0x1d\n        /* \"#utility.yul\":9931:9949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9924:9954   */\n      mstore\n        /* \"#utility.yul\":9990:10021   */\n      0x4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e000000\n        /* \"#utility.yul\":9970:9988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9963:10022   */\n      mstore\n        /* \"#utility.yul\":10039:10057   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":8251:8329  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n      tag_127\n        /* \"#utility.yul\":9884:10063   */\n      jump\n        /* \"Ethereum/Presale.sol\":8251:8329  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n    tag_146:\n        /* \"Ethereum/Presale.sol\":8349:8385  presaleStatus.isOwnerRefundBaseToken */\n      sload(0x09)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"Ethereum/Presale.sol\":8348:8385  !presaleStatus.isOwnerRefundBaseToken */\n      iszero\n        /* \"Ethereum/Presale.sol\":8340:8420  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6600:6602   */\n      0x20\n        /* \"Ethereum/Presale.sol\":8340:8420  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6582:6603   */\n      mstore\n        /* \"#utility.yul\":6639:6641   */\n      0x1e\n        /* \"#utility.yul\":6619:6637   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6612:6642   */\n      mstore\n        /* \"#utility.yul\":6678:6710   */\n      0x4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e0000\n        /* \"#utility.yul\":6658:6676   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6651:6711   */\n      mstore\n        /* \"#utility.yul\":6728:6746   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":8340:8420  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n      tag_127\n        /* \"#utility.yul\":6572:6752   */\n      jump\n        /* \"Ethereum/Presale.sol\":8340:8420  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n    tag_149:\n        /* \"Ethereum/Presale.sol\":8469:8488  saleInfor.saleToken */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":8463:8514  ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":8508:8512  this */\n      address\n        /* \"Ethereum/Presale.sol\":8463:8514  ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2765:2816   */\n      mstore\n        /* \"Ethereum/Presale.sol\":8431:8460  uint256 amountOwnerClaimToken */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":8469:8488  saleInfor.saleToken */\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":8463:8499  ERC20(saleInfor.saleToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2738:2756   */\n      0x24\n      add\n        /* \"Ethereum/Presale.sol\":8463:8514  ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"Ethereum/Presale.sol\":8595:8630  presaleStatus.isOwnerClaimSaleToken */\n      0x09\n        /* \"Ethereum/Presale.sol\":8595:8637  presaleStatus.isOwnerClaimSaleToken = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Ethereum/Presale.sol\":8633:8637  true */\n      0x01\n        /* \"Ethereum/Presale.sol\":8595:8637  presaleStatus.isOwnerClaimSaleToken = true */\n      or\n      swap1\n      sstore\n      0x00\n        /* \"Ethereum/Presale.sol\":8648:8676  saleInfor.amountTokenForSale */\n      0x18\n        /* \"Ethereum/Presale.sol\":8648:8680  saleInfor.amountTokenForSale = 0 */\n      sstore\n        /* \"Ethereum/Presale.sol\":8697:8716  saleInfor.saleToken */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":8648:8657  saleInfor */\n      0x0d\n        /* \"Ethereum/Presale.sol\":8727:8749  saleInfor.presaleOwner */\n      sload\n        /* \"Ethereum/Presale.sol\":8691:8773  ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":8727:8749  saleInfor.presaleOwner */\n      swap2\n      dup3\n      and\n        /* \"Ethereum/Presale.sol\":8595:8608  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":8691:8773  ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken) */\n      dup3\n      add\n        /* \"#utility.yul\":4102:4153   */\n      mstore\n        /* \"#utility.yul\":4169:4187   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4162:4196   */\n      dup5\n      swap1\n      mstore\n      swap3\n      swap4\n      pop\n        /* \"Ethereum/Presale.sol\":8563:8584  address(this).balance */\n      selfbalance\n      swap3\n        /* \"Ethereum/Presale.sol\":8697:8716  saleInfor.saleToken */\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":8691:8726  ERC20(saleInfor.saleToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4075:4093   */\n      0x44\n      add\n        /* \"Ethereum/Presale.sol\":8691:8773  ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      pop\n        /* \"Ethereum/Presale.sol\":8792:8801  saleInfor */\n      0x0d\n        /* \"Ethereum/Presale.sol\":8792:8814  saleInfor.presaleOwner */\n      sload\n        /* \"Ethereum/Presale.sol\":8784:8853  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":8792:8814  saleInfor.presaleOwner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":8784:8853  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Ethereum/Presale.sol\":8825:8852  amountOwnerRefundNativeCoin */\n      dup4\n      swap1\n        /* \"Ethereum/Presale.sol\":8792:8814  saleInfor.presaleOwner */\n      0x00\n        /* \"Ethereum/Presale.sol\":8784:8853  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup2\n        /* \"Ethereum/Presale.sol\":8792:8814  saleInfor.presaleOwner */\n      dup2\n        /* \"Ethereum/Presale.sol\":8784:8853  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup2\n        /* \"Ethereum/Presale.sol\":8825:8852  amountOwnerRefundNativeCoin */\n      dup6\n        /* \"Ethereum/Presale.sol\":8792:8814  saleInfor.presaleOwner */\n      dup9\n        /* \"Ethereum/Presale.sol\":8784:8853  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":8106:8861  function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":2473:3663  function initialSaleInfor(\r... */\n    tag_72:\n        /* \"Ethereum/Presale.sol\":2654:2663  saleInfor */\n      0x0d\n        /* \"Ethereum/Presale.sol\":2654:2692  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/Presale.sol\":2703:2722  saleInfor.saleToken */\n      0x0e\n        /* \"Ethereum/Presale.sol\":2703:2735  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup7\n      dup5\n      and\n      swap1\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":2746:2765  saleInfor.baseToken */\n      0x0f\n        /* \"Ethereum/Presale.sol\":2746:2778  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap4\n      dup7\n      and\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":2836:2873  ERC20(saleInfor.saleToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Ethereum/Presale.sol\":2836:2871  ERC20(saleInfor.saleToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":2836:2873  ERC20(saleInfor.saleToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":2703:2735  saleInfor.saleToken = _saleToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":2836:2873  ERC20(saleInfor.saleToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_171:\n        /* \"Ethereum/Presale.sol\":2823:2874  10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      tag_172\n      swap1\n        /* \"Ethereum/Presale.sol\":2823:2825  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":2823:2874  10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"Ethereum/Presale.sol\":2812:2820  datas[0] */\n      dup2\n      mload\n        /* \"Ethereum/Presale.sol\":2812:2874  datas[0] * 10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"Ethereum/Presale.sol\":2789:2809  saleInfor.tokenPrice */\n      0x10\n        /* \"Ethereum/Presale.sol\":2789:2874  saleInfor.tokenPrice = datas[0] * 10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":2907:2915  datas[1] */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2885:2904  saleInfor.startSale */\n      0x11\n        /* \"Ethereum/Presale.sol\":2885:2915  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2946:2954  datas[2] */\n      0x40\n      dup1\n      dup4\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2926:2943  saleInfor.endSale */\n      0x12\n        /* \"Ethereum/Presale.sol\":2926:2954  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":2994:3002  datas[3] */\n      0x60\n      dup4\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":2965:2991  saleInfor.minSpendPerBuyer */\n      0x13\n        /* \"Ethereum/Presale.sol\":2965:3002  saleInfor.minSpendPerBuyer = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3073:3092  saleInfor.baseToken */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":3067:3104  ERC20(saleInfor.baseToken).decimals() */\n      dup2\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3073:3092  saleInfor.baseToken */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"Ethereum/Presale.sol\":3067:3102  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap3\n        /* \"Ethereum/Presale.sol\":3067:3104  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3073:3092  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3067:3104  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_188:\n        /* \"Ethereum/Presale.sol\":3053:3105  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_189\n      swap1\n        /* \"Ethereum/Presale.sol\":3053:3055  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3053:3105  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"Ethereum/Presale.sol\":3042:3050  datas[4] */\n      0x80\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3042:3105  datas[4] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_192\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_192:\n        /* \"Ethereum/Presale.sol\":3013:3039  saleInfor.maxSpendPerBuyer */\n      0x14\n        /* \"Ethereum/Presale.sol\":3013:3105  saleInfor.maxSpendPerBuyer = datas[4] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3138:3146  datas[5] */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3116:3135  saleInfor.refundFee */\n      0x15\n        /* \"Ethereum/Presale.sol\":3116:3146  saleInfor.refundFee = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3178:3186  datas[6] */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3157:3175  saleInfor.claimFee */\n      0x16\n        /* \"Ethereum/Presale.sol\":3157:3186  saleInfor.claimFee = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3254:3273  saleInfor.baseToken */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":3248:3285  ERC20(saleInfor.baseToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3254:3273  saleInfor.baseToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Ethereum/Presale.sol\":3248:3283  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3248:3285  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Ethereum/Presale.sol\":3138:3146  datas[5] */\n      0x20\n      swap3\n        /* \"Ethereum/Presale.sol\":3248:3285  ERC20(saleInfor.baseToken).decimals() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3254:3273  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3248:3285  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_200:\n        /* \"Ethereum/Presale.sol\":3234:3286  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_201\n      swap1\n        /* \"Ethereum/Presale.sol\":3234:3236  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3234:3286  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_173\n      jump\t// in\n    tag_201:\n        /* \"Ethereum/Presale.sol\":3223:3231  datas[7] */\n      0xe0\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3223:3286  datas[7] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_204\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_204:\n        /* \"Ethereum/Presale.sol\":3197:3212  saleTotalSupply */\n      0x0b\n        /* \"Ethereum/Presale.sol\":3197:3286  saleTotalSupply.hardCap = datas[7] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3353:3372  saleInfor.baseToken */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":3347:3384  ERC20(saleInfor.baseToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3353:3372  saleInfor.baseToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Ethereum/Presale.sol\":3347:3382  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3347:3384  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3353:3372  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3347:3384  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_208:\n        /* \"Ethereum/Presale.sol\":3334:3385  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_209\n      swap1\n        /* \"Ethereum/Presale.sol\":3334:3336  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3334:3385  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_173\n      jump\t// in\n    tag_209:\n        /* \"Ethereum/Presale.sol\":3323:3331  datas[8] */\n      0x0100\n      dup3\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3323:3385  datas[8] * 10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_212\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_212:\n        /* \"Ethereum/Presale.sol\":3297:3320  saleTotalSupply.softCap */\n      0x0c\n        /* \"Ethereum/Presale.sol\":3297:3385  saleTotalSupply.softCap = datas[8] * 10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3449:3468  saleInfor.baseToken */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":3432:3436  WETH */\n      sload(0x19)\n        /* \"Ethereum/Presale.sol\":3396:3421  saleInfor.saleIsBaseToken */\n      0x17\n        /* \"Ethereum/Presale.sol\":3396:3469  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      dup1\n      sload\n      not(0xff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3432:3436  WETH */\n      swap3\n      dup4\n      and\n        /* \"Ethereum/Presale.sol\":3449:3468  saleInfor.baseToken */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"Ethereum/Presale.sol\":3424:3469  address(WETH) == address(saleInfor.baseToken) */\n      swap2\n      dup3\n      eq\n        /* \"Ethereum/Presale.sol\":3396:3469  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":3616:3653  ERC20(saleInfor.baseToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Ethereum/Presale.sol\":3616:3651  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3616:3653  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3449:3468  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3616:3653  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_216:\n        /* \"Ethereum/Presale.sol\":3603:3654  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_217\n      swap1\n        /* \"Ethereum/Presale.sol\":3603:3605  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3603:3654  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_173\n      jump\t// in\n    tag_217:\n        /* \"Ethereum/Presale.sol\":3536:3551  saleTotalSupply */\n      0x0b\n        /* \"Ethereum/Presale.sol\":3536:3559  saleTotalSupply.hardCap */\n      sload\n        /* \"Ethereum/Presale.sol\":3511:3531  saleInfor.tokenPrice */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":3511:3560  saleInfor.tokenPrice.mul(saleTotalSupply.hardCap) */\n      tag_218\n      swap2\n        /* \"Ethereum/Presale.sol\":3511:3535  saleInfor.tokenPrice.mul */\n      tag_219\n        /* \"Ethereum/Presale.sol\":3511:3560  saleInfor.tokenPrice.mul(saleTotalSupply.hardCap) */\n      jump\t// in\n    tag_218:\n        /* \"Ethereum/Presale.sol\":3511:3655  saleInfor.tokenPrice.mul(saleTotalSupply.hardCap)/\r... */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"Ethereum/Presale.sol\":3480:3508  saleInfor.amountTokenForSale */\n      0x18\n        /* \"Ethereum/Presale.sol\":3480:3655  saleInfor.amountTokenForSale = saleInfor.tokenPrice.mul(saleTotalSupply.hardCap)/\r... */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":2473:3663  function initialSaleInfor(\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":7238:8098  function userRefundEmergency() external nonReentrant {\r... */\n    tag_75:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_144\n      jump\t// in\n    tag_223:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":7310:7318  status() */\n      tag_226\n        /* \"Ethereum/Presale.sol\":7310:7316  status */\n      tag_43\n        /* \"Ethereum/Presale.sol\":7310:7318  status() */\n      jump\t// in\n    tag_226:\n        /* \"Ethereum/Presale.sol\":7322:7323  1 */\n      0x01\n        /* \"Ethereum/Presale.sol\":7310:7323  status() == 1 */\n      eq\n        /* \"Ethereum/Presale.sol\":7302:7340  require(status() == 1, \"Sale sucesss\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8458:8460   */\n      0x20\n        /* \"Ethereum/Presale.sol\":7302:7340  require(status() == 1, \"Sale sucesss\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8440:8461   */\n      mstore\n        /* \"#utility.yul\":8497:8499   */\n      0x0c\n        /* \"#utility.yul\":8477:8495   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8470:8500   */\n      mstore\n      shl(0xa0, 0x53616c652073756365737373)\n        /* \"#utility.yul\":8516:8534   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8509:8551   */\n      mstore\n        /* \"#utility.yul\":8568:8586   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":7302:7340  require(status() == 1, \"Sale sucesss\") */\n      tag_127\n        /* \"#utility.yul\":8430:8592   */\n      jump\n        /* \"Ethereum/Presale.sol\":7302:7340  require(status() == 1, \"Sale sucesss\") */\n    tag_227:\n        /* \"Ethereum/Presale.sol\":7394:7425  presaleStatus.totalBaseWithDraw */\n      sload(0x07)\n        /* \"Ethereum/Presale.sol\":7394:7407  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":7359:7391  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":7428:7429  0 */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":7359:7425  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw */\n      tag_230\n      swap2\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"Ethereum/Presale.sol\":7359:7429  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":7351:7488  require(presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0, \r... */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_234\n      jump\t// in\n    tag_232:\n        /* \"Ethereum/Presale.sol\":7536:7546  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":7500:7523  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":7526:7547  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":7526:7535  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":7526:7547  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":7566:7583  buyer.baseDeposit */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":7558:7629  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6959:6961   */\n      0x20\n        /* \"Ethereum/Presale.sol\":7558:7629  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6941:6962   */\n      mstore\n        /* \"#utility.yul\":6998:7000   */\n      0x25\n        /* \"#utility.yul\":6978:6996   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6971:7001   */\n      mstore\n        /* \"#utility.yul\":7037:7071   */\n      0x596f7520726566756e6420616c6c206f722068617665206e6f7420626f756768\n        /* \"#utility.yul\":7017:7035   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7010:7072   */\n      mstore\n      shl(0xda, 0x1d081e595d)\n        /* \"#utility.yul\":7088:7106   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7081:7116   */\n      mstore\n        /* \"#utility.yul\":7133:7152   */\n      0x84\n      add\n        /* \"Ethereum/Presale.sol\":7558:7629  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n      tag_127\n        /* \"#utility.yul\":6931:7158   */\n      jump\n        /* \"Ethereum/Presale.sol\":7558:7629  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n    tag_235:\n        /* \"Ethereum/Presale.sol\":7742:7759  buyer.baseDeposit */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":7683:7702  saleInfor.refundFee */\n      sload(0x15)\n        /* \"Ethereum/Presale.sol\":7640:7660  uint256 amountRefund */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":7663:7813  ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      tag_238\n      swap2\n        /* \"Ethereum/Presale.sol\":7807:7811  1000 */\n      0x03e8\n      swap2\n        /* \"Ethereum/Presale.sol\":7664:7760  (uint256(1000).sub(saleInfor.refundFee))\r... */\n      tag_239\n      swap2\n        /* \"Ethereum/Presale.sol\":7665:7703  uint256(1000).sub(saleInfor.refundFee) */\n      tag_240\n      swap1\n        /* \"Ethereum/Presale.sol\":7807:7811  1000 */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":7665:7682  uint256(1000).sub */\n      tag_241\n        /* \"Ethereum/Presale.sol\":7665:7703  uint256(1000).sub(saleInfor.refundFee) */\n      jump\t// in\n    tag_240:\n        /* \"Ethereum/Presale.sol\":7664:7741  (uint256(1000).sub(saleInfor.refundFee))\r... */\n      swap1\n      tag_219\n        /* \"Ethereum/Presale.sol\":7664:7760  (uint256(1000).sub(saleInfor.refundFee))\r... */\n      jump\t// in\n    tag_239:\n        /* \"Ethereum/Presale.sol\":7663:7798  ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      swap1\n      tag_242\n        /* \"Ethereum/Presale.sol\":7663:7813  ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      jump\t// in\n    tag_238:\n        /* \"Ethereum/Presale.sol\":7836:7853  buyer.baseDeposit */\n      dup3\n      sload\n        /* \"Ethereum/Presale.sol\":7640:7813  uint256 amountRefund = ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      swap1\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":7836:7868  buyer.baseDeposit - amountRefund */\n      tag_243\n      swap1\n        /* \"Ethereum/Presale.sol\":7640:7813  uint256 amountRefund = ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      dup3\n      swap1\n        /* \"Ethereum/Presale.sol\":7836:7868  buyer.baseDeposit - amountRefund */\n      tag_231\n      jump\t// in\n    tag_243:\n        /* \"Ethereum/Presale.sol\":7824:7832  totalFee */\n      0x1d\n      0x00\n        /* \"Ethereum/Presale.sol\":7824:7868  totalFee += buyer.baseDeposit - amountRefund */\n      dup3\n      dup3\n      sload\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":7879:7910  presaleStatus.totalBaseWithDraw */\n      0x07\n        /* \"Ethereum/Presale.sol\":7879:7926  presaleStatus.totalBaseWithDraw += amountRefund */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":7914:7926  amountRefund */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":7879:7910  presaleStatus.totalBaseWithDraw */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":7879:7926  presaleStatus.totalBaseWithDraw += amountRefund */\n      tag_246\n      swap1\n        /* \"Ethereum/Presale.sol\":7914:7926  amountRefund */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":7879:7926  presaleStatus.totalBaseWithDraw += amountRefund */\n      tag_245\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":7958:7959  0 */\n      0x00\n        /* \"Ethereum/Presale.sol\":7937:7959  buyer.baseDeposit  = 0 */\n      dup1\n      dup4\n      sstore\n        /* \"Ethereum/Presale.sol\":7970:7986  buyer.tokenOwner */\n      0x01\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":7970:7990  buyer.tokenOwner = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":8022:8037  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":8001:8019  buyer.lastWithDraw */\n      0x02\n      dup5\n      add\n        /* \"Ethereum/Presale.sol\":8001:8037  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":8048:8090  payable(msg.sender).transfer(amountRefund) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":8056:8066  msg.sender */\n      caller\n      swap2\n        /* \"Ethereum/Presale.sol\":8048:8090  payable(msg.sender).transfer(amountRefund) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"Ethereum/Presale.sol\":8077:8089  amountRefund */\n      dup5\n      swap2\n        /* \"Ethereum/Presale.sol\":8048:8090  payable(msg.sender).transfer(amountRefund) */\n      dup2\n        /* \"Ethereum/Presale.sol\":7958:7959  0 */\n      dup2\n        /* \"Ethereum/Presale.sol\":8048:8090  payable(msg.sender).transfer(amountRefund) */\n      dup2\n        /* \"Ethereum/Presale.sol\":8077:8089  amountRefund */\n      dup6\n        /* \"Ethereum/Presale.sol\":8056:8066  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":8048:8090  payable(msg.sender).transfer(amountRefund) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"Ethereum/Presale.sol\":6351:7230  function userClaimEmergency() external nonReentrant {\r... */\n    tag_78:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_144\n      jump\t// in\n    tag_250:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      sstore\n        /* \"Ethereum/Presale.sol\":6422:6430  status() */\n      tag_253\n        /* \"Ethereum/Presale.sol\":6422:6428  status */\n      tag_43\n        /* \"Ethereum/Presale.sol\":6422:6430  status() */\n      jump\t// in\n    tag_253:\n        /* \"Ethereum/Presale.sol\":6434:6435  1 */\n      0x01\n        /* \"Ethereum/Presale.sol\":6422:6435  status() == 1 */\n      eq\n        /* \"Ethereum/Presale.sol\":6414:6452  require(status() == 1, \"Sale sucesss\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8458:8460   */\n      0x20\n        /* \"Ethereum/Presale.sol\":6414:6452  require(status() == 1, \"Sale sucesss\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8440:8461   */\n      mstore\n        /* \"#utility.yul\":8497:8499   */\n      0x0c\n        /* \"#utility.yul\":8477:8495   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8470:8500   */\n      mstore\n      shl(0xa0, 0x53616c652073756365737373)\n        /* \"#utility.yul\":8516:8534   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8509:8551   */\n      mstore\n        /* \"#utility.yul\":8568:8586   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":6414:6452  require(status() == 1, \"Sale sucesss\") */\n      tag_127\n        /* \"#utility.yul\":8430:8592   */\n      jump\n        /* \"Ethereum/Presale.sol\":6414:6452  require(status() == 1, \"Sale sucesss\") */\n    tag_254:\n        /* \"Ethereum/Presale.sol\":6503:6535  presaleStatus.totalTokenWithDraw */\n      sload(0x06)\n        /* \"Ethereum/Presale.sol\":6472:6500  presaleStatus.totalTokenSold */\n      sload(0x05)\n        /* \"Ethereum/Presale.sol\":6538:6539  0 */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":6472:6535  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw */\n      tag_256\n      swap2\n      tag_231\n      jump\t// in\n    tag_256:\n        /* \"Ethereum/Presale.sol\":6472:6539  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":6464:6598  require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r... */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_234\n      jump\t// in\n    tag_257:\n        /* \"Ethereum/Presale.sol\":6645:6655  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":6609:6632  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":6635:6656  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":6635:6644  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":6635:6656  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":6694:6718  buyer.totalTokenWithDraw */\n      0x03\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":6675:6691  buyer.tokenOwner */\n      0x01\n      dup3\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":6675:6718  buyer.tokenOwner > buyer.totalTokenWithDraw */\n      gt\n        /* \"Ethereum/Presale.sol\":6667:6759  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_261\n      jump\t// in\n    tag_259:\n        /* \"Ethereum/Presale.sol\":6770:6789  uint256 amountClaim */\n      0x00\n        /* \"Ethereum/Presale.sol\":6792:6928  ((uint256(1000).sub(saleInfor.claimFee))\r... */\n      tag_262\n        /* \"Ethereum/Presale.sol\":6922:6926  1000 */\n      0x03e8\n        /* \"Ethereum/Presale.sol\":6793:6881  (uint256(1000).sub(saleInfor.claimFee))\r... */\n      tag_239\n        /* \"Ethereum/Presale.sol\":6864:6869  buyer */\n      dup5\n        /* \"Ethereum/Presale.sol\":6864:6880  buyer.tokenOwner */\n      0x01\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":6794:6831  uint256(1000).sub(saleInfor.claimFee) */\n      tag_240\n        /* \"Ethereum/Presale.sol\":6812:6821  saleInfor */\n      0x0d\n        /* \"Ethereum/Presale.sol\":6812:6830  saleInfor.claimFee */\n      0x09\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":6802:6806  1000 */\n      0x03e8\n        /* \"Ethereum/Presale.sol\":6794:6811  uint256(1000).sub */\n      tag_241\n      swap1\n        /* \"Ethereum/Presale.sol\":6794:6831  uint256(1000).sub(saleInfor.claimFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":6792:6928  ((uint256(1000).sub(saleInfor.claimFee))\r... */\n    tag_262:\n        /* \"Ethereum/Presale.sol\":6770:6928  uint256 amountClaim = ((uint256(1000).sub(saleInfor.claimFee))\r... */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":6975:6986  amountClaim */\n      dup1\n        /* \"Ethereum/Presale.sol\":6939:6952  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":6939:6971  presaleStatus.totalTokenWithDraw */\n      0x02\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":6939:6986  presaleStatus.totalTokenWithDraw += amountClaim */\n      dup3\n      dup3\n      sload\n      tag_265\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_265:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":6997:7025  saleInfor.amountTokenForSale */\n      0x18\n        /* \"Ethereum/Presale.sol\":6997:7040  saleInfor.amountTokenForSale -= amountClaim */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":7029:7040  amountClaim */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":6997:7025  saleInfor.amountTokenForSale */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":6997:7040  saleInfor.amountTokenForSale -= amountClaim */\n      tag_266\n      swap1\n        /* \"Ethereum/Presale.sol\":7029:7040  amountClaim */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":6997:7040  saleInfor.amountTokenForSale -= amountClaim */\n      tag_231\n      jump\t// in\n    tag_266:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":7072:7073  0 */\n      0x00\n        /* \"Ethereum/Presale.sol\":7051:7073  buyer.baseDeposit  = 0 */\n      dup1\n      dup4\n      sstore\n        /* \"Ethereum/Presale.sol\":7084:7100  buyer.tokenOwner */\n      0x01\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":7084:7104  buyer.tokenOwner = 0 */\n      sstore\n        /* \"Ethereum/Presale.sol\":7136:7151  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":7115:7133  buyer.lastWithDraw */\n      0x02\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":7115:7151  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":7168:7187  saleInfor.saleToken */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":7162:7222  ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":7198:7208  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":7162:7222  ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4102:4153   */\n      mstore\n        /* \"#utility.yul\":4169:4187   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4162:4196   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":7168:7187  saleInfor.saleToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":7162:7197  ERC20(saleInfor.saleToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4075:4093   */\n      0x44\n      add\n        /* \"Ethereum/Presale.sol\":7162:7222  ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4136:6343  function deposit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_92:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_144\n      jump\t// in\n    tag_274:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      dup2\n      sstore\n        /* \"Ethereum/Presale.sol\":4307:4317  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":4297:4318  buyerInfo[msg.sender] */\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Ethereum/Presale.sol\":4349:4356  _amount */\n      dup3\n      swap1\n      dup2\n      swap1\n        /* \"Ethereum/Presale.sol\":4462:4466  1000 */\n      0x03e8\n        /* \"Ethereum/Presale.sol\":4485:4494  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":4485:4512  msg.value >= real_amount_in */\n      dup4\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":4477:4543  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5482:5484   */\n      0x20\n        /* \"Ethereum/Presale.sol\":4477:4543  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5464:5485   */\n      mstore\n        /* \"#utility.yul\":5521:5523   */\n      0x1a\n        /* \"#utility.yul\":5501:5519   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5494:5524   */\n      mstore\n        /* \"#utility.yul\":5560:5588   */\n      0x506c656173652070726f76696465206e617669746520636f696e000000000000\n        /* \"#utility.yul\":5540:5558   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5533:5589   */\n      mstore\n        /* \"#utility.yul\":5606:5624   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":4477:4543  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n      tag_127\n        /* \"#utility.yul\":5454:5630   */\n      jump\n        /* \"Ethereum/Presale.sol\":4477:4543  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n    tag_277:\n        /* \"Ethereum/Presale.sol\":4580:4606  saleInfor.minSpendPerBuyer */\n      sload(0x13)\n        /* \"Ethereum/Presale.sol\":4562:4606  real_amount_in >= saleInfor.minSpendPerBuyer */\n      dup4\n      lt\n      iszero\n        /* \"Ethereum/Presale.sol\":4554:4655  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"Ethereum/Presale.sol\":4554:4655  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8095:8116   */\n      mstore\n        /* \"#utility.yul\":8152:8154   */\n      0x10\n        /* \"#utility.yul\":8132:8150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8125:8155   */\n      mstore\n      shl(0x80, 0x4e6f7420656e6f7567682076616c7565)\n        /* \"#utility.yul\":8171:8189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8164:8210   */\n      mstore\n        /* \"#utility.yul\":8227:8245   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":4554:4655  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_127\n        /* \"#utility.yul\":8085:8251   */\n      jump\n        /* \"Ethereum/Presale.sol\":4554:4655  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n    tag_280:\n        /* \"Ethereum/Presale.sol\":4692:4718  saleInfor.maxSpendPerBuyer */\n      sload(0x14)\n        /* \"Ethereum/Presale.sol\":4674:4718  real_amount_in <= saleInfor.maxSpendPerBuyer */\n      dup4\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":4666:4765  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7365:7367   */\n      0x20\n        /* \"Ethereum/Presale.sol\":4666:4765  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7347:7368   */\n      mstore\n        /* \"#utility.yul\":7404:7406   */\n      0x0e\n        /* \"#utility.yul\":7384:7402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7377:7407   */\n      mstore\n      shl(0x90, 0x4f766572666c6f772076616c7565)\n        /* \"#utility.yul\":7423:7441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7416:7460   */\n      mstore\n        /* \"#utility.yul\":7477:7495   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":4666:4765  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n      tag_127\n        /* \"#utility.yul\":7337:7501   */\n      jump\n        /* \"Ethereum/Presale.sol\":4666:4765  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n    tag_283:\n        /* \"Ethereum/Presale.sol\":4780:4799  checkAdminAddress() */\n      tag_286\n        /* \"Ethereum/Presale.sol\":4780:4797  checkAdminAddress */\n      tag_95\n        /* \"Ethereum/Presale.sol\":4780:4799  checkAdminAddress() */\n      jump\t// in\n    tag_286:\n        /* \"Ethereum/Presale.sol\":4776:5042  if(!checkAdminAddress()) {\r... */\n      tag_287\n      jumpi\n        /* \"Ethereum/Presale.sol\":4833:4966  ((fullPercenFee.sub(feeAnyone))\r... */\n      tag_288\n        /* \"Ethereum/Presale.sol\":4952:4965  fullPercenFee */\n      dup2\n        /* \"Ethereum/Presale.sol\":4834:4915  (fullPercenFee.sub(feeAnyone))\r... */\n      tag_239\n        /* \"Ethereum/Presale.sol\":4900:4914  real_amount_in */\n      dup6\n        /* \"Ethereum/Presale.sol\":4835:4863  fullPercenFee.sub(feeAnyone) */\n      tag_240\n        /* \"Ethereum/Presale.sol\":4853:4862  feeAnyone */\n      sload(0x1a)\n        /* \"Ethereum/Presale.sol\":4835:4848  fullPercenFee */\n      dup7\n        /* \"Ethereum/Presale.sol\":4835:4852  fullPercenFee.sub */\n      tag_241\n      swap1\n        /* \"Ethereum/Presale.sol\":4835:4863  fullPercenFee.sub(feeAnyone) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4833:4966  ((fullPercenFee.sub(feeAnyone))\r... */\n    tag_288:\n        /* \"Ethereum/Presale.sol\":4816:4966  real_amount_in = ((fullPercenFee.sub(feeAnyone))\r... */\n      swap3\n      pop\n        /* \"Ethereum/Presale.sol\":4987:5013  amount_in - real_amount_in */\n      tag_291\n        /* \"Ethereum/Presale.sol\":4816:4966  real_amount_in = ((fullPercenFee.sub(feeAnyone))\r... */\n      dup4\n        /* \"Ethereum/Presale.sol\":4987:4996  amount_in */\n      dup6\n        /* \"Ethereum/Presale.sol\":4987:5013  amount_in - real_amount_in */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"Ethereum/Presale.sol\":4981:5013  fee = amount_in - real_amount_in */\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":4776:5042  if(!checkAdminAddress()) {\r... */\n    tag_287:\n        /* \"Ethereum/Presale.sol\":5107:5124  buyer.baseDeposit */\n      dup5\n      sload\n        /* \"Ethereum/Presale.sol\":5078:5104  saleInfor.maxSpendPerBuyer */\n      sload(0x14)\n        /* \"Ethereum/Presale.sol\":5052:5075  uint256 remainingByUser */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":5078:5124  saleInfor.maxSpendPerBuyer - buyer.baseDeposit */\n      tag_292\n      swap2\n      tag_231\n      jump\t// in\n    tag_292:\n        /* \"Ethereum/Presale.sol\":5192:5205  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":5192:5224  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":5161:5189  saleInfor.amountTokenForSale */\n      sload(0x18)\n        /* \"Ethereum/Presale.sol\":5052:5124  uint256 remainingByUser = saleInfor.maxSpendPerBuyer - buyer.baseDeposit */\n      swap2\n      swap3\n      pop\n        /* \"Ethereum/Presale.sol\":5135:5158  uint256 remainingByPool */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":5161:5224  saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected */\n      tag_293\n      swap2\n        /* \"Ethereum/Presale.sol\":5192:5224  presaleStatus.totalBaseCollected */\n      swap1\n        /* \"Ethereum/Presale.sol\":5161:5224  saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected */\n      tag_231\n      jump\t// in\n    tag_293:\n        /* \"Ethereum/Presale.sol\":5135:5224  uint256 remainingByPool = saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":5235:5252  uint256 allowance */\n      0x00\n        /* \"Ethereum/Presale.sol\":5273:5288  remainingByPool */\n      dup2\n        /* \"Ethereum/Presale.sol\":5255:5270  remainingByUser */\n      dup4\n        /* \"Ethereum/Presale.sol\":5255:5288  remainingByUser > remainingByPool */\n      gt\n        /* \"Ethereum/Presale.sol\":5255:5324  remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n      tag_294\n      jumpi\n        /* \"Ethereum/Presale.sol\":5309:5324  remainingByUser */\n      dup3\n        /* \"Ethereum/Presale.sol\":5255:5324  remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n      jump(tag_295)\n    tag_294:\n        /* \"Ethereum/Presale.sol\":5291:5306  remainingByPool */\n      dup2\n        /* \"Ethereum/Presale.sol\":5255:5324  remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n    tag_295:\n        /* \"Ethereum/Presale.sol\":5235:5324  uint256 allowance = remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":5361:5370  allowance */\n      dup1\n        /* \"Ethereum/Presale.sol\":5343:5357  real_amount_in */\n      dup7\n        /* \"Ethereum/Presale.sol\":5343:5370  real_amount_in <= allowance */\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":5335:5390  require(real_amount_in <= allowance, \"Sale is success\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10630:10632   */\n      0x20\n        /* \"Ethereum/Presale.sol\":5335:5390  require(real_amount_in <= allowance, \"Sale is success\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10612:10633   */\n      mstore\n        /* \"#utility.yul\":10669:10671   */\n      0x0f\n        /* \"#utility.yul\":10649:10667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10642:10672   */\n      mstore\n      shl(0x88, 0x53616c652069732073756363657373)\n        /* \"#utility.yul\":10688:10706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10681:10726   */\n      mstore\n        /* \"#utility.yul\":10743:10761   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":5335:5390  require(real_amount_in <= allowance, \"Sale is success\") */\n      tag_127\n        /* \"#utility.yul\":10602:10767   */\n      jump\n        /* \"Ethereum/Presale.sol\":5335:5390  require(real_amount_in <= allowance, \"Sale is success\") */\n    tag_296:\n        /* \"Ethereum/Presale.sol\":5401:5418  uint256 tokenSold */\n      0x00\n        /* \"Ethereum/Presale.sol\":5422:5580  real_amount_in.\r... */\n      tag_299\n        /* \"Ethereum/Presale.sol\":5547:5556  saleInfor */\n      0x0d\n        /* \"Ethereum/Presale.sol\":5547:5566  saleInfor.baseToken */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":5541:5576  ERC20(saleInfor.baseToken).decimals */\n      and\n      0x313ce567\n        /* \"Ethereum/Presale.sol\":5541:5578  ERC20(saleInfor.baseToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_300\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_300:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_302\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_302:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_303\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_303:\n        /* \"Ethereum/Presale.sol\":5527:5579  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_304\n      swap1\n        /* \"Ethereum/Presale.sol\":5527:5529  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":5527:5579  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_173\n      jump\t// in\n    tag_304:\n        /* \"Ethereum/Presale.sol\":5471:5491  saleInfor.tokenPrice */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":5422:5492  real_amount_in.\r... */\n      tag_239\n      swap1\n        /* \"Ethereum/Presale.sol\":5422:5436  real_amount_in */\n      dup11\n      swap1\n        /* \"Ethereum/Presale.sol\":5422:5470  real_amount_in.\r... */\n      tag_219\n        /* \"Ethereum/Presale.sol\":5422:5492  real_amount_in.\r... */\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":5422:5580  real_amount_in.\r... */\n    tag_299:\n        /* \"Ethereum/Presale.sol\":5401:5581  uint256 tokenSold = (real_amount_in.\r... */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":5630:5639  amount_in */\n      dup8\n        /* \"Ethereum/Presale.sol\":5609:5614  buyer */\n      dup10\n        /* \"Ethereum/Presale.sol\":5609:5626  buyer.baseDeposit */\n      0x00\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":5609:5639  buyer.baseDeposit += amount_in */\n      dup3\n      dup3\n      sload\n      tag_306\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_306:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":5670:5679  tokenSold */\n      dup1\n        /* \"Ethereum/Presale.sol\":5650:5655  buyer */\n      dup10\n        /* \"Ethereum/Presale.sol\":5650:5666  buyer.tokenOwner */\n      0x01\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":5650:5679  buyer.tokenOwner += tokenSold */\n      dup3\n      dup3\n      sload\n      tag_307\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_307:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":5690:5703  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":5690:5740  presaleStatus.totalBaseCollected += real_amount_in */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":5726:5740  real_amount_in */\n      dup9\n      swap2\n        /* \"Ethereum/Presale.sol\":5690:5703  presaleStatus */\n      swap1\n        /* \"Ethereum/Presale.sol\":5690:5722  presaleStatus.totalBaseCollected */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":5690:5740  presaleStatus.totalBaseCollected += real_amount_in */\n      tag_308\n      swap1\n        /* \"Ethereum/Presale.sol\":5726:5740  real_amount_in */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":5690:5740  presaleStatus.totalBaseCollected += real_amount_in */\n      tag_245\n      jump\t// in\n    tag_308:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":5751:5779  presaleStatus.totalTokenSold */\n      0x05\n        /* \"Ethereum/Presale.sol\":5751:5792  presaleStatus.totalTokenSold += tokenSold */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":5783:5792  tokenSold */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":5751:5779  presaleStatus.totalTokenSold */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":5751:5792  presaleStatus.totalTokenSold += tokenSold */\n      tag_309\n      swap1\n        /* \"Ethereum/Presale.sol\":5783:5792  tokenSold */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":5751:5792  presaleStatus.totalTokenSold += tokenSold */\n      tag_245\n      jump\t// in\n    tag_309:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":5803:5828  presaleStatus.numberBuyer */\n      0x08\n        /* \"Ethereum/Presale.sol\":5803:5830  presaleStatus.numberBuyer++ */\n      dup1\n      sload\n      swap1\n        /* \"Ethereum/Presale.sol\":5803:5828  presaleStatus.numberBuyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":5803:5830  presaleStatus.numberBuyer++ */\n      tag_310\n      dup4\n      tag_311\n      jump\t// in\n    tag_310:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":5849:5859  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":5841:5860  userFee[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":5841:5848  userFee */\n      0x03\n        /* \"Ethereum/Presale.sol\":5841:5860  userFee[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Ethereum/Presale.sol\":5841:5867  userFee[msg.sender] += fee */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":5864:5867  fee */\n      dup9\n      swap3\n        /* \"Ethereum/Presale.sol\":5841:5860  userFee[msg.sender] */\n      swap1\n        /* \"Ethereum/Presale.sol\":5841:5867  userFee[msg.sender] += fee */\n      tag_312\n      swap1\n        /* \"Ethereum/Presale.sol\":5864:5867  fee */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":5841:5867  userFee[msg.sender] += fee */\n      tag_245\n      jump\t// in\n    tag_312:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":5890:5893  fee */\n      dup6\n        /* \"Ethereum/Presale.sol\":5878:5886  totalFee */\n      0x1d\n      0x00\n        /* \"Ethereum/Presale.sol\":5878:5893  totalFee += fee */\n      dup3\n      dup3\n      sload\n      tag_313\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_313:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":5909:5934  saleInfor.saleIsBaseToken */\n      and(0xff, sload(0x17))\n        /* \"Ethereum/Presale.sol\":5909:5971  saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value */\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":5962:5971  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":5938:5958  real_amount_in + fee */\n      tag_315\n        /* \"Ethereum/Presale.sol\":5955:5958  fee */\n      dup8\n        /* \"Ethereum/Presale.sol\":5938:5952  real_amount_in */\n      dup10\n        /* \"Ethereum/Presale.sol\":5938:5958  real_amount_in + fee */\n      tag_245\n      jump\t// in\n    tag_315:\n        /* \"Ethereum/Presale.sol\":5938:5971  real_amount_in + fee <= msg.value */\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":5909:5971  saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value */\n    tag_314:\n        /* \"Ethereum/Presale.sol\":5906:6062  if(saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value) {\r... */\n      iszero\n      tag_316\n      jumpi\n        /* \"Ethereum/Presale.sol\":5996:6006  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":5988:6050  payable(msg.sender).transfer(msg.value - real_amount_in - fee) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":6046:6049  fee */\n      dup8\n        /* \"Ethereum/Presale.sol\":6017:6043  msg.value - real_amount_in */\n      tag_317\n        /* \"Ethereum/Presale.sol\":6029:6043  real_amount_in */\n      dup11\n        /* \"Ethereum/Presale.sol\":6017:6026  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":6017:6043  msg.value - real_amount_in */\n      tag_231\n      jump\t// in\n    tag_317:\n        /* \"Ethereum/Presale.sol\":6017:6049  msg.value - real_amount_in - fee */\n      tag_318\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_318:\n        /* \"Ethereum/Presale.sol\":5988:6050  payable(msg.sender).transfer(msg.value - real_amount_in - fee) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_320:\n      pop\n        /* \"Ethereum/Presale.sol\":5906:6062  if(saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value) {\r... */\n    tag_316:\n        /* \"Ethereum/Presale.sol\":6077:6102  saleInfor.saleIsBaseToken */\n      and(0xff, sload(0x17))\n        /* \"Ethereum/Presale.sol\":6073:6324  if(!saleInfor.saleIsBaseToken) {\r... */\n      tag_322\n      jumpi\n        /* \"Ethereum/Presale.sol\":6177:6196  saleInfor.baseToken */\n      sload(0x0f)\n        /* \"Ethereum/Presale.sol\":6119:6312  TransferHelper.safeTransferFrom(\r... */\n      tag_322\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":6177:6196  saleInfor.baseToken */\n      and\n        /* \"Ethereum/Presale.sol\":6216:6226  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":6253:6257  this */\n      address\n        /* \"Ethereum/Presale.sol\":6277:6297  real_amount_in + fee */\n      tag_323\n        /* \"Ethereum/Presale.sol\":6294:6297  fee */\n      dup11\n        /* \"Ethereum/Presale.sol\":6277:6291  real_amount_in */\n      dup13\n        /* \"Ethereum/Presale.sol\":6277:6297  real_amount_in + fee */\n      tag_245\n      jump\t// in\n    tag_323:\n        /* \"Ethereum/Presale.sol\":6119:6150  TransferHelper.safeTransferFrom */\n      tag_324\n        /* \"Ethereum/Presale.sol\":6119:6312  TransferHelper.safeTransferFrom(\r... */\n      jump\t// in\n    tag_322:\n      pop\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":4136:6343  function deposit(uint256 _amount) external payable nonReentrant {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4018:4128  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_95:\n        /* \"Ethereum/Presale.sol\":4067:4071  bool */\n      0x00\n        /* \"Ethereum/Presale.sol\":4091:4120  admins.contains(_msgSender()) */\n      tag_326\n        /* \"Ethereum/Presale.sol\":4091:4097  admins */\n      0x1b\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":4091:4106  admins.contains */\n      tag_328\n        /* \"Ethereum/Presale.sol\":4091:4120  admins.contains(_msgSender()) */\n      jump\t// in\n    tag_326:\n        /* \"Ethereum/Presale.sol\":4084:4120  return admins.contains(_msgSender()) */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":4018:4128  function checkAdminAddress() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":8869:9598  function userClaimWhenSaleSuccess() external {\r... */\n    tag_100:\n        /* \"Ethereum/Presale.sol\":9025:9057  presaleStatus.totalTokenWithDraw */\n      sload(0x06)\n        /* \"Ethereum/Presale.sol\":8994:9022  presaleStatus.totalTokenSold */\n      sload(0x05)\n        /* \"Ethereum/Presale.sol\":9060:9061  0 */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":8994:9057  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw */\n      tag_330\n      swap2\n      tag_231\n      jump\t// in\n    tag_330:\n        /* \"Ethereum/Presale.sol\":8994:9061  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":8986:9120  require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r... */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_234\n      jump\t// in\n    tag_331:\n        /* \"Ethereum/Presale.sol\":9167:9177  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":9131:9154  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":9157:9178  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":9157:9166  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":9157:9178  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":9216:9240  buyer.totalTokenWithDraw */\n      0x03\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":9197:9213  buyer.tokenOwner */\n      0x01\n      dup3\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":9197:9240  buyer.tokenOwner > buyer.totalTokenWithDraw */\n      gt\n        /* \"Ethereum/Presale.sol\":9189:9281  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_261\n      jump\t// in\n    tag_333:\n        /* \"Ethereum/Presale.sol\":9328:9344  buyer.tokenOwner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":9292:9324  presaleStatus.totalTokenWithDraw */\n      0x06\n        /* \"Ethereum/Presale.sol\":9292:9344  presaleStatus.totalTokenWithDraw += buyer.tokenOwner */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":9292:9324  presaleStatus.totalTokenWithDraw */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":9292:9344  presaleStatus.totalTokenWithDraw += buyer.tokenOwner */\n      tag_335\n      swap1\n        /* \"Ethereum/Presale.sol\":9328:9344  buyer.tokenOwner */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":9292:9344  presaleStatus.totalTokenWithDraw += buyer.tokenOwner */\n      tag_245\n      jump\t// in\n    tag_335:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":9387:9403  buyer.tokenOwner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":9355:9383  saleInfor.amountTokenForSale */\n      0x18\n        /* \"Ethereum/Presale.sol\":9355:9403  saleInfor.amountTokenForSale -= buyer.tokenOwner */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":9355:9383  saleInfor.amountTokenForSale */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":9355:9403  saleInfor.amountTokenForSale -= buyer.tokenOwner */\n      tag_336\n      swap1\n        /* \"Ethereum/Presale.sol\":9387:9403  buyer.tokenOwner */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":9355:9403  saleInfor.amountTokenForSale -= buyer.tokenOwner */\n      tag_231\n      jump\t// in\n    tag_336:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":9435:9436  0 */\n      0x00\n        /* \"Ethereum/Presale.sol\":9414:9436  buyer.baseDeposit  = 0 */\n      dup1\n      dup3\n      sstore\n        /* \"Ethereum/Presale.sol\":9447:9463  buyer.tokenOwner */\n      0x01\n      dup3\n      add\n        /* \"Ethereum/Presale.sol\":9447:9467  buyer.tokenOwner = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":9499:9514  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":9478:9496  buyer.lastWithDraw */\n      0x02\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":9478:9514  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":9531:9550  saleInfor.saleToken */\n      sload(0x0e)\n        /* \"Ethereum/Presale.sol\":9525:9590  ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":9561:9571  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":9525:9590  ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4102:4153   */\n      mstore\n        /* \"#utility.yul\":4169:4187   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4162:4196   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":9531:9550  saleInfor.saleToken */\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":9525:9560  ERC20(saleInfor.saleToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4075:4093   */\n      0x44\n      add\n        /* \"Ethereum/Presale.sol\":9525:9590  ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_341\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_341:\n      pop\n        /* \"Ethereum/Presale.sol\":8914:9598  {\r... */\n      pop\n        /* \"Ethereum/Presale.sol\":8869:9598  function userClaimWhenSaleSuccess() external {\r... */\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_110:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9146:9148   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9128:9149   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9165:9183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9158:9188   */\n      mstore\n        /* \"#utility.yul\":9224:9258   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9204:9222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9197:9259   */\n      mstore\n        /* \"#utility.yul\":9276:9294   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_127\n        /* \"#utility.yul\":9118:9300   */\n      jump\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_345:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6193:6195   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6175:6196   */\n      mstore\n        /* \"#utility.yul\":6232:6234   */\n      0x26\n        /* \"#utility.yul\":6212:6230   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6205:6235   */\n      mstore\n        /* \"#utility.yul\":6271:6305   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6251:6269   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6244:6306   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6322:6340   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6315:6351   */\n      mstore\n        /* \"#utility.yul\":6368:6387   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_127\n        /* \"#utility.yul\":6165:6393   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_348:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_134\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_131\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_116:\n        /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_354\n        /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n      tag_355\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_354:\n        /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_353:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_131:\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap2\n      and\n      swap2\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      swap1\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      dup3\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n      pop\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/SafeMath.sol\":3585:3683  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_219:\n        /* \"Utils/SafeMath.sol\":3643:3650  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":3670:3675  a * b */\n      tag_354\n        /* \"Utils/SafeMath.sol\":3674:3675  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":3670:3671  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":3670:3675  a * b */\n      tag_178\n      jump\t// in\n        /* \"Utils/SafeMath.sol\":3228:3326  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_241:\n        /* \"Utils/SafeMath.sol\":3286:3293  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":3313:3318  a - b */\n      tag_354\n        /* \"Utils/SafeMath.sol\":3317:3318  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":3313:3314  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":3313:3318  a - b */\n      tag_231\n      jump\t// in\n        /* \"Utils/SafeMath.sol\":3984:4082  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_242:\n        /* \"Utils/SafeMath.sol\":4042:4049  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":4069:4074  a / b */\n      tag_354\n        /* \"Utils/SafeMath.sol\":4073:4074  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":4069:4070  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":4069:4074  a / b */\n      tag_221\n      jump\t// in\n        /* \"Utils/TransferHelper.sol\":1073:1503  function safeTransferFrom(\r... */\n    tag_324:\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4465:4480   */\n      dup6\n      dup2\n      and\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4447:4481   */\n      mstore\n        /* \"#utility.yul\":4517:4532   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":4497:4515   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":4490:4533   */\n      mstore\n        /* \"#utility.yul\":4549:4567   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":4542:4576   */\n      dup6\n      swap1\n      mstore\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4382:4400   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"Utils/TransferHelper.sol\":1254:1341  token.call(\r... */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"Utils/TransferHelper.sol\":1254:1264  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"Utils/TransferHelper.sol\":1254:1341  token.call(\r... */\n      tag_367\n      swap2\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"Utils/TransferHelper.sol\":1254:1341  token.call(\r... */\n      tag_368\n      jump\t// in\n    tag_367:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_371\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_370)\n    tag_371:\n      0x60\n      swap2\n      pop\n    tag_370:\n      pop\n        /* \"Utils/TransferHelper.sol\":1218:1341  (bool success, bytes memory data) = token.call(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Utils/TransferHelper.sol\":1374:1381  success */\n      dup2\n        /* \"Utils/TransferHelper.sol\":1374:1431  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_374\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1386:1397  data.length */\n      dup1\n      mload\n        /* \"Utils/TransferHelper.sol\":1386:1402  data.length == 0 */\n      iszero\n      dup1\n        /* \"Utils/TransferHelper.sol\":1386:1430  data.length == 0 || abi.decode(data, (bool)) */\n      tag_374\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1417:1421  data */\n      dup1\n        /* \"Utils/TransferHelper.sol\":1406:1430  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_374\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_374:\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9489:9510   */\n      mstore\n        /* \"#utility.yul\":9546:9548   */\n      0x24\n        /* \"#utility.yul\":9526:9544   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9519:9549   */\n      mstore\n        /* \"#utility.yul\":9585:9619   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":9565:9583   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9558:9620   */\n      mstore\n      shl(0xe2, 0x12531151)\n        /* \"#utility.yul\":9636:9654   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9629:9663   */\n      mstore\n        /* \"#utility.yul\":9680:9699   */\n      0x84\n      add\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n      tag_127\n        /* \"#utility.yul\":9479:9705   */\n      jump\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n    tag_375:\n        /* \"Utils/TransferHelper.sol\":1207:1503  {\r... */\n      pop\n      pop\n        /* \"Utils/TransferHelper.sol\":1073:1503  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/EnumerableSet.sol\":8831:8998  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8965:8988  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"Utils/EnumerableSet.sol\":8911:8915  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":4367:4391  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"Utils/EnumerableSet.sol\":8935:8990  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_354\n        /* \"Utils/EnumerableSet.sol\":4270:4399  function _contains(Set storage set, bytes32 value) private view returns (bool) {\r... */\n      jump\n        /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_355:\n        /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n      tag_383\n      jumpi\n      pop\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n      dup5\n      sload\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n      jump(tag_353)\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n    tag_383:\n      pop\n        /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n      jump(tag_353)\n        /* \"#utility.yul\":14:261   */\n    tag_52:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_389:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_390\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":84:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":266:1527   */\n    tag_71:\n        /* \"#utility.yul\":409:415   */\n      0x00\n        /* \"#utility.yul\":417:423   */\n      dup1\n        /* \"#utility.yul\":425:431   */\n      0x00\n        /* \"#utility.yul\":433:439   */\n      dup1\n        /* \"#utility.yul\":464:467   */\n      0x0180\n        /* \"#utility.yul\":508:510   */\n      dup1\n        /* \"#utility.yul\":496:505   */\n      dup7\n        /* \"#utility.yul\":487:494   */\n      dup9\n        /* \"#utility.yul\":483:506   */\n      sub\n        /* \"#utility.yul\":479:511   */\n      slt\n        /* \"#utility.yul\":476:478   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":524:525   */\n      0x00\n        /* \"#utility.yul\":521:522   */\n      dup1\n        /* \"#utility.yul\":514:526   */\n      revert\n        /* \"#utility.yul\":476:478   */\n    tag_393:\n        /* \"#utility.yul\":563:572   */\n      dup6\n        /* \"#utility.yul\":550:573   */\n      calldataload\n        /* \"#utility.yul\":582:613   */\n      tag_394\n        /* \"#utility.yul\":607:612   */\n      dup2\n        /* \"#utility.yul\":582:613   */\n      tag_391\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":632:637   */\n      swap5\n      pop\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":695:713   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":682:714   */\n      calldataload\n        /* \"#utility.yul\":723:756   */\n      tag_395\n        /* \"#utility.yul\":682:714   */\n      dup2\n        /* \"#utility.yul\":723:756   */\n      tag_391\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":775:782   */\n      swap5\n      pop\n        /* \"#utility.yul\":834:836   */\n      0x40\n        /* \"#utility.yul\":819:837   */\n      dup8\n      add\n        /* \"#utility.yul\":806:838   */\n      calldataload\n        /* \"#utility.yul\":847:880   */\n      tag_396\n        /* \"#utility.yul\":806:838   */\n      dup2\n        /* \"#utility.yul\":847:880   */\n      tag_391\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":899:906   */\n      swap4\n      pop\n        /* \"#utility.yul\":944:947   */\n      0x7f\n        /* \"#utility.yul\":929:948   */\n      dup8\n      add\n        /* \"#utility.yul\":925:958   */\n      dup9\n      sgt\n        /* \"#utility.yul\":915:917   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":972:973   */\n      0x00\n        /* \"#utility.yul\":969:970   */\n      dup1\n        /* \"#utility.yul\":962:974   */\n      revert\n        /* \"#utility.yul\":915:917   */\n    tag_397:\n        /* \"#utility.yul\":1005:1007   */\n      0x40\n        /* \"#utility.yul\":999:1008   */\n      mload\n        /* \"#utility.yul\":1047:1050   */\n      0x0120\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1035:1051   */\n      add\n        /* \"#utility.yul\":1117:1123   */\n      dup2\n        /* \"#utility.yul\":1105:1115   */\n      dup2\n        /* \"#utility.yul\":1102:1124   */\n      lt\n        /* \"#utility.yul\":1081:1099   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1069:1079   */\n      dup3\n        /* \"#utility.yul\":1066:1100   */\n      gt\n        /* \"#utility.yul\":1063:1125   */\n      or\n        /* \"#utility.yul\":1060:1062   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":1128:1146   */\n      tag_399\n      tag_400\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1164:1166   */\n      0x40\n        /* \"#utility.yul\":1157:1179   */\n      mstore\n        /* \"#utility.yul\":1199:1205   */\n      dup1\n        /* \"#utility.yul\":1240:1242   */\n      0x60\n        /* \"#utility.yul\":1225:1243   */\n      dup10\n      add\n        /* \"#utility.yul\":1258:1276   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":1255:1286   */\n      dup12\n      lt\n        /* \"#utility.yul\":1252:1254   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":1299:1300   */\n      0x00\n        /* \"#utility.yul\":1296:1297   */\n      dup1\n        /* \"#utility.yul\":1289:1301   */\n      revert\n        /* \"#utility.yul\":1252:1254   */\n    tag_401:\n        /* \"#utility.yul\":1321:1322   */\n      0x00\n        /* \"#utility.yul\":1312:1322   */\n      swap5\n      pop\n        /* \"#utility.yul\":1331:1496   */\n    tag_402:\n        /* \"#utility.yul\":1345:1349   */\n      0x09\n        /* \"#utility.yul\":1342:1343   */\n      dup6\n        /* \"#utility.yul\":1339:1350   */\n      lt\n        /* \"#utility.yul\":1331:1496   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":1404:1421   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1392:1422   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1365:1366   */\n      0x01\n        /* \"#utility.yul\":1358:1367   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":1442:1454   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1474:1486   */\n      dup4\n      add\n        /* \"#utility.yul\":1331:1496   */\n      jump(tag_402)\n    tag_404:\n        /* \"#utility.yul\":1335:1338   */\n      pop\n      pop\n        /* \"#utility.yul\":1515:1521   */\n      dup1\n        /* \"#utility.yul\":1505:1521   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":444:1527   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1809   */\n    tag_164:\n        /* \"#utility.yul\":1599:1605   */\n      0x00\n        /* \"#utility.yul\":1652:1654   */\n      0x20\n        /* \"#utility.yul\":1640:1649   */\n      dup3\n        /* \"#utility.yul\":1631:1638   */\n      dup5\n        /* \"#utility.yul\":1627:1650   */\n      sub\n        /* \"#utility.yul\":1623:1655   */\n      slt\n        /* \"#utility.yul\":1620:1622   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1668:1669   */\n      0x00\n        /* \"#utility.yul\":1665:1666   */\n      dup1\n        /* \"#utility.yul\":1658:1670   */\n      revert\n        /* \"#utility.yul\":1620:1622   */\n    tag_406:\n        /* \"#utility.yul\":1700:1709   */\n      dup2\n        /* \"#utility.yul\":1694:1710   */\n      mload\n        /* \"#utility.yul\":1753:1758   */\n      dup1\n        /* \"#utility.yul\":1746:1759   */\n      iszero\n        /* \"#utility.yul\":1739:1760   */\n      iszero\n        /* \"#utility.yul\":1732:1737   */\n      dup2\n        /* \"#utility.yul\":1729:1761   */\n      eq\n        /* \"#utility.yul\":1719:1721   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":1775:1776   */\n      0x00\n        /* \"#utility.yul\":1772:1773   */\n      dup1\n        /* \"#utility.yul\":1765:1777   */\n      revert\n        /* \"#utility.yul\":1814:1994   */\n    tag_91:\n        /* \"#utility.yul\":1873:1879   */\n      0x00\n        /* \"#utility.yul\":1926:1928   */\n      0x20\n        /* \"#utility.yul\":1914:1923   */\n      dup3\n        /* \"#utility.yul\":1905:1912   */\n      dup5\n        /* \"#utility.yul\":1901:1924   */\n      sub\n        /* \"#utility.yul\":1897:1929   */\n      slt\n        /* \"#utility.yul\":1894:1896   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1939:1940   */\n      dup1\n        /* \"#utility.yul\":1932:1944   */\n      revert\n        /* \"#utility.yul\":1894:1896   */\n    tag_409:\n      pop\n        /* \"#utility.yul\":1965:1988   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1884:1994   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1999:2183   */\n    tag_157:\n        /* \"#utility.yul\":2069:2075   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2110:2119   */\n      dup3\n        /* \"#utility.yul\":2101:2108   */\n      dup5\n        /* \"#utility.yul\":2097:2120   */\n      sub\n        /* \"#utility.yul\":2093:2125   */\n      slt\n        /* \"#utility.yul\":2090:2092   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2138:2139   */\n      0x00\n        /* \"#utility.yul\":2135:2136   */\n      dup1\n        /* \"#utility.yul\":2128:2140   */\n      revert\n        /* \"#utility.yul\":2090:2092   */\n    tag_411:\n      pop\n        /* \"#utility.yul\":2161:2177   */\n      mload\n      swap2\n        /* \"#utility.yul\":2080:2183   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2188:2614   */\n    tag_368:\n        /* \"#utility.yul\":2317:2320   */\n      0x00\n        /* \"#utility.yul\":2355:2361   */\n      dup3\n        /* \"#utility.yul\":2349:2362   */\n      mload\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2390:2519   */\n    tag_413:\n        /* \"#utility.yul\":2404:2410   */\n      dup2\n        /* \"#utility.yul\":2401:2402   */\n      dup2\n        /* \"#utility.yul\":2398:2411   */\n      lt\n        /* \"#utility.yul\":2390:2519   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2502:2506   */\n      0x20\n        /* \"#utility.yul\":2486:2500   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":2482:2507   */\n      dup2\n      add\n        /* \"#utility.yul\":2476:2508   */\n      mload\n        /* \"#utility.yul\":2463:2474   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":2456:2509   */\n      mstore\n        /* \"#utility.yul\":2419:2431   */\n      add\n        /* \"#utility.yul\":2390:2519   */\n      jump(tag_413)\n    tag_415:\n        /* \"#utility.yul\":2537:2543   */\n      dup2\n        /* \"#utility.yul\":2534:2535   */\n      dup2\n        /* \"#utility.yul\":2531:2544   */\n      gt\n        /* \"#utility.yul\":2528:2530   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2563:2569   */\n      dup3\n        /* \"#utility.yul\":2558:2561   */\n      dup6\n        /* \"#utility.yul\":2554:2570   */\n      add\n        /* \"#utility.yul\":2547:2574   */\n      mstore\n        /* \"#utility.yul\":2528:2530   */\n    tag_416:\n      pop\n        /* \"#utility.yul\":2592:2608   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2325:2614   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5635:5986   */\n    tag_234:\n        /* \"#utility.yul\":5837:5839   */\n      0x20\n        /* \"#utility.yul\":5819:5840   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5876:5878   */\n      0x1b\n        /* \"#utility.yul\":5856:5874   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5849:5879   */\n      mstore\n        /* \"#utility.yul\":5915:5944   */\n      0x416c6c20746f6b656e20686173206265656e2077697468647261770000000000\n        /* \"#utility.yul\":5910:5912   */\n      0x40\n        /* \"#utility.yul\":5895:5913   */\n      dup3\n      add\n        /* \"#utility.yul\":5888:5945   */\n      mstore\n        /* \"#utility.yul\":5977:5979   */\n      0x60\n        /* \"#utility.yul\":5962:5980   */\n      add\n      swap1\n        /* \"#utility.yul\":5809:5986   */\n      jump\t// out\n        /* \"#utility.yul\":7506:7906   */\n    tag_261:\n        /* \"#utility.yul\":7708:7710   */\n      0x20\n        /* \"#utility.yul\":7690:7711   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7747:7749   */\n      0x24\n        /* \"#utility.yul\":7727:7745   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7720:7750   */\n      mstore\n        /* \"#utility.yul\":7786:7820   */\n      0x596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874\n        /* \"#utility.yul\":7781:7783   */\n      0x40\n        /* \"#utility.yul\":7766:7784   */\n      dup3\n      add\n        /* \"#utility.yul\":7759:7821   */\n      mstore\n      shl(0xe2, 0x081e595d)\n        /* \"#utility.yul\":7852:7854   */\n      0x60\n        /* \"#utility.yul\":7837:7855   */\n      dup3\n      add\n        /* \"#utility.yul\":7830:7864   */\n      mstore\n        /* \"#utility.yul\":7896:7899   */\n      0x80\n        /* \"#utility.yul\":7881:7900   */\n      add\n      swap1\n        /* \"#utility.yul\":7680:7906   */\n      jump\t// out\n        /* \"#utility.yul\":10068:10423   */\n    tag_144:\n        /* \"#utility.yul\":10270:10272   */\n      0x20\n        /* \"#utility.yul\":10252:10273   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10309:10311   */\n      0x1f\n        /* \"#utility.yul\":10289:10307   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10282:10312   */\n      mstore\n        /* \"#utility.yul\":10348:10381   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10343:10345   */\n      0x40\n        /* \"#utility.yul\":10328:10346   */\n      dup3\n      add\n        /* \"#utility.yul\":10321:10382   */\n      mstore\n        /* \"#utility.yul\":10414:10416   */\n      0x60\n        /* \"#utility.yul\":10399:10417   */\n      add\n      swap1\n        /* \"#utility.yul\":10242:10423   */\n      jump\t// out\n        /* \"#utility.yul\":12235:12363   */\n    tag_245:\n        /* \"#utility.yul\":12275:12278   */\n      0x00\n        /* \"#utility.yul\":12306:12307   */\n      dup3\n        /* \"#utility.yul\":12302:12308   */\n      not\n        /* \"#utility.yul\":12299:12300   */\n      dup3\n        /* \"#utility.yul\":12296:12309   */\n      gt\n        /* \"#utility.yul\":12293:12295   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":12312:12330   */\n      tag_445\n      tag_446\n      jump\t// in\n    tag_445:\n      pop\n        /* \"#utility.yul\":12348:12357   */\n      add\n      swap1\n        /* \"#utility.yul\":12283:12363   */\n      jump\t// out\n        /* \"#utility.yul\":12368:12585   */\n    tag_221:\n        /* \"#utility.yul\":12408:12409   */\n      0x00\n        /* \"#utility.yul\":12434:12435   */\n      dup3\n        /* \"#utility.yul\":12424:12426   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":12478:12488   */\n      0x4e487b71\n        /* \"#utility.yul\":12473:12476   */\n      0xe0\n        /* \"#utility.yul\":12469:12489   */\n      shl\n        /* \"#utility.yul\":12466:12467   */\n      0x00\n        /* \"#utility.yul\":12459:12490   */\n      mstore\n        /* \"#utility.yul\":12513:12517   */\n      0x12\n        /* \"#utility.yul\":12510:12511   */\n      0x04\n        /* \"#utility.yul\":12503:12518   */\n      mstore\n        /* \"#utility.yul\":12541:12545   */\n      0x24\n        /* \"#utility.yul\":12538:12539   */\n      0x00\n        /* \"#utility.yul\":12531:12546   */\n      revert\n        /* \"#utility.yul\":12424:12426   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":12570:12579   */\n      div\n      swap1\n        /* \"#utility.yul\":12414:12585   */\n      jump\t// out\n        /* \"#utility.yul\":12590:13012   */\n    tag_449:\n        /* \"#utility.yul\":12679:12680   */\n      0x01\n        /* \"#utility.yul\":12722:12727   */\n      dup2\n        /* \"#utility.yul\":12679:12680   */\n      dup2\n        /* \"#utility.yul\":12736:13006   */\n    tag_451:\n        /* \"#utility.yul\":12757:12764   */\n      dup1\n        /* \"#utility.yul\":12747:12755   */\n      dup6\n        /* \"#utility.yul\":12744:12765   */\n      gt\n        /* \"#utility.yul\":12736:13006   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":12816:12820   */\n      dup2\n        /* \"#utility.yul\":12812:12813   */\n      0x00\n        /* \"#utility.yul\":12808:12814   */\n      not\n        /* \"#utility.yul\":12804:12821   */\n      div\n        /* \"#utility.yul\":12798:12802   */\n      dup3\n        /* \"#utility.yul\":12795:12822   */\n      gt\n        /* \"#utility.yul\":12792:12794   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":12825:12843   */\n      tag_455\n      tag_446\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12875:12882   */\n      dup1\n        /* \"#utility.yul\":12865:12873   */\n      dup6\n        /* \"#utility.yul\":12861:12883   */\n      and\n        /* \"#utility.yul\":12858:12860   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":12895:12911   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":12858:12860   */\n    tag_456:\n        /* \"#utility.yul\":12974:12996   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":12934:12949   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":12736:13006   */\n      jump(tag_451)\n    tag_453:\n        /* \"#utility.yul\":12740:12743   */\n      pop\n        /* \"#utility.yul\":12654:13012   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13017:13148   */\n    tag_173:\n        /* \"#utility.yul\":13077:13082   */\n      0x00\n        /* \"#utility.yul\":13106:13142   */\n      tag_354\n        /* \"#utility.yul\":13133:13141   */\n      dup4\n        /* \"#utility.yul\":13127:13131   */\n      dup4\n        /* \"#utility.yul\":13202:13207   */\n      0x00\n        /* \"#utility.yul\":13232:13240   */\n      dup3\n        /* \"#utility.yul\":13222:13224   */\n      tag_461\n      jumpi\n      pop\n        /* \"#utility.yul\":13273:13274   */\n      0x01\n        /* \"#utility.yul\":13287:13292   */\n      jump(tag_353)\n        /* \"#utility.yul\":13222:13224   */\n    tag_461:\n        /* \"#utility.yul\":13321:13325   */\n      dup2\n        /* \"#utility.yul\":13311:13313   */\n      tag_462\n      jumpi\n      pop\n        /* \"#utility.yul\":13358:13359   */\n      0x00\n        /* \"#utility.yul\":13372:13377   */\n      jump(tag_353)\n        /* \"#utility.yul\":13311:13313   */\n    tag_462:\n        /* \"#utility.yul\":13403:13407   */\n      dup2\n        /* \"#utility.yul\":13421:13422   */\n      0x01\n        /* \"#utility.yul\":13416:13475   */\n      dup2\n      eq\n      tag_464\n      jumpi\n        /* \"#utility.yul\":13489:13490   */\n      0x02\n        /* \"#utility.yul\":13484:13614   */\n      dup2\n      eq\n      tag_465\n      jumpi\n        /* \"#utility.yul\":13396:13614   */\n      jump(tag_463)\n        /* \"#utility.yul\":13416:13475   */\n    tag_464:\n        /* \"#utility.yul\":13446:13447   */\n      0x01\n        /* \"#utility.yul\":13437:13447   */\n      swap2\n      pop\n        /* \"#utility.yul\":13460:13465   */\n      pop\n      jump(tag_353)\n        /* \"#utility.yul\":13484:13614   */\n    tag_465:\n        /* \"#utility.yul\":13521:13524   */\n      0xff\n        /* \"#utility.yul\":13511:13519   */\n      dup5\n        /* \"#utility.yul\":13508:13525   */\n      gt\n        /* \"#utility.yul\":13505:13507   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":13528:13546   */\n      tag_467\n      tag_446\n      jump\t// in\n    tag_467:\n      pop\n      pop\n        /* \"#utility.yul\":13584:13585   */\n      0x01\n        /* \"#utility.yul\":13570:13586   */\n      dup3\n      shl\n        /* \"#utility.yul\":13599:13604   */\n      jump(tag_353)\n        /* \"#utility.yul\":13396:13614   */\n    tag_463:\n      pop\n        /* \"#utility.yul\":13698:13700   */\n      0x20\n        /* \"#utility.yul\":13688:13696   */\n      dup4\n        /* \"#utility.yul\":13685:13701   */\n      lt\n        /* \"#utility.yul\":13679:13682   */\n      0x0133\n        /* \"#utility.yul\":13673:13677   */\n      dup4\n        /* \"#utility.yul\":13670:13683   */\n      lt\n        /* \"#utility.yul\":13666:13702   */\n      and\n        /* \"#utility.yul\":13660:13662   */\n      0x4e\n        /* \"#utility.yul\":13650:13658   */\n      dup5\n        /* \"#utility.yul\":13647:13663   */\n      lt\n        /* \"#utility.yul\":13642:13644   */\n      0x0b\n        /* \"#utility.yul\":13636:13640   */\n      dup5\n        /* \"#utility.yul\":13633:13645   */\n      lt\n        /* \"#utility.yul\":13629:13664   */\n      and\n        /* \"#utility.yul\":13626:13703   */\n      or\n        /* \"#utility.yul\":13623:13625   */\n      iszero\n      tag_468\n      jumpi\n      pop\n        /* \"#utility.yul\":13735:13754   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":13767:13772   */\n      jump(tag_353)\n        /* \"#utility.yul\":13623:13625   */\n    tag_468:\n        /* \"#utility.yul\":13814:13848   */\n      tag_469\n        /* \"#utility.yul\":13839:13847   */\n      dup4\n        /* \"#utility.yul\":13833:13837   */\n      dup4\n        /* \"#utility.yul\":13814:13848   */\n      tag_449\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13884:13890   */\n      dup1\n        /* \"#utility.yul\":13880:13881   */\n      0x00\n        /* \"#utility.yul\":13876:13882   */\n      not\n        /* \"#utility.yul\":13872:13891   */\n      div\n        /* \"#utility.yul\":13863:13870   */\n      dup3\n        /* \"#utility.yul\":13860:13892   */\n      gt\n        /* \"#utility.yul\":13857:13859   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":13895:13913   */\n      tag_471\n      tag_446\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13933:13953   */\n      mul\n      swap4\n        /* \"#utility.yul\":13212:13959   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13964:14132   */\n    tag_178:\n        /* \"#utility.yul\":14004:14011   */\n      0x00\n        /* \"#utility.yul\":14070:14071   */\n      dup2\n        /* \"#utility.yul\":14066:14067   */\n      0x00\n        /* \"#utility.yul\":14062:14068   */\n      not\n        /* \"#utility.yul\":14058:14072   */\n      div\n        /* \"#utility.yul\":14055:14056   */\n      dup4\n        /* \"#utility.yul\":14052:14073   */\n      gt\n        /* \"#utility.yul\":14047:14048   */\n      dup3\n        /* \"#utility.yul\":14040:14049   */\n      iszero\n        /* \"#utility.yul\":14033:14050   */\n      iszero\n        /* \"#utility.yul\":14029:14074   */\n      and\n        /* \"#utility.yul\":14026:14028   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":14077:14095   */\n      tag_474\n      tag_446\n      jump\t// in\n    tag_474:\n      pop\n        /* \"#utility.yul\":14117:14126   */\n      mul\n      swap1\n        /* \"#utility.yul\":14016:14132   */\n      jump\t// out\n        /* \"#utility.yul\":14137:14262   */\n    tag_231:\n        /* \"#utility.yul\":14177:14181   */\n      0x00\n        /* \"#utility.yul\":14205:14206   */\n      dup3\n        /* \"#utility.yul\":14202:14203   */\n      dup3\n        /* \"#utility.yul\":14199:14207   */\n      lt\n        /* \"#utility.yul\":14196:14198   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":14210:14228   */\n      tag_477\n      tag_446\n      jump\t// in\n    tag_477:\n      pop\n        /* \"#utility.yul\":14247:14256   */\n      sub\n      swap1\n        /* \"#utility.yul\":14186:14262   */\n      jump\t// out\n        /* \"#utility.yul\":14267:14402   */\n    tag_311:\n        /* \"#utility.yul\":14306:14309   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":14327:14344   */\n      dup3\n      eq\n        /* \"#utility.yul\":14324:14326   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":14347:14365   */\n      tag_480\n      tag_446\n      jump\t// in\n    tag_480:\n      pop\n        /* \"#utility.yul\":14394:14395   */\n      0x01\n        /* \"#utility.yul\":14383:14396   */\n      add\n      swap1\n        /* \"#utility.yul\":14314:14402   */\n      jump\t// out\n        /* \"#utility.yul\":14407:14534   */\n    tag_446:\n        /* \"#utility.yul\":14468:14478   */\n      0x4e487b71\n        /* \"#utility.yul\":14463:14466   */\n      0xe0\n        /* \"#utility.yul\":14459:14479   */\n      shl\n        /* \"#utility.yul\":14456:14457   */\n      0x00\n        /* \"#utility.yul\":14449:14480   */\n      mstore\n        /* \"#utility.yul\":14499:14503   */\n      0x11\n        /* \"#utility.yul\":14496:14497   */\n      0x04\n        /* \"#utility.yul\":14489:14504   */\n      mstore\n        /* \"#utility.yul\":14523:14527   */\n      0x24\n        /* \"#utility.yul\":14520:14521   */\n      0x00\n        /* \"#utility.yul\":14513:14528   */\n      revert\n        /* \"#utility.yul\":14671:14798   */\n    tag_400:\n        /* \"#utility.yul\":14732:14742   */\n      0x4e487b71\n        /* \"#utility.yul\":14727:14730   */\n      0xe0\n        /* \"#utility.yul\":14723:14743   */\n      shl\n        /* \"#utility.yul\":14720:14721   */\n      0x00\n        /* \"#utility.yul\":14713:14744   */\n      mstore\n        /* \"#utility.yul\":14763:14767   */\n      0x41\n        /* \"#utility.yul\":14760:14761   */\n      0x04\n        /* \"#utility.yul\":14753:14768   */\n      mstore\n        /* \"#utility.yul\":14787:14791   */\n      0x24\n        /* \"#utility.yul\":14784:14785   */\n      0x00\n        /* \"#utility.yul\":14777:14792   */\n      revert\n        /* \"#utility.yul\":14803:14934   */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14878:14909   */\n      dup2\n      and\n        /* \"#utility.yul\":14868:14910   */\n      dup2\n      eq\n        /* \"#utility.yul\":14858:14860   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":14924:14925   */\n      0x00\n        /* \"#utility.yul\":14921:14922   */\n      dup1\n        /* \"#utility.yul\":14914:14926   */\n      revert\n\n    auxdata: 0xa2646970667358221220981d3d0b94b3f7fc86245107330a416181599af1b9259c798a187393fe60d8bd64736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2353": {
									"entryPoint": null,
									"id": 2353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2453": {
									"entryPoint": null,
									"id": 2453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_1783": {
									"entryPoint": 279,
									"id": 1783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_1886": {
									"entryPoint": null,
									"id": 1886,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1720": {
									"entryPoint": null,
									"id": 1720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2433": {
									"entryPoint": 165,
									"id": 2433,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2069": {
									"entryPoint": 247,
									"id": 2069,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260016000556200001433620000a5565b6019805473c778417e063141139fce010982780140aa0cd5ab6001600160a01b031990911617905562000069601b736ccb41eeda5a073076f3e7dc1614c185b5fa41ed620000f7602090811b620014f817901c565b5062000099734f0b12bbf40fc182559822a5b1db6d34dbc3e016601b620000f760201b620014f81790919060201c565b506014601a5562000169565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006200010e836001600160a01b03841662000117565b90505b92915050565b6000818152600183016020526040812054620001605750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000111565b50600062000111565b611b4480620001796000396000f3fe60806040526004361061012a5760003560e01c80638f1eae4c116100ab578063b6b55f251161006f578063b6b55f25146103e0578063cad5b0f7146103f3578063ce441b1814610418578063e2d3f4231461042d578063f2fde38b14610491578063f8b2cb4f146104b157600080fd5b80638f1eae4c1461030657806395661e7014610326578063ab33985a1461033b578063acfb235514610350578063ad5c4648146103c057600080fd5b806356c5f349116100f257806356c5f34914610273578063715018a6146102a0578063861faf5f146102b75780638da5cb5b146102bf5780638edf18e6146102f157600080fd5b806312e5d0b91461012f57806318856a2f146101645780631df4ccfc14610224578063200d2ed2146102485780633b5ef2ad1461025d575b600080fd5b34801561013b57600080fd5b50600b54600c5461014a919082565b604080519283526020830191909152015b60405180910390f35b34801561017057600080fd5b50600d54600e54600f546010546011546012546013546014546015546016546017546018546101b89b6001600160a01b039081169b81169a16989796959493929160ff16908c565b604080516001600160a01b039d8e1681529b8d1660208d015299909b16988a01989098526060890196909652608088019490945260a087019290925260c086015260e085015261010084015261012083015215156101408201526101608101919091526101800161015b565b34801561023057600080fd5b5061023a601d5481565b60405190815260200161015b565b34801561025457600080fd5b5061023a6104d9565b34801561026957600080fd5b5061023a601a5481565b34801561027f57600080fd5b5061023a61028e36600461172d565b60036020526000908152604090205481565b3480156102ac57600080fd5b506102b5610502565b005b6102b561056d565b3480156102cb57600080fd5b506001546001600160a01b03165b6040516001600160a01b03909116815260200161015b565b3480156102fd57600080fd5b506102b561059c565b34801561031257600080fd5b506102b5610321366004611751565b610827565b34801561033257600080fd5b506102b5610ba2565b34801561034757600080fd5b506102b5610d52565b34801561035c57600080fd5b5060045460055460065460075460085460095461038795949392919060ff8082169161010090041687565b6040805197885260208801969096529486019390935260608501919091526080840152151560a0830152151560c082015260e00161015b565b3480156103cc57600080fd5b506019546102d9906001600160a01b031681565b6102b56103ee366004611838565b610f19565b3480156103ff57600080fd5b506104086112e8565b604051901515815260200161015b565b34801561042457600080fd5b506102b56112fa565b34801561043957600080fd5b5061047161044836600461172d565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b60408051948552602085019390935291830152606082015260800161015b565b34801561049d57600080fd5b506102b56104ac36600461172d565b611430565b3480156104bd57600080fd5b5061023a6104cc36600461172d565b6001600160a01b03163190565b6011546000904210156104ec5750600090565b6012544211156104fc5750600290565b50600190565b6001546001600160a01b031633146105615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61056b6000611516565b565b60405133904780156108fc02916000818181858888f19350505050158015610599573d6000803e3d6000fd5b50565b600d546001600160a01b0316336001600160a01b0316146105f45760405162461bcd60e51b815260206004820152601260248201527127b7363c90383932b9b0b6329037bbb732b960711b6044820152606401610558565b600260005414156106175760405162461bcd60e51b815260040161055890611920565b600260005560095460ff161561066f5760405162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e0000006044820152606401610558565b600954610100900460ff16156106c75760405162461bcd60e51b815260206004820152601e60248201527f4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e00006044820152606401610558565b600e546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561070b57600080fd5b505afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107439190611851565b6009805460ff191660011790556000601855600e54600d5460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350479291169063a9059cbb90604401602060405180830381600087803b1580156107aa57600080fd5b505af11580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190611816565b50600d546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561081d573d6000803e3d6000fd5b5050600160005550565b600d80546001600160a01b038087166001600160a01b031992831617909255600e80548684169083168117909155600f8054938616939092169290921790556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b15801561089c57600080fd5b505afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190611851565b6108df90600a6119d4565b81516108eb9190611a7c565b6010556020808201516011556040808301516012556060830151601355600f54815163313ce56760e01b815291516001600160a01b039091169263313ce5679260048082019391829003018186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190611851565b61098990600a6119d4565b60808201516109989190611a7c565b60145560a081015160155560c0810151601655600f546040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b1580156109f057600080fd5b505afa158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190611851565b610a3390600a6119d4565b60e0820151610a429190611a7c565b600b55600f546040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b158015610a8a57600080fd5b505afa158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190611851565b610acd90600a6119d4565b610100820151610add9190611a7c565b600c55600f546019546017805460ff19166001600160a01b0392831692909316918214929092179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b158015610b3d57600080fd5b505afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611851565b610b8090600a6119d4565b600b54601054610b8f91611568565b610b99919061196f565b60185550505050565b60026000541415610bc55760405162461bcd60e51b815260040161055890611920565b6002600055610bd26104d9565b600114610c105760405162461bcd60e51b815260206004820152600c60248201526b53616c65207375636573737360a01b6044820152606401610558565b600754600454600091610c2291611a9b565b11610c3f5760405162461bcd60e51b8152600401610558906118a5565b3360009081526002602052604090208054610caa5760405162461bcd60e51b815260206004820152602560248201527f596f7520726566756e6420616c6c206f722068617665206e6f7420626f7567686044820152641d081e595d60da1b6064820152608401610558565b8054601554600091610cd5916103e891610ccf91610cc9908490611574565b90611568565b90611580565b8254909150610ce5908290611a9b565b601d6000828254610cf69190611957565b909155505060078054829190600090610d10908490611957565b9091555050600080835560018301819055426002840155604051339183156108fc02918491818181858888f1935050505015801561081d573d6000803e3d6000fd5b60026000541415610d755760405162461bcd60e51b815260040161055890611920565b6002600055610d826104d9565b600114610dc05760405162461bcd60e51b815260206004820152600c60248201526b53616c65207375636573737360a01b6044820152606401610558565b600654600554600091610dd291611a9b565b11610def5760405162461bcd60e51b8152600401610558906118a5565b3360009081526002602052604090206003810154600182015411610e255760405162461bcd60e51b8152600401610558906118dc565b6000610e4f6103e8610ccf8460010154610cc9600d600901546103e861157490919063ffffffff16565b90508060046002016000828254610e669190611957565b909155505060188054829190600090610e80908490611a9b565b909155505060008083556001830155426002830155600e5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610ee157600080fd5b505af1158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190611816565b60026000541415610f3c5760405162461bcd60e51b815260040161055890611920565b600260008181553381526020919091526040812090829081906103e834831115610fa85760405162461bcd60e51b815260206004820152601a60248201527f506c656173652070726f76696465206e617669746520636f696e0000000000006044820152606401610558565b601354831015610fed5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b6044820152606401610558565b6014548311156110305760405162461bcd60e51b815260206004820152600e60248201526d4f766572666c6f772076616c756560901b6044820152606401610558565b6110386112e8565b6110685761105981610ccf85610cc9601a548661157490919063ffffffff16565b92506110658385611a9b565b91505b845460145460009161107991611a9b565b60045460185491925060009161108f9190611a9b565b905060008183116110a057826110a2565b815b9050808611156110e65760405162461bcd60e51b815260206004820152600f60248201526e53616c65206973207375636365737360881b6044820152606401610558565b600061118d600d60020160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561113c57600080fd5b505afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111749190611851565b61117f90600a6119d4565b601054610ccf908a90611568565b9050878960000160008282546111a39190611957565b92505081905550808960010160008282546111be9190611957565b9091555050600480548891906000906111d8908490611957565b9091555050600580548291906000906111f2908490611957565b90915550506008805490600061120783611ab2565b9091555050336000908152600360205260408120805488929061122b908490611957565b9250508190555085601d60008282546112449190611957565b909155505060175460ff1680156112645750346112618789611957565b11155b156112ac57336108fc876112788a34611a9b565b6112829190611a9b565b6040518115909202916000818181858888f193505050501580156112aa573d6000803e3d6000fd5b505b60175460ff166112d757600f546112d7906001600160a01b031633306112d28a8c611957565b61158c565b505060016000555050505050505050565b60006112f5601b336116bc565b905090565b60065460055460009161130c91611a9b565b116113295760405162461bcd60e51b8152600401610558906118a5565b336000908152600260205260409020600381015460018201541161135f5760405162461bcd60e51b8152600401610558906118dc565b600181015460068054600090611376908490611957565b9091555050600181015460188054600090611392908490611a9b565b9091555050600080825560018201819055426002830155600e5460405163a9059cbb60e01b815233600482015260248101929092526001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156113f457600080fd5b505af1158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c9190611816565b5050565b6001546001600160a01b0316331461148a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610558565b6001600160a01b0381166114ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610558565b61059981611516565b600061150d836001600160a01b0384166116de565b90505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061150d8284611a7c565b600061150d8284611a9b565b600061150d828461196f565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916115f0919061186a565b6000604051808303816000865af19150503d806000811461162d576040519150601f19603f3d011682016040523d82523d6000602084013e611632565b606091505b509150915081801561165c57508051158061165c57508080602001905181019061165c9190611816565b6116b45760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608401610558565b505050505050565b6001600160a01b0381166000908152600183016020526040812054151561150d565b600081815260018301602052604081205461172557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611510565b506000611510565b60006020828403121561173f57600080fd5b813561174a81611af9565b9392505050565b60008060008061018080868803121561176957600080fd5b853561177481611af9565b945060208681013561178581611af9565b9450604087013561179581611af9565b9350607f870188136117a657600080fd5b604051610120810181811067ffffffffffffffff821117156117ca576117ca611ae3565b6040528060608901848a018b10156117e157600080fd5b600094505b60098510156118055780358252600194909401939083019083016117e6565b505080935050505092959194509250565b60006020828403121561182857600080fd5b8151801515811461174a57600080fd5b60006020828403121561184a57600080fd5b5035919050565b60006020828403121561186357600080fd5b5051919050565b6000825160005b8181101561188b5760208186018101518583015201611871565b8181111561189a576000828501525b509190910192915050565b6020808252601b908201527f416c6c20746f6b656e20686173206265656e2077697468647261770000000000604082015260600190565b60208082526024908201527f596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874604082015263081e595d60e21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000821982111561196a5761196a611acd565b500190565b60008261198c57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156119cc5781600019048211156119b2576119b2611acd565b808516156119bf57918102915b93841c9390800290611996565b509250929050565b600061150d83836000826119ea57506001611510565b816119f757506000611510565b8160018114611a0d5760028114611a1757611a33565b6001915050611510565b60ff841115611a2857611a28611acd565b50506001821b611510565b5060208310610133831016604e8410600b8410161715611a56575081810a611510565b611a608383611991565b8060001904821115611a7457611a74611acd565b029392505050565b6000816000190483118215151615611a9657611a96611acd565b500290565b600082821015611aad57611aad611acd565b500390565b6000600019821415611ac657611ac6611acd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461059957600080fdfea2646970667358221220981d3d0b94b3f7fc86245107330a416181599af1b9259c798a187393fe60d8bd64736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH3 0x14 CALLER PUSH3 0xA5 JUMP JUMPDEST PUSH1 0x19 DUP1 SLOAD PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH3 0x69 PUSH1 0x1B PUSH20 0x6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED PUSH3 0xF7 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x14F8 OR SWAP1 SHR JUMP JUMPDEST POP PUSH3 0x99 PUSH20 0x4F0B12BBF40FC182559822A5B1DB6D34DBC3E016 PUSH1 0x1B PUSH3 0xF7 PUSH1 0x20 SHL PUSH3 0x14F8 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x14 PUSH1 0x1A SSTORE PUSH3 0x169 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x117 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x160 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x111 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x111 JUMP JUMPDEST PUSH2 0x1B44 DUP1 PUSH3 0x179 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F1EAE4C GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xCE441B18 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x95661E70 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xAB33985A EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56C5F349 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x8EDF18E6 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12E5D0B9 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x18856A2F EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x3B5EF2AD EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x14A SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH1 0x18 SLOAD PUSH2 0x1B8 SWAP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP12 DUP2 AND SWAP11 AND SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND DUP2 MSTORE SWAP12 DUP14 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP12 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x4D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x56D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xBA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xD52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x387 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x19 SLOAD PUSH2 0x2D9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x12FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x471 PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x4EC JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP GT ISZERO PUSH2 0x4FC JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x0 PUSH2 0x1516 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x27B7363C90383932B9B0B6329037BBB732B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220636C61696D20746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220726566756E6420746F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x18 SSTORE PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SELFBALANCE SWAP3 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xE DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP1 SLOAD SWAP4 DUP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x8DF SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xF SLOAD DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x989 SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x998 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x15 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x16 SSTORE PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xA33 SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xACD SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xF SLOAD PUSH1 0x19 SLOAD PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP4 AND SWAP2 DUP3 EQ SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xB80 SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x10 SLOAD PUSH2 0xB8F SWAP2 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x18 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xBD2 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C652073756365737373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xC22 SWAP2 PUSH2 0x1A9B JUMP JUMPDEST GT PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520726566756E6420616C6C206F722068617665206E6F7420626F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D081E595D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x15 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xCD5 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0xCCF SWAP2 PUSH2 0xCC9 SWAP1 DUP5 SWAP1 PUSH2 0x1574 JUMP JUMPDEST SWAP1 PUSH2 0x1568 JUMP JUMPDEST SWAP1 PUSH2 0x1580 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xCE5 SWAP1 DUP3 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x1D PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD10 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xD82 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0xDC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C652073756365737373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xDD2 SWAP2 PUSH2 0x1A9B JUMP JUMPDEST GT PUSH2 0xDEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4F PUSH2 0x3E8 PUSH2 0xCCF DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCC9 PUSH1 0xD PUSH1 0x9 ADD SLOAD PUSH2 0x3E8 PUSH2 0x1574 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE80 SWAP1 DUP5 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x3E8 CALLVALUE DUP4 GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C656173652070726F76696465206E617669746520636F696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP4 LT ISZERO PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP4 GT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F766572666C6F772076616C7565 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x1038 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH2 0x1059 DUP2 PUSH2 0xCCF DUP6 PUSH2 0xCC9 PUSH1 0x1A SLOAD DUP7 PUSH2 0x1574 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x1065 DUP4 DUP6 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 SLOAD PUSH1 0x14 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1079 SWAP2 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x18 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x10A0 JUMPI DUP3 PUSH2 0x10A2 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x53616C652069732073756363657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118D PUSH1 0xD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x117F SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0xCCF SWAP1 DUP11 SWAP1 PUSH2 0x1568 JUMP JUMPDEST SWAP1 POP DUP8 DUP10 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP10 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11BE SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD DUP9 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11D8 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11F2 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1207 DUP4 PUSH2 0x1AB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x122B SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1D PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x17 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1264 JUMPI POP CALLVALUE PUSH2 0x1261 DUP8 DUP10 PUSH2 0x1957 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x12AC JUMPI CALLER PUSH2 0x8FC DUP8 PUSH2 0x1278 DUP11 CALLVALUE PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x1282 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND PUSH2 0x12D7 JUMPI PUSH1 0xF SLOAD PUSH2 0x12D7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS PUSH2 0x12D2 DUP11 DUP13 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x158C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F5 PUSH1 0x1B CALLER PUSH2 0x16BC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x130C SWAP2 PUSH2 0x1A9B JUMP JUMPDEST GT PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1376 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x18 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1392 SWAP1 DUP5 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1408 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x148A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x599 DUP2 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x16DE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 DUP5 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 DUP5 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 DUP5 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x165C JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x165C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x165C SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x150D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1725 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1510 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x174A DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1774 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x1785 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1795 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x17A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17CA PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x1805 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x17E6 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x188B JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1871 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E20686173206265656E2077697468647261770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520636C61696D20616C6C206F722068617665206E6F7420626F75676874 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x81E595D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x196A JUMPI PUSH2 0x196A PUSH2 0x1ACD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x198C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x19CC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x19B2 JUMPI PUSH2 0x19B2 PUSH2 0x1ACD JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x19BF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1996 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x19EA JUMPI POP PUSH1 0x1 PUSH2 0x1510 JUMP JUMPDEST DUP2 PUSH2 0x19F7 JUMPI POP PUSH1 0x0 PUSH2 0x1510 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A0D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A17 JUMPI PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1510 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A28 JUMPI PUSH2 0x1A28 PUSH2 0x1ACD JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1510 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1A56 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x1A60 DUP4 DUP4 PUSH2 0x1991 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A74 PUSH2 0x1ACD JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A96 PUSH2 0x1ACD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAD PUSH2 0x1ACD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1AC6 JUMPI PUSH2 0x1AC6 PUSH2 0x1ACD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SAR RETURNDATASIZE SIGNEXTEND SWAP5 0xB3 0xF7 0xFC DUP7 0x24 MLOAD SMOD CALLER EXP COINBASE PUSH2 0x8159 SWAP11 CALL 0xB9 0x25 SWAP13 PUSH26 0x8A187393FE60D8BD64736F6C6343000805003300000000000000 ",
							"sourceMap": "370:9469:3:-:0;;;1734:1:7;1845:7;:22;942:32:6;736:10:4;942:18:6;:32::i;:::-;2246:4:3;:56;;2259:42;-1:-1:-1;;;;;;2246:56:3;;;;;;2313:54;:6;2324:42;2313:10;;;;;;;:54;;:::i;:::-;;2378;2389:42;2378:6;:10;;;;;;:54;;;;:::i;:::-;-1:-1:-1;2455:2:3;2443:9;:14;370:9469;;2333:191:6;2426:6;;;-1:-1:-1;;;;;2443:17:6;;;-1:-1:-1;;;;;;2443:17:6;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2396:128;2333:191;:::o;8259:152:5:-;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:5;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2174:414::-;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:5;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:5;2557:12;;370:9469:3;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_788": {
									"entryPoint": null,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_1783": {
									"entryPoint": 5854,
									"id": 1783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_1886": {
									"entryPoint": null,
									"id": 1886,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1720": {
									"entryPoint": null,
									"id": 1720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2433": {
									"entryPoint": 5398,
									"id": 2433,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2069": {
									"entryPoint": 5368,
									"id": 2069,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@backToken_1707": {
									"entryPoint": 1389,
									"id": 1707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyerInfo_772": {
									"entryPoint": null,
									"id": 772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkAdminAddress_1093": {
									"entryPoint": 4840,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contains_2123": {
									"entryPoint": 5820,
									"id": 2123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1318": {
									"entryPoint": 3865,
									"id": 1318,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_2695": {
									"entryPoint": 5504,
									"id": 2695,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeAnyone_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1690": {
									"entryPoint": null,
									"id": 1690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialSaleInfor_1053": {
									"entryPoint": 2087,
									"id": 1053,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mul_2680": {
									"entryPoint": 5480,
									"id": 2680,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ownerClaimAndRefundToken_1603": {
									"entryPoint": 1436,
									"id": 1603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_2362": {
									"entryPoint": null,
									"id": 2362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleStatus_779": {
									"entryPoint": null,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_2390": {
									"entryPoint": 1282,
									"id": 2390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2921": {
									"entryPoint": 5516,
									"id": 2921,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@saleInfor_785": {
									"entryPoint": null,
									"id": 785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleTotalSupply_782": {
									"entryPoint": null,
									"id": 782,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@status_1081": {
									"entryPoint": 1241,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_2665": {
									"entryPoint": 5492,
									"id": 2665,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalFee_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_2413": {
									"entryPoint": 5168,
									"id": 2413,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userClaimEmergency_1424": {
									"entryPoint": 3410,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userClaimWhenSaleSuccess_1679": {
									"entryPoint": 4858,
									"id": 1679,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userFee_776": {
									"entryPoint": null,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRefundEmergency_1529": {
									"entryPoint": 2978,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_contract$_ERC20_$585t_contract$_ERC20_$585t_array$_t_uint256_$9_memory_ptr": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_contract$_ERC20_$585_t_contract$_ERC20_$585_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 13,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$663__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14936:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nodeType": "YulIf",
															"src": "94:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:247:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:1083:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "464:3:10",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "458:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "521:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "524:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "487:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "496:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "483:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "508:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "479:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:32:10"
															},
															"nodeType": "YulIf",
															"src": "476:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "537:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "550:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "541:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "607:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "582:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "582:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "622:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "632:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "646:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "656:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "650:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "667:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "710:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "695:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "695:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "682:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "671:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "748:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "723:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "723:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "765:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "775:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "834:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "806:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "795:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "872:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "847:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "889:17:10",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "899:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "960:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "969:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "972:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "962:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "962:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "962:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "944:3:10",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:19:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:41:10"
															},
															"nodeType": "YulIf",
															"src": "915:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "985:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1005:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "999:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "999:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "989:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1017:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1047:3:10",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:16:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1021:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1126:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1128:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1128:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1128:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1069:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1081:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1105:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1117:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1102:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1063:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:62:10"
															},
															"nodeType": "YulIf",
															"src": "1060:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1168:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1157:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1157:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1157:22:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1188:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1199:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1192:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1229:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:18:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1218:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1287:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1296:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1299:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1289:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1289:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1289:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1262:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1273:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1258:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1258:18:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1278:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1255:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:31:10"
															},
															"nodeType": "YulIf",
															"src": "1252:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1312:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1321:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1316:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1378:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1399:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1417:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1404:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1404:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1392:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1392:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1392:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1435:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1446:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1451:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1442:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1442:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1435:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1467:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1478:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1483:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1474:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1467:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1342:1:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1345:4:10",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1339:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:11:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1351:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1353:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1362:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1358:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1353:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1335:3:10",
																"statements": []
															},
															"src": "1331:165:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1505:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1515:6:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_ERC20_$585t_contract$_ERC20_$585t_array$_t_uint256_$9_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "386:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "397:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "409:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "417:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "425:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "433:6:10",
														"type": ""
													}
												],
												"src": "266:1261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1610:199:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1656:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1665:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1658:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1658:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1658:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1631:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1627:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1652:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:32:10"
															},
															"nodeType": "YulIf",
															"src": "1620:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1681:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1694:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1685:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1763:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1772:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1775:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1732:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1753:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1746:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1746:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1739:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1739:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1729:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1729:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:40:10"
															},
															"nodeType": "YulIf",
															"src": "1719:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1788:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1798:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1576:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1587:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1599:6:10",
														"type": ""
													}
												],
												"src": "1532:277:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1930:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1939:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1942:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1932:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1932:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1932:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1905:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1901:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1901:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1926:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:32:10"
															},
															"nodeType": "YulIf",
															"src": "1894:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1955:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1978:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1965:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1850:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1861:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1873:6:10",
														"type": ""
													}
												],
												"src": "1814:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:103:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2126:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2135:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2138:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2128:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2128:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2128:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2101:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2110:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:32:10"
															},
															"nodeType": "YulIf",
															"src": "2090:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2151:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2161:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2151:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2046:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2057:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2069:6:10",
														"type": ""
													}
												],
												"src": "1999:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2325:289:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2335:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2339:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2371:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2380:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2375:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2442:77:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2467:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2472:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2463:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2463:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2490:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2498:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2486:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2486:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2502:4:10",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2482:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2482:25:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2476:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2476:32:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2456:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2456:53:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2456:53:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2401:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2404:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2398:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2412:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2414:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2423:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2419:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2414:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2394:3:10",
																"statements": []
															},
															"src": "2390:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2545:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2558:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2563:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2554:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2554:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2547:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2547:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2534:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2537:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:13:10"
															},
															"nodeType": "YulIf",
															"src": "2528:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2585:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2596:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2601:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2585:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2301:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2317:3:10",
														"type": ""
													}
												],
												"src": "2188:426:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2730:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2742:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2730:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2772:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2803:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2808:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2799:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2799:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2812:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2795:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2795:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2783:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2765:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2765:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2689:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2700:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2711:4:10",
														"type": ""
													}
												],
												"src": "2619:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3274:641:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3284:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3296:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3307:3:10",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3284:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3320:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3338:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3343:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3334:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3324:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3365:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3388:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3376:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3376:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3358:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3423:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3432:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3440:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3428:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3464:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3475:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3460:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3460:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3484:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3492:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3480:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3453:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3453:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3527:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3532:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3505:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3559:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3570:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3555:19:10"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3548:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3548:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3548:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3603:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3614:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3599:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3599:19:10"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3620:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3592:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3658:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:19:10"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3664:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3636:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3691:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:19:10"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "3708:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3680:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3735:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3746:3:10",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:19:10"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "3752:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3779:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3790:3:10",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3775:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3775:19:10"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "3796:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3768:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3823:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3834:3:10",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3819:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value10",
																						"nodeType": "YulIdentifier",
																						"src": "3854:7:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3847:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3847:15:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3840:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3840:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3812:52:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3895:3:10",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3880:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3880:19:10"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "3901:7:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3873:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_ERC20_$585_t_contract$_ERC20_$585_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3153:9:10",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "3164:7:10",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "3173:7:10",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "3182:6:10",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "3190:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3198:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3206:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3214:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3222:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3230:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3238:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3246:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3254:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3265:4:10",
														"type": ""
													}
												],
												"src": "2827:1088:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4057:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4079:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4075:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4067:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4109:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4124:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4140:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4145:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4136:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4136:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4149:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4132:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4132:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4102:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4102:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4102:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4189:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4018:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4029:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4037:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4048:4:10",
														"type": ""
													}
												],
												"src": "3920:282:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4364:218:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4374:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4386:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4382:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4374:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4409:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4427:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4423:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4413:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4454:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4469:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4477:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4447:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4512:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4497:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4521:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4529:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4517:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4517:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4490:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4490:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4553:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4564:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4569:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4542:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4542:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4317:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4328:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4336:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4344:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4355:4:10",
														"type": ""
													}
												],
												"src": "4207:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4716:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4726:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4738:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4726:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4768:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4783:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4799:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4804:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4795:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4795:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4808:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4779:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4761:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4848:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4677:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4688:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4707:4:10",
														"type": ""
													}
												],
												"src": "4587:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4961:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4971:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4983:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4994:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4971:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5013:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5038:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5031:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5031:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5024:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5006:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5006:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4930:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4941:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4952:4:10",
														"type": ""
													}
												],
												"src": "4866:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5173:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5183:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5191:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5191:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5183:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5225:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5240:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5256:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5261:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5252:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5252:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5265:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5248:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5248:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5236:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$663__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5142:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5153:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5164:4:10",
														"type": ""
													}
												],
												"src": "5058:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5454:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5471:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5464:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5505:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5516:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5501:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5501:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5521:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5494:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5494:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5544:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5555:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5540:18:10"
																	},
																	{
																		"hexValue": "506c656173652070726f76696465206e617669746520636f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5560:28:10",
																		"type": "",
																		"value": "Please provide navite coin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5533:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5533:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5598:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5610:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5621:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5606:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5598:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5431:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5445:4:10",
														"type": ""
													}
												],
												"src": "5280:350:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5809:177:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5826:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5819:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5819:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5871:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5849:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5899:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5910:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:18:10"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5915:29:10",
																		"type": "",
																		"value": "All token has been withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5888:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5954:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5966:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5977:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5962:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5954:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5786:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5800:4:10",
														"type": ""
													}
												],
												"src": "5635:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6165:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6182:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6193:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6175:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6216:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6227:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6212:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6232:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6205:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6255:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6266:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6251:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6271:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6244:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6244:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6326:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6337:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6322:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6342:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6360:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6372:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6383:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6368:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6368:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6360:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6142:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6156:4:10",
														"type": ""
													}
												],
												"src": "5991:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6572:180:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6589:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6600:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6582:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6623:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6634:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6619:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6619:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6612:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6612:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6662:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6673:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6658:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6658:18:10"
																	},
																	{
																		"hexValue": "4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6678:32:10",
																		"type": "",
																		"value": "Nothing for owner refund token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6651:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:60:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6651:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6720:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6732:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6720:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6549:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6563:4:10",
														"type": ""
													}
												],
												"src": "6398:354:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6931:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6948:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6959:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6941:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6941:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6982:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6993:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6978:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6998:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6971:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6971:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:18:10"
																	},
																	{
																		"hexValue": "596f7520726566756e6420616c6c206f722068617665206e6f7420626f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7037:34:10",
																		"type": "",
																		"value": "You refund all or have not bough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7010:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7010:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7010:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7092:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7103:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7088:18:10"
																	},
																	{
																		"hexValue": "7420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7108:7:10",
																		"type": "",
																		"value": "t yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7081:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7081:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7125:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7137:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7148:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7125:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6908:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6922:4:10",
														"type": ""
													}
												],
												"src": "6757:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7337:164:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7354:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7365:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7347:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7347:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7388:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7399:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7384:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7404:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7377:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7377:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7427:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7438:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7423:18:10"
																	},
																	{
																		"hexValue": "4f766572666c6f772076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7443:16:10",
																		"type": "",
																		"value": "Overflow value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7416:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7416:44:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7469:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7314:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7328:4:10",
														"type": ""
													}
												],
												"src": "7163:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7680:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7697:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7708:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7690:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7690:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7742:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7727:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7747:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7720:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7720:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7770:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7781:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7766:18:10"
																	},
																	{
																		"hexValue": "596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7786:34:10",
																		"type": "",
																		"value": "You claim all or have not bought"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7759:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7841:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7852:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7837:18:10"
																	},
																	{
																		"hexValue": "20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7857:6:10",
																		"type": "",
																		"value": " yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7830:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7885:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7896:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7881:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7873:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7657:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7671:4:10",
														"type": ""
													}
												],
												"src": "7506:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8085:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8102:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8113:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8095:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8147:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8132:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8152:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8125:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8125:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8186:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8171:18:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8191:18:10",
																		"type": "",
																		"value": "Not enough value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8164:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8164:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8219:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8231:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8227:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8227:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8219:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8062:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8076:4:10",
														"type": ""
													}
												],
												"src": "7911:340:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8430:162:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8447:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8458:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8440:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8440:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8440:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8481:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8492:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8477:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8497:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8470:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8470:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8520:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8531:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8516:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8516:18:10"
																	},
																	{
																		"hexValue": "53616c652073756365737373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8536:14:10",
																		"type": "",
																		"value": "Sale sucesss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8509:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8560:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8572:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8583:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8568:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8568:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8560:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8407:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8421:4:10",
														"type": ""
													}
												],
												"src": "8256:336:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8771:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8788:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8781:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8781:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8781:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8822:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8833:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8818:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8838:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8811:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:18:10"
																	},
																	{
																		"hexValue": "4f6e6c792070726573616c65206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8877:20:10",
																		"type": "",
																		"value": "Only presale owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8907:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8919:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8930:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8915:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8915:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8907:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8748:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8762:4:10",
														"type": ""
													}
												],
												"src": "8597:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9118:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9135:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9180:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9165:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9185:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9158:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9158:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9219:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9204:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9224:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9197:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9197:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9268:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9280:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9291:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9276:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9276:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9268:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9095:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9109:4:10",
														"type": ""
													}
												],
												"src": "8944:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9479:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9496:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9489:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9541:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9526:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9546:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9519:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9519:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9519:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9569:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9580:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9565:18:10"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9585:34:10",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9558:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9558:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9651:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9636:18:10"
																	},
																	{
																		"hexValue": "494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9656:6:10",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9629:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9629:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9629:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9672:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9684:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9695:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9672:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9456:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9470:4:10",
														"type": ""
													}
												],
												"src": "9305:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9884:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9901:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9912:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9894:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9935:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9946:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9931:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9931:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9951:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9924:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9924:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9974:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9985:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9970:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9970:18:10"
																	},
																	{
																		"hexValue": "4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9990:31:10",
																		"type": "",
																		"value": "Nothing for owner claim token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9963:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9963:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9963:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10031:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10043:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10054:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10039:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10031:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9861:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9875:4:10",
														"type": ""
													}
												],
												"src": "9710:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10242:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10259:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10252:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10293:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10304:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10289:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10289:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10309:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10282:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10282:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10282:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10332:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10343:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10328:18:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10348:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10321:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10321:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10391:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10403:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10414:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10391:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10219:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10233:4:10",
														"type": ""
													}
												],
												"src": "10068:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10602:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10619:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10630:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10612:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10612:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10612:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10653:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10664:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10649:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10669:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10642:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10692:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10703:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10688:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10688:18:10"
																	},
																	{
																		"hexValue": "53616c652069732073756363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10708:17:10",
																		"type": "",
																		"value": "Sale is success"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10681:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10735:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10747:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10758:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10743:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10743:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10735:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10579:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10593:4:10",
														"type": ""
													}
												],
												"src": "10428:339:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10873:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10883:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10895:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10906:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10891:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10891:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10883:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10925:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10936:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10918:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10918:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10842:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10853:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10864:4:10",
														"type": ""
													}
												],
												"src": "10772:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11083:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11093:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11105:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11116:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11101:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11101:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11093:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11135:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11146:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11128:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11128:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11173:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11184:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11169:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11169:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11189:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11162:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11162:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11044:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11055:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11063:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11074:4:10",
														"type": ""
													}
												],
												"src": "10954:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11402:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11414:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11425:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11410:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11410:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11402:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11445:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11456:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11438:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11438:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11438:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11483:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11494:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11479:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11499:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11472:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11472:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11472:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11526:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11537:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11522:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11542:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11515:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11515:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11515:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11569:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11580:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11565:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11585:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11558:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11558:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11337:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11348:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11356:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11364:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11372:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11383:4:10",
														"type": ""
													}
												],
												"src": "11207:391:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11860:370:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11870:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11882:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11893:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11878:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11870:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11913:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11924:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11906:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11906:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11906:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11962:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11947:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11947:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11967:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11940:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11994:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12005:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11990:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11990:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12010:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11983:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11983:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11983:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12037:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12048:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12033:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12033:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12053:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12026:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12026:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12080:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12091:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12076:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12076:19:10"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12097:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12069:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12069:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12124:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12135:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12120:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12120:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "12155:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12148:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12148:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12141:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12141:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12113:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12113:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12184:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12195:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12180:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12180:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value6",
																						"nodeType": "YulIdentifier",
																						"src": "12215:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12208:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12208:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12201:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12201:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12173:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12173:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12173:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11781:9:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "11792:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11800:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11808:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11816:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11824:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11832:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11840:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11851:4:10",
														"type": ""
													}
												],
												"src": "11603:627:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12283:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12310:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12312:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12312:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12312:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12299:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12306:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12302:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12302:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12296:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:13:10"
															},
															"nodeType": "YulIf",
															"src": "12293:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12341:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12352:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12355:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12348:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12341:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12266:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12269:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12275:3:10",
														"type": ""
													}
												],
												"src": "12235:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12414:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12445:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12466:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12473:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12478:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12469:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12469:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12459:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12459:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12459:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12510:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12513:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12503:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12503:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12503:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12538:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12541:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12531:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12531:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12531:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12434:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12427:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12427:9:10"
															},
															"nodeType": "YulIf",
															"src": "12424:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12565:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12574:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12577:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12570:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12565:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12399:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12402:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12408:1:10",
														"type": ""
													}
												],
												"src": "12368:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12654:358:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12664:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12679:1:10",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "12668:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12689:16:10",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "12698:7:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12689:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12714:13:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "12722:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "12714:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12778:228:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12823:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "12825:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12825:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12825:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12798:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12812:1:10",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "12808:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12808:6:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "12816:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "12804:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12804:17:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12795:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12795:27:10"
																		},
																		"nodeType": "YulIf",
																		"src": "12792:2:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12884:29:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12886:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "12899:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "12906:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "12895:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12895:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "12886:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12865:8:10"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "12875:7:10"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12861:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12861:22:10"
																		},
																		"nodeType": "YulIf",
																		"src": "12858:2:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12926:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12938:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12944:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "12934:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12934:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "12926:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12962:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "12978:7:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12987:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "12974:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12974:22:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "12962:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12747:8:10"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "12757:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12744:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12744:21:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12766:3:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12740:3:10",
																"statements": []
															},
															"src": "12736:270:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "12618:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12625:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12638:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12645:4:10",
														"type": ""
													}
												],
												"src": "12590:422:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13087:61:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13097:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13127:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13133:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "13106:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13106:36:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13097:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "13058:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "13064:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "13077:5:10",
														"type": ""
													}
												],
												"src": "13017:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13212:747:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13250:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13264:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13273:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13264:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13287:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13232:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13225:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13225:16:10"
															},
															"nodeType": "YulIf",
															"src": "13222:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13335:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13349:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13358:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13349:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13372:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13321:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13314:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13314:12:10"
															},
															"nodeType": "YulIf",
															"src": "13311:2:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13423:52:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "13437:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13446:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "13437:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "13460:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13416:59:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13421:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13491:123:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13526:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "13528:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13528:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13528:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "13511:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13521:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "13508:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13508:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "13505:2:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "13561:25:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "13574:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13584:1:10",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13570:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13570:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "13561:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "13599:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13484:130:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "13403:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "13396:218:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13712:70:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13726:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13739:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13745:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "13735:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13735:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13726:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13767:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "13636:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13642:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13633:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13633:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13650:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13660:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13647:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13647:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13629:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13629:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "13673:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13679:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13670:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13670:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13688:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13698:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13685:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13685:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13666:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13666:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13626:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13626:77:10"
															},
															"nodeType": "YulIf",
															"src": "13623:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13791:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13833:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13839:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "13814:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13814:34:10"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "13795:7:10",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "13804:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13893:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13895:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13895:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13895:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "13863:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13880:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "13876:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13876:6:10"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "13884:6:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "13872:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13872:19:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13860:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13860:32:10"
															},
															"nodeType": "YulIf",
															"src": "13857:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13924:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "13937:7:10"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "13946:6:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13933:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13933:20:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13924:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "13183:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "13189:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "13202:5:10",
														"type": ""
													}
												],
												"src": "13153:806:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14016:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14075:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14077:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14077:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14077:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14047:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14040:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14040:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14033:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14033:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14055:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14066:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "14062:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14062:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14070:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14058:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14058:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14052:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14052:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14029:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14029:45:10"
															},
															"nodeType": "YulIf",
															"src": "14026:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14106:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14121:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14124:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14117:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14106:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13995:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13998:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14004:7:10",
														"type": ""
													}
												],
												"src": "13964:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14186:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14208:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14210:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14210:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14210:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14202:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14205:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14199:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14199:8:10"
															},
															"nodeType": "YulIf",
															"src": "14196:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14239:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14251:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14254:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14247:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14239:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14168:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14171:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14177:4:10",
														"type": ""
													}
												],
												"src": "14137:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14314:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14345:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14347:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14347:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14347:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14330:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14341:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14337:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14327:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14327:17:10"
															},
															"nodeType": "YulIf",
															"src": "14324:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14376:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14387:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14394:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14383:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14376:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14296:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14306:3:10",
														"type": ""
													}
												],
												"src": "14267:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14439:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14456:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14463:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14468:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14459:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14459:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14449:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14449:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14449:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14496:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14489:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14489:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14520:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14523:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14513:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14513:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14407:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14571:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14588:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14595:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14600:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14591:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14591:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14581:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14581:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14581:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14628:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14631:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14621:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14621:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14621:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14652:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14655:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14645:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14645:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14645:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14539:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14703:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14720:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14727:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14732:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14723:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14713:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14713:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14760:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14763:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14753:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14753:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14753:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14784:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14787:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14777:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14777:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14777:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14671:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14848:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14912:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14921:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14924:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14914:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14914:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14914:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14871:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14882:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14897:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14902:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "14893:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14893:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14906:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14889:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14889:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14878:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14878:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14868:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:50:10"
															},
															"nodeType": "YulIf",
															"src": "14858:2:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14837:5:10",
														"type": ""
													}
												],
												"src": "14803:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_ERC20_$585t_contract$_ERC20_$585t_array$_t_uint256_$9_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := 384\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _2 := 32\n        let value_1 := calldataload(add(headStart, _2))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        if gt(add(headStart, _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_ERC20_$585_t_contract$_ERC20_$585_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 384)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), iszero(iszero(value10)))\n        mstore(add(headStart, 352), value11)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$663__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Please provide navite coin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"All token has been withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Nothing for owner refund token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"You refund all or have not bough\")\n        mstore(add(headStart, 96), \"t yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Overflow value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"You claim all or have not bought\")\n        mstore(add(headStart, 96), \" yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not enough value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Sale sucesss\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only presale owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FROM_FA\")\n        mstore(add(headStart, 96), \"ILED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Nothing for owner claim token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Sale is success\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F1EAE4C GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xCE441B18 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F1EAE4C EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x95661E70 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xAB33985A EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56C5F349 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x8EDF18E6 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12E5D0B9 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x18856A2F EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x3B5EF2AD EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x14A SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH1 0x18 SLOAD PUSH2 0x1B8 SWAP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP12 DUP2 AND SWAP11 AND SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND DUP2 MSTORE SWAP12 DUP14 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP12 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x4D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x56D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x59C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xBA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xD52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x387 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x19 SLOAD PUSH2 0x2D9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x12FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x471 PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x4EC JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP GT ISZERO PUSH2 0x4FC JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x0 PUSH2 0x1516 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x27B7363C90383932B9B0B6329037BBB732B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220636C61696D20746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220726566756E6420746F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x18 SSTORE PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SELFBALANCE SWAP3 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xE DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP1 SLOAD SWAP4 DUP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x8DF SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x11 SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x12 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0xF SLOAD DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x989 SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x998 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x15 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x16 SSTORE PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xA33 SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xACD SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xF SLOAD PUSH1 0x19 SLOAD PUSH1 0x17 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP4 AND SWAP2 DUP3 EQ SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xB80 SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x10 SLOAD PUSH2 0xB8F SWAP2 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x18 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xBD2 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C652073756365737373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xC22 SWAP2 PUSH2 0x1A9B JUMP JUMPDEST GT PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520726566756E6420616C6C206F722068617665206E6F7420626F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D081E595D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x15 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xCD5 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0xCCF SWAP2 PUSH2 0xCC9 SWAP1 DUP5 SWAP1 PUSH2 0x1574 JUMP JUMPDEST SWAP1 PUSH2 0x1568 JUMP JUMPDEST SWAP1 PUSH2 0x1580 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xCE5 SWAP1 DUP3 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x1D PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD10 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xD82 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0xDC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C652073756365737373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0xDD2 SWAP2 PUSH2 0x1A9B JUMP JUMPDEST GT PUSH2 0xDEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4F PUSH2 0x3E8 PUSH2 0xCCF DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCC9 PUSH1 0xD PUSH1 0x9 ADD SLOAD PUSH2 0x3E8 PUSH2 0x1574 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE80 SWAP1 DUP5 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x3E8 CALLVALUE DUP4 GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C656173652070726F76696465206E617669746520636F696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP4 LT ISZERO PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP4 GT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F766572666C6F772076616C7565 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x1038 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1068 JUMPI PUSH2 0x1059 DUP2 PUSH2 0xCCF DUP6 PUSH2 0xCC9 PUSH1 0x1A SLOAD DUP7 PUSH2 0x1574 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x1065 DUP4 DUP6 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 SLOAD PUSH1 0x14 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1079 SWAP2 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x18 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x10A0 JUMPI DUP3 PUSH2 0x10A2 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x53616C652069732073756363657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118D PUSH1 0xD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x117F SWAP1 PUSH1 0xA PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0xCCF SWAP1 DUP11 SWAP1 PUSH2 0x1568 JUMP JUMPDEST SWAP1 POP DUP8 DUP10 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP10 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11BE SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD DUP9 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11D8 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11F2 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1207 DUP4 PUSH2 0x1AB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x122B SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1D PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x17 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1264 JUMPI POP CALLVALUE PUSH2 0x1261 DUP8 DUP10 PUSH2 0x1957 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x12AC JUMPI CALLER PUSH2 0x8FC DUP8 PUSH2 0x1278 DUP11 CALLVALUE PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x1282 SWAP2 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF AND PUSH2 0x12D7 JUMPI PUSH1 0xF SLOAD PUSH2 0x12D7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS PUSH2 0x12D2 DUP11 DUP13 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x158C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F5 PUSH1 0x1B CALLER PUSH2 0x16BC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x130C SWAP2 PUSH2 0x1A9B JUMP JUMPDEST GT PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x558 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1376 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x18 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1392 SWAP1 DUP5 SWAP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1408 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x148A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x599 DUP2 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x16DE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 DUP5 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 DUP5 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 DUP5 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x165C JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x165C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x165C SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x150D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1725 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1510 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x174A DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP1 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1774 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0x1785 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1795 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x7F DUP8 ADD DUP9 SGT PUSH2 0x17A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17CA PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP10 ADD DUP5 DUP11 ADD DUP12 LT ISZERO PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x9 DUP6 LT ISZERO PUSH2 0x1805 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x17E6 JUMP JUMPDEST POP POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x188B JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1871 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E20686173206265656E2077697468647261770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520636C61696D20616C6C206F722068617665206E6F7420626F75676874 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x81E595D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x196A JUMPI PUSH2 0x196A PUSH2 0x1ACD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x198C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x19CC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x19B2 JUMPI PUSH2 0x19B2 PUSH2 0x1ACD JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x19BF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1996 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x19EA JUMPI POP PUSH1 0x1 PUSH2 0x1510 JUMP JUMPDEST DUP2 PUSH2 0x19F7 JUMPI POP PUSH1 0x0 PUSH2 0x1510 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A0D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A17 JUMPI PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1510 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A28 JUMPI PUSH2 0x1A28 PUSH2 0x1ACD JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1510 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1A56 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x1A60 DUP4 DUP4 PUSH2 0x1991 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A74 PUSH2 0x1ACD JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A96 PUSH2 0x1ACD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAD PUSH2 0x1ACD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1AC6 JUMPI PUSH2 0x1AC6 PUSH2 0x1ACD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SAR RETURNDATASIZE SIGNEXTEND SWAP5 0xB3 0xF7 0xFC DUP7 0x24 MLOAD SMOD CALLER EXP COINBASE PUSH2 0x8159 SWAP11 CALL 0xB9 0x25 SWAP13 PUSH26 0x8A187393FE60D8BD64736F6C6343000805003300000000000000 ",
							"sourceMap": "370:9469:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:38;;;;;;;;;;-1:-1:-1;1624:38:3;;;;;;;;;;;;;11128:25:10;;;11184:2;11169:18;;11162:34;;;;11101:18;1624:38:3;;;;;;;;1669:26;;;;;;;;;;-1:-1:-1;1669:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1669:26:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3376:15:10;;;3358:34;;3428:15;;;3423:2;3408:18;;3401:43;3480:15;;;;3460:18;;;3453:43;;;;3527:2;3512:18;;3505:34;;;;3570:3;3555:19;;3548:35;;;;3338:3;3599:19;;3592:35;;;;3658:3;3643:19;;3636:35;3702:3;3687:19;;3680:35;3746:3;3731:19;;3724:35;3790:3;3775:19;;3768:35;3847:15;3840:23;3834:3;3819:19;;3812:52;3895:3;3880:19;;3873:36;;;;3307:3;3292:19;1669:26:3;3274:641:10;1805:23:3;;;;;;;;;;;;;;;;;;;10918:25:10;;;10906:2;10891:18;1805:23:3;10873:76:10;3672:337:3;;;;;;;;;;;;;:::i;1727:24::-;;;;;;;;;;;;;;;;1534:42;;;;;;;;;;-1:-1:-1;1534:42:3;;;;;:::i;:::-;;;;;;;;;;;;;;1714:103:6;;;;;;;;;;;;;:::i;:::-;;9728:108:3;;;:::i;1063:87:6:-;;;;;;;;;;-1:-1:-1;1136:6:6;;-1:-1:-1;;;;;1136:6:6;1063:87;;;-1:-1:-1;;;;;2783:32:10;;;2765:51;;2753:2;2738:18;1063:87:6;2720:102:10;8106:755:3;;;;;;;;;;;;;:::i;2473:1190::-;;;;;;;;;;-1:-1:-1;2473:1190:3;;;;;:::i;:::-;;:::i;7238:860::-;;;;;;;;;;;;;:::i;6351:879::-;;;;;;;;;;;;;:::i;1583:34::-;;;;;;;;;;-1:-1:-1;1583:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11906:25:10;;;11962:2;11947:18;;11940:34;;;;11990:18;;;11983:34;;;;12048:2;12033:18;;12026:34;;;;12091:3;12076:19;;12069:35;12148:14;12141:22;12135:3;12120:19;;12113:51;12208:14;12201:22;12195:3;12180:19;;12173:51;11893:3;11878:19;1583:34:3;11860:370:10;1702:18:3;;;;;;;;;;-1:-1:-1;1702:18:3;;;;-1:-1:-1;;;;;1702:18:3;;;4136:2207;;;;;;:::i;:::-;;:::i;4018:110::-;;;;;;;;;;;;;:::i;:::-;;;5031:14:10;;5024:22;5006:41;;4994:2;4979:18;4018:110:3;4961:92:10;8869:729:3;;;;;;;;;;;;;:::i;1481:46::-;;;;;;;;;;-1:-1:-1;1481:46:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11438:25:10;;;11494:2;11479:18;;11472:34;;;;11522:18;;;11515:34;11580:2;11565:18;;11558:34;11425:3;11410:19;1481:46:3;11392:206:10;1972:201:6;;;;;;;;;;-1:-1:-1;1972:201:6;;;;;:::i;:::-;;:::i;9606:111:3:-;;;;;;;;;;-1:-1:-1;9606:111:3;;;;;:::i;:::-;-1:-1:-1;;;;;9693:16:3;;;9606:111;3672:337;3751:19;;3710:7;;3733:15;:37;3730:272;;;-1:-1:-1;3794:1:3;;3672:337::o;3730:272::-;3861:17;;3843:15;:35;3840:151;;;-1:-1:-1;3906:1:3;;3672:337::o;3840:151::-;-1:-1:-1;3964:1:3;;3672:337::o;1714:103:6:-;1136:6;;-1:-1:-1;;;;;1136:6:6;736:10:4;1283:23:6;1275:68;;;;-1:-1:-1;;;1275:68:6;;9146:2:10;1275:68:6;;;9128:21:10;;;9165:18;;;9158:30;9224:34;9204:18;;;9197:62;9276:18;;1275:68:6;;;;;;;;;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;9728:108:3:-;9777:51;;9785:10;;9806:21;9777:51;;;;;;;;;9806:21;9785:10;9777:51;;;;;;;;;;;;;;;;;;;;;9728:108::o;8106:755::-;2011:9;:22;-1:-1:-1;;;;;2011:22:3;736:10:4;-1:-1:-1;;;;;1995:38:3;;1987:69;;;;-1:-1:-1;;;1987:69:3;;8799:2:10;1987:69:3;;;8781:21:10;8838:2;8818:18;;;8811:30;-1:-1:-1;;;8857:18:10;;;8850:48;8915:18;;1987:69:3;8771:168:10;1987:69:3;1778:1:7::1;2376:7;;:19;;2368:63;;;;-1:-1:-1::0;;;2368:63:7::1;;;;;;;:::i;:::-;1778:1;2509:7;:18:::0;8260:35:3;;::::2;;8259:36;8251:78;;;::::0;-1:-1:-1;;;8251:78:3;;9912:2:10;8251:78:3::2;::::0;::::2;9894:21:10::0;9951:2;9931:18;;;9924:30;9990:31;9970:18;;;9963:59;10039:18;;8251:78:3::2;9884:179:10::0;8251:78:3::2;8349:36:::0;;::::2;::::0;::::2;;;8348:37;8340:80;;;::::0;-1:-1:-1;;;8340:80:3;;6600:2:10;8340:80:3::2;::::0;::::2;6582:21:10::0;6639:2;6619:18;;;6612:30;6678:32;6658:18;;;6651:60;6728:18;;8340:80:3::2;6572:180:10::0;8340:80:3::2;8469:19:::0;;8463:51:::2;::::0;-1:-1:-1;;;8463:51:3;;8508:4:::2;8463:51;::::0;::::2;2765::10::0;8431:29:3::2;::::0;-1:-1:-1;;;;;8469:19:3::2;::::0;8463:36:::2;::::0;2738:18:10;;8463:51:3::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8595:35:::0;:42;;-1:-1:-1;;8595:42:3::2;8633:4;8595:42;::::0;;-1:-1:-1;8648:28:3;:32;8697:19;;8648:9:::2;8727:22:::0;8691:82:::2;::::0;-1:-1:-1;;;8691:82:3;;-1:-1:-1;;;;;8727:22:3;;::::2;8595:13;8691:82:::0;::::2;4102:51:10::0;4169:18;;;4162:34;;;;;-1:-1:-1;8563:21:3::2;::::0;8697:19;::::2;::::0;8691:35:::2;::::0;4075:18:10;;8691:82:3::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8792:9:3::2;:22:::0;8784:69:::2;::::0;-1:-1:-1;;;;;8792:22:3;;::::2;::::0;8784:69;::::2;;;::::0;8825:27;;8792:22:::2;8784:69:::0;8792:22;8784:69;8825:27;8792:22;8784:69;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1734:1:7::1;2688:7;:22:::0;-1:-1:-1;8106:755:3:o;2473:1190::-;2654:9;:38;;-1:-1:-1;;;;;2654:38:3;;;-1:-1:-1;;;;;;2654:38:3;;;;;;;2703:19;:32;;;;;;;;;;;;;2746:19;:32;;;;;;;;;;;;;;;2836:37;;;-1:-1:-1;;;2836:37:3;;;;:35;;:37;;;;;;;;;;;;;;;2703:32;2836:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2823:51;;:2;:51;:::i;:::-;2812:8;;:62;;;;:::i;:::-;2789:20;:85;2907:8;;;;;2885:19;:30;2946:8;;;;;2926:17;:28;2994:8;;;;2965:26;:37;3073:19;;3067:37;;-1:-1:-1;;;3067:37:3;;;;-1:-1:-1;;;;;3073:19:3;;;;3067:35;;:37;;;;;;;;;;;3073:19;3067:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3053:52;;:2;:52;:::i;:::-;3042:8;;;;:63;;;;:::i;:::-;3013:26;:92;3138:8;;;;3116:19;:30;3178:8;;;;3157:18;:29;3254:19;;3248:37;;;-1:-1:-1;;;3248:37:3;;;;-1:-1:-1;;;;;3254:19:3;;;;3248:35;;:37;;;;;3138:8;;3248:37;;;;;;;;3254:19;3248:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3234:52;;:2;:52;:::i;:::-;3223:8;;;;:63;;;;:::i;:::-;3197:15;:89;3353:19;;3347:37;;;-1:-1:-1;;;3347:37:3;;;;-1:-1:-1;;;;;3353:19:3;;;;3347:35;;:37;;;;;;;;;;;;;;;3353:19;3347:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3334:51;;:2;:51;:::i;:::-;3323:8;;;;:62;;;;:::i;:::-;3297:23;:88;3449:19;;3432:4;;3396:25;:73;;-1:-1:-1;;3396:73:3;-1:-1:-1;;;;;3432:4:3;;;3449:19;;;;3424:45;;;3396:73;;;;;;;3616:37;;;-1:-1:-1;;;3616:37:3;;;;:35;;:37;;;;;;;;;;;;;;;3449:19;3616:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3603:51;;:2;:51;:::i;:::-;3536:15;:23;3511:20;;:49;;:24;:49::i;:::-;:144;;;;:::i;:::-;3480:28;:175;-1:-1:-1;;;;2473:1190:3:o;7238:860::-;1778:1:7;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:7;;;;;;;:::i;:::-;1778:1;2509:7;:18;7310:8:3::1;:6;:8::i;:::-;7322:1;7310:13;7302:38;;;::::0;-1:-1:-1;;;7302:38:3;;8458:2:10;7302:38:3::1;::::0;::::1;8440:21:10::0;8497:2;8477:18;;;8470:30;-1:-1:-1;;;8516:18:10;;;8509:42;8568:18;;7302:38:3::1;8430:162:10::0;7302:38:3::1;7394:31:::0;;:13:::1;7359:32:::0;7428:1:::1;::::0;7359:66:::1;::::0;::::1;:::i;:::-;:70;7351:137;;;;-1:-1:-1::0;;;7351:137:3::1;;;;;;;:::i;:::-;7536:10;7500:23;7526:21:::0;;;:9:::1;:21;::::0;;;;7566:17;;7558:71:::1;;;::::0;-1:-1:-1;;;7558:71:3;;6959:2:10;7558:71:3::1;::::0;::::1;6941:21:10::0;6998:2;6978:18;;;6971:30;7037:34;7017:18;;;7010:62;-1:-1:-1;;;7088:18:10;;;7081:35;7133:19;;7558:71:3::1;6931:227:10::0;7558:71:3::1;7742:17:::0;;7683:19;;7640:20:::1;::::0;7663:150:::1;::::0;7807:4:::1;::::0;7664:96:::1;::::0;7665:38:::1;::::0;7807:4;;7665:17:::1;:38::i;:::-;7664:77:::0;::::1;:96::i;:::-;7663:135:::0;::::1;:150::i;:::-;7836:17:::0;;7640:173;;-1:-1:-1;7836:32:3::1;::::0;7640:173;;7836:32:::1;:::i;:::-;7824:8;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7879:31:3;:47;;7914:12;;7879:31;::::1;::::0;:47:::1;::::0;7914:12;;7879:47:::1;:::i;:::-;::::0;;;-1:-1:-1;;7958:1:3::1;7937:22:::0;;;7970:16:::1;::::0;::::1;:20:::0;;;8022:15:::1;8001:18;::::0;::::1;:36:::0;8048:42:::1;::::0;8056:10:::1;::::0;8048:42;::::1;;;::::0;8077:12;;8048:42;7958:1;8048:42;8077:12;8056:10;8048:42;::::1;;;;;;;;;;;;;::::0;::::1;;;;6351:879:::0;1778:1:7;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:7;;;;;;;:::i;:::-;1778:1;2509:7;:18;6422:8:3::1;:6;:8::i;:::-;6434:1;6422:13;6414:38;;;::::0;-1:-1:-1;;;6414:38:3;;8458:2:10;6414:38:3::1;::::0;::::1;8440:21:10::0;8497:2;8477:18;;;8470:30;-1:-1:-1;;;8516:18:10;;;8509:42;8568:18;;6414:38:3::1;8430:162:10::0;6414:38:3::1;6503:32:::0;;6472:28;;6538:1:::1;::::0;6472:63:::1;::::0;::::1;:::i;:::-;:67;6464:134;;;;-1:-1:-1::0;;;6464:134:3::1;;;;;;;:::i;:::-;6645:10;6609:23;6635:21:::0;;;:9:::1;:21;::::0;;;;6694:24:::1;::::0;::::1;::::0;6675:16:::1;::::0;::::1;::::0;:43:::1;6667:92;;;;-1:-1:-1::0;;;6667:92:3::1;;;;;;;:::i;:::-;6770:19;6792:136;6922:4;6793:88;6864:5;:16;;;6794:37;6812:9;:18;;;6802:4;6794:17;;:37;;;;:::i;6792:136::-;6770:158;;6975:11;6939:13;:32;;;:47;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6997:28:3;:43;;7029:11;;6997:28;::::1;::::0;:43:::1;::::0;7029:11;;6997:43:::1;:::i;:::-;::::0;;;-1:-1:-1;;7072:1:3::1;7051:22:::0;;;7084:16:::1;::::0;::::1;:20:::0;7136:15:::1;7115:18;::::0;::::1;:36:::0;7168:19;;7162:60:::1;::::0;-1:-1:-1;;;7162:60:3;;7198:10:::1;7162:60;::::0;::::1;4102:51:10::0;4169:18;;;4162:34;;;-1:-1:-1;;;;;7168:19:3;;::::1;::::0;7162:35:::1;::::0;4075:18:10;;7162:60:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4136:2207::-:0;1778:1:7;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:7;;;;;;;:::i;:::-;1778:1;2509:7;:18;;;4307:10:3::1;4297:21:::0;;::::1;::::0;;;;;;;;4349:7;;;;4462:4:::1;4485:9;:27:::0;-1:-1:-1;4485:27:3::1;4477:66;;;::::0;-1:-1:-1;;;4477:66:3;;5482:2:10;4477:66:3::1;::::0;::::1;5464:21:10::0;5521:2;5501:18;;;5494:30;5560:28;5540:18;;;5533:56;5606:18;;4477:66:3::1;5454:176:10::0;4477:66:3::1;4580:26:::0;;4562:44;::::1;;4554:101;;;::::0;-1:-1:-1;;;4554:101:3;;8113:2:10;4554:101:3::1;::::0;::::1;8095:21:10::0;8152:2;8132:18;;;8125:30;-1:-1:-1;;;8171:18:10;;;8164:46;8227:18;;4554:101:3::1;8085:166:10::0;4554:101:3::1;4692:26:::0;;4674:44;::::1;;4666:99;;;::::0;-1:-1:-1;;;4666:99:3;;7365:2:10;4666:99:3::1;::::0;::::1;7347:21:10::0;7404:2;7384:18;;;7377:30;-1:-1:-1;;;7423:18:10;;;7416:44;7477:18;;4666:99:3::1;7337:164:10::0;4666:99:3::1;4780:19;:17;:19::i;:::-;4776:266;;4833:133;4952:13;4834:81;4900:14;4835:28;4853:9;;4835:13;:17;;:28;;;;:::i;4833:133::-;4816:150:::0;-1:-1:-1;4987:26:3::1;4816:150:::0;4987:9;:26:::1;:::i;:::-;4981:32;;4776:266;5107:17:::0;;5078:26;;5052:23:::1;::::0;5078:46:::1;::::0;::::1;:::i;:::-;5192:13;:32:::0;5161:28;;5052:72;;-1:-1:-1;5135:23:3::1;::::0;5161:63:::1;::::0;5192:32;5161:63:::1;:::i;:::-;5135:89;;5235:17;5273:15;5255;:33;:69;;5309:15;5255:69;;;5291:15;5255:69;5235:89;;5361:9;5343:14;:27;;5335:55;;;::::0;-1:-1:-1;;;5335:55:3;;10630:2:10;5335:55:3::1;::::0;::::1;10612:21:10::0;10669:2;10649:18;;;10642:30;-1:-1:-1;;;10688:18:10;;;10681:45;10743:18;;5335:55:3::1;10602:165:10::0;5335:55:3::1;5401:17;5422:158;5547:9;:19;;;;;;;;;;-1:-1:-1::0;;;;;5547:19:3::1;-1:-1:-1::0;;;;;5541:35:3::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5527:52;::::0;:2:::1;:52;:::i;:::-;5471:20:::0;;5422:70:::1;::::0;:14;;:48:::1;:70::i;:158::-;5401:180;;5630:9;5609:5;:17;;;:30;;;;;;;:::i;:::-;;;;;;;;5670:9;5650:5;:16;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5690:13:3::1;:50:::0;;5726:14;;5690:13;:32:::1;::::0;:50:::1;::::0;5726:14;;5690:50:::1;:::i;:::-;::::0;;;-1:-1:-1;;5751:28:3;:41;;5783:9;;5751:28;::::1;::::0;:41:::1;::::0;5783:9;;5751:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;5803:25:3;:27;;;:25:::1;:27;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;5849:10:3::1;5841:19;::::0;;;:7:::1;:19;::::0;;;;:26;;5864:3;;5841:19;:26:::1;::::0;5864:3;;5841:26:::1;:::i;:::-;;;;;;;;5890:3;5878:8;;:15;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5909:25:3;;::::1;;:62:::0;::::1;;;-1:-1:-1::0;5962:9:3::1;5938:20;5955:3:::0;5938:14;:20:::1;:::i;:::-;:33;;5909:62;5906:156;;;5996:10;5988:62;6046:3:::0;6017:26:::1;6029:14:::0;6017:9:::1;:26;:::i;:::-;:32;;;;:::i;:::-;5988:62;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5906:156;6077:25:::0;;::::1;;6073:251;;6177:19:::0;;6119:193:::1;::::0;-1:-1:-1;;;;;6177:19:3::1;6216:10;6253:4;6277:20;6294:3:::0;6277:14;:20:::1;:::i;:::-;6119:31;:193::i;:::-;-1:-1:-1::0;;1734:1:7;2688:7;:22;-1:-1:-1;;;;;;;;4136:2207:3:o;4018:110::-;4067:4;4091:29;:6;736:10:4;4091:15:3;:29::i;:::-;4084:36;;4018:110;:::o;8869:729::-;9025:32;;8994:28;;9060:1;;8994:63;;;:::i;:::-;:67;8986:134;;;;-1:-1:-1;;;8986:134:3;;;;;;;:::i;:::-;9167:10;9131:23;9157:21;;;:9;:21;;;;;9216:24;;;;9197:16;;;;:43;9189:92;;;;-1:-1:-1;;;9189:92:3;;;;;;;:::i;:::-;9328:16;;;;9292:32;:52;;:32;;:52;;9328:16;;9292:52;:::i;:::-;;;;-1:-1:-1;;9387:16:3;;;;9355:28;:48;;:28;;:48;;9387:16;;9355:48;:::i;:::-;;;;-1:-1:-1;;9435:1:3;9414:22;;;9447:16;;;:20;;;9499:15;9478:18;;;:36;9531:19;;9525:65;;-1:-1:-1;;;9525:65:3;;9561:10;9525:65;;;4102:51:10;4169:18;;;4162:34;;;;-1:-1:-1;;;;;9531:19:3;;9525:35;;4075:18:10;;9525:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8914:684;8869:729::o;1972:201:6:-;1136:6;;-1:-1:-1;;;;;1136:6:6;736:10:4;1283:23:6;1275:68;;;;-1:-1:-1;;;1275:68:6;;9146:2:10;1275:68:6;;;9128:21:10;;;9165:18;;;9158:30;9224:34;9204:18;;;9197:62;9276:18;;1275:68:6;9118:182:10;1275:68:6;-1:-1:-1;;;;;2061:22:6;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:6;;6193:2:10;2053:73:6::1;::::0;::::1;6175:21:10::0;6232:2;6212:18;;;6205:30;6271:34;6251:18;;;6244:62;-1:-1:-1;;;6322:18:10;;;6315:36;6368:19;;2053:73:6::1;6165:228:10::0;2053:73:6::1;2137:28;2156:8;2137:18;:28::i;8259:152:5:-:0;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:5;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2333:191:6:-;2426:6;;;-1:-1:-1;;;;;2443:17:6;;;-1:-1:-1;;;;;;2443:17:6;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2396:128;2333:191;:::o;3585:98:8:-;3643:7;3670:5;3674:1;3670;:5;:::i;3228:98::-;3286:7;3313:5;3317:1;3313;:5;:::i;3984:98::-;4042:7;4069:5;4073:1;4069;:5;:::i;1073:430:9:-;1279:51;;;-1:-1:-1;;;;;4465:15:10;;;1279:51:9;;;4447:34:10;4517:15;;;4497:18;;;4490:43;4549:18;;;;4542:34;;;1279:51:9;;;;;;;;;;4382:18:10;;;;1279:51:9;;;;;;;-1:-1:-1;;;;;1279:51:9;-1:-1:-1;;;1279:51:9;;;1254:87;;-1:-1:-1;;;;1254:10:9;;;;:87;;1279:51;1254:87;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:123;;;;1374:7;:57;;;;-1:-1:-1;1386:11:9;;:16;;:44;;;1417:4;1406:24;;;;;;;;;;;;:::i;:::-;1352:143;;;;-1:-1:-1;;;1352:143:9;;9507:2:10;1352:143:9;;;9489:21:10;9546:2;9526:18;;;9519:30;9585:34;9565:18;;;9558:62;-1:-1:-1;;;9636:18:10;;;9629:34;9680:19;;1352:143:9;9479:226:10;1352:143:9;1207:296;;1073:430;;;;:::o;8831:167:5:-;-1:-1:-1;;;;;8965:23:5;;8911:4;4367:19;;;:12;;;:19;;;;;;:24;;8935:55;4270:129;2174:414;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:5;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:5;2557:12;;14:247:10;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;84:177;-1:-1:-1;;;84:177:10:o;266:1261::-;409:6;417;425;433;464:3;508:2;496:9;487:7;483:23;479:32;476:2;;;524:1;521;514:12;476:2;563:9;550:23;582:31;607:5;582:31;:::i;:::-;632:5;-1:-1:-1;656:2:10;695:18;;;682:32;723:33;682:32;723:33;:::i;:::-;775:7;-1:-1:-1;834:2:10;819:18;;806:32;847:33;806:32;847:33;:::i;:::-;899:7;-1:-1:-1;944:3:10;929:19;;925:33;-1:-1:-1;915:2:10;;972:1;969;962:12;915:2;1005;999:9;1047:3;1039:6;1035:16;1117:6;1105:10;1102:22;1081:18;1069:10;1066:34;1063:62;1060:2;;;1128:18;;:::i;:::-;1164:2;1157:22;1199:6;1240:2;1225:18;;1258;;;1255:31;-1:-1:-1;1252:2:10;;;1299:1;1296;1289:12;1252:2;1321:1;1312:10;;1331:165;1345:4;1342:1;1339:11;1331:165;;;1404:17;;1392:30;;1365:1;1358:9;;;;;1442:12;;;;1474;;1331:165;;;1335:3;;1515:6;1505:16;;;;;444:1083;;;;;;;:::o;1532:277::-;1599:6;1652:2;1640:9;1631:7;1627:23;1623:32;1620:2;;;1668:1;1665;1658:12;1620:2;1700:9;1694:16;1753:5;1746:13;1739:21;1732:5;1729:32;1719:2;;1775:1;1772;1765:12;1814:180;1873:6;1926:2;1914:9;1905:7;1901:23;1897:32;1894:2;;;1942:1;1939;1932:12;1894:2;-1:-1:-1;1965:23:10;;1884:110;-1:-1:-1;1884:110:10:o;1999:184::-;2069:6;2122:2;2110:9;2101:7;2097:23;2093:32;2090:2;;;2138:1;2135;2128:12;2090:2;-1:-1:-1;2161:16:10;;2080:103;-1:-1:-1;2080:103:10:o;2188:426::-;2317:3;2355:6;2349:13;2380:1;2390:129;2404:6;2401:1;2398:13;2390:129;;;2502:4;2486:14;;;2482:25;;2476:32;2463:11;;;2456:53;2419:12;2390:129;;;2537:6;2534:1;2531:13;2528:2;;;2572:1;2563:6;2558:3;2554:16;2547:27;2528:2;-1:-1:-1;2592:16:10;;;;;2325:289;-1:-1:-1;;2325:289:10:o;5635:351::-;5837:2;5819:21;;;5876:2;5856:18;;;5849:30;5915:29;5910:2;5895:18;;5888:57;5977:2;5962:18;;5809:177::o;7506:400::-;7708:2;7690:21;;;7747:2;7727:18;;;7720:30;7786:34;7781:2;7766:18;;7759:62;-1:-1:-1;;;7852:2:10;7837:18;;7830:34;7896:3;7881:19;;7680:226::o;10068:355::-;10270:2;10252:21;;;10309:2;10289:18;;;10282:30;10348:33;10343:2;10328:18;;10321:61;10414:2;10399:18;;10242:181::o;12235:128::-;12275:3;12306:1;12302:6;12299:1;12296:13;12293:2;;;12312:18;;:::i;:::-;-1:-1:-1;12348:9:10;;12283:80::o;12368:217::-;12408:1;12434;12424:2;;12478:10;12473:3;12469:20;12466:1;12459:31;12513:4;12510:1;12503:15;12541:4;12538:1;12531:15;12424:2;-1:-1:-1;12570:9:10;;12414:171::o;12590:422::-;12679:1;12722:5;12679:1;12736:270;12757:7;12747:8;12744:21;12736:270;;;12816:4;12812:1;12808:6;12804:17;12798:4;12795:27;12792:2;;;12825:18;;:::i;:::-;12875:7;12865:8;12861:22;12858:2;;;12895:16;;;;12858:2;12974:22;;;;12934:15;;;;12736:270;;;12740:3;12654:358;;;;;:::o;13017:131::-;13077:5;13106:36;13133:8;13127:4;13202:5;13232:8;13222:2;;-1:-1:-1;13273:1:10;13287:5;;13222:2;13321:4;13311:2;;-1:-1:-1;13358:1:10;13372:5;;13311:2;13403:4;13421:1;13416:59;;;;13489:1;13484:130;;;;13396:218;;13416:59;13446:1;13437:10;;13460:5;;;13484:130;13521:3;13511:8;13508:17;13505:2;;;13528:18;;:::i;:::-;-1:-1:-1;;13584:1:10;13570:16;;13599:5;;13396:218;;13698:2;13688:8;13685:16;13679:3;13673:4;13670:13;13666:36;13660:2;13650:8;13647:16;13642:2;13636:4;13633:12;13629:35;13626:77;13623:2;;;-1:-1:-1;13735:19:10;;;13767:5;;13623:2;13814:34;13839:8;13833:4;13814:34;:::i;:::-;13884:6;13880:1;13876:6;13872:19;13863:7;13860:32;13857:2;;;13895:18;;:::i;:::-;13933:20;;13212:747;-1:-1:-1;;;13212:747:10:o;13964:168::-;14004:7;14070:1;14066;14062:6;14058:14;14055:1;14052:21;14047:1;14040:9;14033:17;14029:45;14026:2;;;14077:18;;:::i;:::-;-1:-1:-1;14117:9:10;;14016:116::o;14137:125::-;14177:4;14205:1;14202;14199:8;14196:2;;;14210:18;;:::i;:::-;-1:-1:-1;14247:9:10;;14186:76::o;14267:135::-;14306:3;-1:-1:-1;;14327:17:10;;14324:2;;;14347:18;;:::i;:::-;-1:-1:-1;14394:1:10;14383:13;;14314:88::o;14407:127::-;14468:10;14463:3;14459:20;14456:1;14449:31;14499:4;14496:1;14489:15;14523:4;14520:1;14513:15;14671:127;14732:10;14727:3;14723:20;14720:1;14713:31;14763:4;14760:1;14753:15;14787:4;14784:1;14777:15;14803:131;-1:-1:-1;;;;;14878:31:10;;14868:42;;14858:2;;14924:1;14921;14914:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1396000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "2448",
								"backToken()": "infinite",
								"buyerInfo(address)": "9012",
								"checkAdminAddress()": "2521",
								"deposit(uint256)": "infinite",
								"feeAnyone()": "2407",
								"getBalance(address)": "3094",
								"initialSaleInfor(address,address,address,uint256[9])": "infinite",
								"owner()": "2409",
								"ownerClaimAndRefundToken()": "infinite",
								"presaleStatus()": "13078",
								"renounceOwnership()": "28162",
								"saleInfor()": "25810",
								"saleTotalSupply()": "4441",
								"status()": "4555",
								"totalFee()": "2363",
								"transferOwnership(address)": "infinite",
								"userClaimEmergency()": "infinite",
								"userClaimWhenSaleSuccess()": "infinite",
								"userFee(address)": "2536",
								"userRefundEmergency()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2250,
									"name": "PUSH",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2259,
									"end": 2301,
									"name": "PUSH",
									"source": 3,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2246,
									"end": 2302,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2313,
									"end": 2319,
									"name": "PUSH",
									"source": 3,
									"value": "1B"
								},
								{
									"begin": 2324,
									"end": 2366,
									"name": "PUSH",
									"source": 3,
									"value": "6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551732"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2313,
									"end": 2367,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2389,
									"end": 2431,
									"name": "PUSH",
									"source": 3,
									"value": "4F0B12BBF40FC182559822A5B1DB6D34DBC3E016"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 3,
									"value": "1B"
								},
								{
									"begin": 2378,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2378,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2378,
									"end": 2388,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551732"
								},
								{
									"begin": 2378,
									"end": 2388,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2378,
									"end": 2432,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2455,
									"end": 2457,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2443,
									"end": 2452,
									"name": "PUSH",
									"source": 3,
									"value": "1A"
								},
								{
									"begin": 2443,
									"end": 2457,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 6,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8329,
									"end": 8333,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 8358,
									"end": 8361,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8353,
									"end": 8357,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2237,
									"end": 2241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2564,
									"end": 2569,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 9839,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220981d3d0b94b3f7fc86245107330a416181599af1b9259c798a187393fe60d8bd64736f6c63430008050033",
									".code": [
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "8F1EAE4C"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "B6B55F25"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "B6B55F25"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "CAD5B0F7"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "CE441B18"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "E2D3F423"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "F8B2CB4F"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "8F1EAE4C"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "95661E70"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "AB33985A"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "ACFB2355"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "AD5C4648"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "56C5F349"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "56C5F349"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "861FAF5F"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "8EDF18E6"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "12E5D0B9"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "18856A2F"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "1DF4CCFC"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "200D2ED2"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "3B5EF2AD"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 9839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11186,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1662,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP12",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP12",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP11",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "SWAP14",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "DUP15",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3391,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3443,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3443,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3443,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3425,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3539,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3539,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3539,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3573,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3555,
											"end": 3574,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3583,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3583,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3599,
											"end": 3618,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3627,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3749,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3724,
											"end": 3759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3790,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3775,
											"end": 3794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3775,
											"end": 3794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3803,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3862,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3863,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3819,
											"end": 3838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 3898,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3292,
											"end": 3311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3274,
											"end": 3915,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10906,
											"end": 10908,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 10873,
											"end": 10949,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1576,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2783,
											"end": 2815,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2783,
											"end": 2815,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2720,
											"end": 2822,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 11931,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 11931,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 11931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 11964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11947,
											"end": 11965,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11947,
											"end": 11965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11974,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11974,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11974,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11990,
											"end": 12008,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11990,
											"end": 12008,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11990,
											"end": 12008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12017,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12017,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12017,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12033,
											"end": 12051,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12091,
											"end": 12094,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12076,
											"end": 12095,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12076,
											"end": 12095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12162,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12163,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12138,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 12120,
											"end": 12139,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12208,
											"end": 12222,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12223,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12195,
											"end": 12198,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12173,
											"end": 12224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11893,
											"end": 11896,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11878,
											"end": 11897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 11860,
											"end": 12230,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5045,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5046,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5047,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 4996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4961,
											"end": 5053,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11438,
											"end": 11463,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11438,
											"end": 11463,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11438,
											"end": 11463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11494,
											"end": 11496,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11472,
											"end": 11506,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11472,
											"end": 11506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11472,
											"end": 11506,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11472,
											"end": 11506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11515,
											"end": 11549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11582,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11558,
											"end": 11592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11425,
											"end": 11428,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11410,
											"end": 11429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 11392,
											"end": 11598,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9693,
											"end": 9709,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9693,
											"end": 9709,
											"name": "BALANCE",
											"source": 3
										},
										{
											"begin": 9693,
											"end": 9709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9717,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3751,
											"end": 3770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3748,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3770,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3730,
											"end": 4002,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3730,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3730,
											"end": 4002,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3730,
											"end": 4002,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3730,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3878,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3861,
											"end": 3878,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3858,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3878,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3991,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3840,
											"end": 3991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3840,
											"end": 3991,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3840,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 4009,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9128,
											"end": 9149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9224,
											"end": 9258,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9795,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9806,
											"end": 9827,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9806,
											"end": 9827,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9795,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9728,
											"end": 9836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 2011,
											"end": 2033,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 2033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2033,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8799,
											"end": 8801,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8781,
											"end": 8802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8840,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C90383932B9B0B6329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8771,
											"end": 8939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1987,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8295,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 8260,
											"end": 8295,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8260,
											"end": 8295,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8260,
											"end": 8295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8295,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9894,
											"end": 9915,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9953,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9924,
											"end": 9954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9990,
											"end": 10021,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7468696E6720666F72206F776E657220636C61696D20746F6B656E000000"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9963,
											"end": 10022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 9884,
											"end": 10063,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8251,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8349,
											"end": 8385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8348,
											"end": 8385,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 6619,
											"end": 6637,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6619,
											"end": 6637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6619,
											"end": 6637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6642,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6678,
											"end": 6710,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7468696E6720666F72206F776E657220726566756E6420746F6B656E0000"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6711,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6572,
											"end": 6752,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 8340,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8488,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 8469,
											"end": 8488,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8508,
											"end": 8512,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8431,
											"end": 8460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8469,
											"end": 8488,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8499,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 8463,
											"end": 8499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8463,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8630,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 8595,
											"end": 8637,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8637,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8637,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8637,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8595,
											"end": 8637,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8637,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8637,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8676,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 8648,
											"end": 8680,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8697,
											"end": 8716,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 8697,
											"end": 8716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8648,
											"end": 8657,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 8727,
											"end": 8749,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8727,
											"end": 8749,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8727,
											"end": 8749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8727,
											"end": 8749,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8563,
											"end": 8584,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 8563,
											"end": 8584,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8697,
											"end": 8716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8697,
											"end": 8716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8697,
											"end": 8716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8726,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 8691,
											"end": 8726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 8691,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8792,
											"end": 8801,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8825,
											"end": 8852,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8825,
											"end": 8852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8825,
											"end": 8852,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8784,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8106,
											"end": 8861,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2692,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2765,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2735,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2836,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2820,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2812,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2789,
											"end": 2874,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2885,
											"end": 2915,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 2943,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2926,
											"end": 2954,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2994,
											"end": 3002,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2994,
											"end": 3002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2994,
											"end": 3002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2994,
											"end": 3002,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2965,
											"end": 3002,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 3067,
											"end": 3102,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3067,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3050,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3042,
											"end": 3050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3013,
											"end": 3105,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3146,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3138,
											"end": 3146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3116,
											"end": 3146,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3186,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3178,
											"end": 3186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3186,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3157,
											"end": 3186,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3283,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 3248,
											"end": 3283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3146,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3248,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3236,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3234,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3231,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3223,
											"end": 3231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3231,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3231,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3223,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3212,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 3197,
											"end": 3286,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 3347,
											"end": 3382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3372,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3334,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3334,
											"end": 3385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3334,
											"end": 3336,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3334,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3334,
											"end": 3385,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3385,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3334,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3331,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3323,
											"end": 3331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3331,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3323,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3320,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 3297,
											"end": 3385,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3469,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3469,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 3616,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3468,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3616,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3603,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3605,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3603,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3603,
											"end": 3654,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3603,
											"end": 3654,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3603,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3551,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3511,
											"end": 3560,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3511,
											"end": 3560,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3511,
											"end": 3560,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3511,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3511,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3508,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3480,
											"end": 3655,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7238,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7310,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 7310,
											"end": 7318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7318,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7310,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7310,
											"end": 7323,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8458,
											"end": 8460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8497,
											"end": 8499,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C652073756365737373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8430,
											"end": 8592,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7394,
											"end": 7425,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7394,
											"end": 7425,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7394,
											"end": 7407,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7359,
											"end": 7391,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7359,
											"end": 7429,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7351,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7546,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7547,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7566,
											"end": 7583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7566,
											"end": 7583,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 6961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6941,
											"end": 6962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 6978,
											"end": 6996,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6978,
											"end": 6996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 6996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6971,
											"end": 7001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7071,
											"name": "PUSH",
											"source": 10,
											"value": "596F7520726566756E6420616C6C206F722068617665206E6F7420626F756768"
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7133,
											"end": 7152,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7133,
											"end": 7152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6931,
											"end": 7158,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7558,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7759,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7683,
											"end": 7702,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7683,
											"end": 7702,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7663,
											"end": 7813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7807,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 7807,
											"end": 7811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7664,
											"end": 7760,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7665,
											"end": 7703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7807,
											"end": 7811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7807,
											"end": 7811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7665,
											"end": 7703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7665,
											"end": 7703,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7665,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7664,
											"end": 7760,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7664,
											"end": 7760,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7664,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7663,
											"end": 7813,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7663,
											"end": 7813,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7663,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7836,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7836,
											"end": 7868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7836,
											"end": 7868,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7836,
											"end": 7868,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7836,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7832,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 7824,
											"end": 7832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7868,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7879,
											"end": 7910,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7926,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 7959,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 7959,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 7986,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7970,
											"end": 7986,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 7986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 7990,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 7990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 7990,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8022,
											"end": 8037,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8056,
											"end": 8066,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8056,
											"end": 8066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8056,
											"end": 8066,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6351,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6422,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6422,
											"end": 6430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6430,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6422,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6422,
											"end": 6435,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8458,
											"end": 8460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8497,
											"end": 8499,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C652073756365737373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8430,
											"end": 8592,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6503,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6503,
											"end": 6535,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6500,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6472,
											"end": 6500,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6538,
											"end": 6539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6539,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6464,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6655,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6718,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6694,
											"end": 6718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6718,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6675,
											"end": 6691,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6675,
											"end": 6691,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6675,
											"end": 6691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6675,
											"end": 6691,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6675,
											"end": 6718,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6667,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6922,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 6793,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6864,
											"end": 6869,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6812,
											"end": 6821,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 6806,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 6794,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6794,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6792,
											"end": 6928,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6792,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6952,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6939,
											"end": 6971,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6939,
											"end": 6971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6971,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6939,
											"end": 6986,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6997,
											"end": 7025,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7040,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7040,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7072,
											"end": 7073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7073,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7100,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7084,
											"end": 7100,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7104,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7151,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7151,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7187,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 7168,
											"end": 7187,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7208,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7187,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7197,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 7162,
											"end": 7197,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7162,
											"end": 7222,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4466,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 4485,
											"end": 4494,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4485,
											"end": 4512,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5523,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5560,
											"end": 5588,
											"name": "PUSH",
											"source": 10,
											"value": "506C656173652070726F76696465206E617669746520636F696E000000000000"
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5454,
											"end": 5630,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4477,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4606,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F7567682076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8085,
											"end": 8251,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4554,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4718,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4692,
											"end": 4718,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4718,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4718,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7404,
											"end": 7406,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F766572666C6F772076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7416,
											"end": 7460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7337,
											"end": 7501,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4666,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4780,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4776,
											"end": 5042,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4833,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4952,
											"end": 4965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4835,
											"end": 4852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4863,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4835,
											"end": 4863,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4966,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4833,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4816,
											"end": 4966,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 4816,
											"end": 4966,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4987,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4987,
											"end": 5013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4987,
											"end": 5013,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 4987,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5042,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4776,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5104,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5078,
											"end": 5104,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5224,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5189,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 5161,
											"end": 5189,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 5161,
											"end": 5224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5161,
											"end": 5224,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5161,
											"end": 5224,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 5161,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5270,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5288,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 5255,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5357,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10630,
											"end": 10632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10669,
											"end": 10671,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C652069732073756363657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10706,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10688,
											"end": 10706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10681,
											"end": 10726,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 10602,
											"end": 10767,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5335,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5401,
											"end": 5418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 5547,
											"end": 5556,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5541,
											"end": 5576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5576,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 5541,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 5527,
											"end": 5579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5529,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 5527,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5527,
											"end": 5579,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5579,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 5527,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5471,
											"end": 5491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5422,
											"end": 5492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5436,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5422,
											"end": 5492,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5422,
											"end": 5580,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 5422,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5401,
											"end": 5581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5401,
											"end": 5581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5655,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5666,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5650,
											"end": 5666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5690,
											"end": 5703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5740,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5740,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 5779,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5751,
											"end": 5792,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5803,
											"end": 5828,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5848,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5893,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5886,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 5878,
											"end": 5886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5909,
											"end": 5934,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 5909,
											"end": 5934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5909,
											"end": 5934,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5909,
											"end": 5934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5952,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5938,
											"end": 5958,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5938,
											"end": 5958,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 5938,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5971,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5971,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5906,
											"end": 6062,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5906,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 5906,
											"end": 6062,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 6046,
											"end": 6049,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 6029,
											"end": 6043,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6026,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6017,
											"end": 6043,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6017,
											"end": 6043,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 6017,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6017,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5906,
											"end": 6062,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 5906,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6102,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 6077,
											"end": 6102,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6102,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6077,
											"end": 6102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6073,
											"end": 6324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6196,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 6177,
											"end": 6196,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6119,
											"end": 6312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6177,
											"end": 6196,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6226,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6257,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 6294,
											"end": 6297,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6291,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 6119,
											"end": 6312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6119,
											"end": 6312,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6119,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 6343,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4128,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8994,
											"end": 9022,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 8994,
											"end": 9022,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9060,
											"end": 9061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8994,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 8994,
											"end": 9057,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8994,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8994,
											"end": 9057,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8994,
											"end": 9057,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 8994,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8994,
											"end": 9061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 8986,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9177,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9131,
											"end": 9154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9166,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9178,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9213,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9197,
											"end": 9213,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9213,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9240,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 9189,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9324,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9403,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9435,
											"end": 9436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9436,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9447,
											"end": 9463,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9447,
											"end": 9463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9447,
											"end": 9463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9499,
											"end": 9514,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9478,
											"end": 9514,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9531,
											"end": 9550,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 9531,
											"end": 9550,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9561,
											"end": 9571,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9531,
											"end": 9550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9560,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 9525,
											"end": 9560,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9525,
											"end": 9590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8914,
											"end": 9598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8869,
											"end": 9598,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9128,
											"end": 9149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9224,
											"end": 9258,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 9118,
											"end": 9300,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6235,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6244,
											"end": 6306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6165,
											"end": 6393,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3585,
											"end": 3683,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3585,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3228,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3228,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4082,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3984,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4042,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4533,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 4576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1397,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1397,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1402,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1402,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1386,
											"end": 1430,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9489,
											"end": 9510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9546,
											"end": 9548,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9519,
											"end": 9549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9619,
											"name": "PUSH",
											"source": 10,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9558,
											"end": 9620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9636,
											"end": 9654,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9636,
											"end": 9654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9629,
											"end": 9663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9680,
											"end": 9699,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9680,
											"end": 9699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9479,
											"end": 9705,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1207,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8935,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 4270,
											"end": 4399,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 84,
											"end": 261,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 261,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 1527,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 266,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 409,
											"end": 415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 423,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 425,
											"end": 431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 464,
											"end": 467,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 496,
											"end": 505,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 487,
											"end": 494,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 479,
											"end": 511,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 476,
											"end": 478,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 476,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 476,
											"end": 478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 514,
											"end": 526,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 476,
											"end": 478,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 476,
											"end": 478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 563,
											"end": 572,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 550,
											"end": 573,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 582,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 607,
											"end": 612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 582,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 582,
											"end": 613,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 613,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 582,
											"end": 613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 637,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 695,
											"end": 713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 682,
											"end": 714,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 723,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 682,
											"end": 714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 723,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 723,
											"end": 756,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 756,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 723,
											"end": 756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 782,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 806,
											"end": 838,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 847,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 847,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 847,
											"end": 880,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 880,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 847,
											"end": 880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 899,
											"end": 906,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 944,
											"end": 947,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 929,
											"end": 948,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 929,
											"end": 948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 925,
											"end": 958,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 970,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 962,
											"end": 974,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 915,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1124,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1100,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1276,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1276,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1286,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1254,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1252,
											"end": 1254,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 1301,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1254,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1252,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1345,
											"end": 1349,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1350,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1422,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1454,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 1331,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1515,
											"end": 1521,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 444,
											"end": 1527,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1809,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1532,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1650,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1655,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1666,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1670,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1700,
											"end": 1709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1710,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1760,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1719,
											"end": 1721,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1765,
											"end": 1777,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1994,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1814,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1912,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1924,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 1929,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 1994,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1999,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1999,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2108,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2125,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2140,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2183,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2614,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2188,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2411,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2474,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2474,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2390,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2561,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2614,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2614,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5635,
											"end": 5986,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5635,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5876,
											"end": 5878,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "416C6C20746F6B656E20686173206265656E2077697468647261770000000000"
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 5945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5986,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7506,
											"end": 7906,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7506,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7708,
											"end": 7710,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7711,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7711,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7747,
											"end": 7749,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "596F7520636C61696D20616C6C206F722068617665206E6F7420626F75676874"
										},
										{
											"begin": 7781,
											"end": 7783,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7759,
											"end": 7821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7852,
											"end": 7854,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7906,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10068,
											"end": 10423,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 10068,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10309,
											"end": 10311,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10282,
											"end": 10312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10381,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10343,
											"end": 10345,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10382,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10416,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10423,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12235,
											"end": 12363,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12235,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12275,
											"end": 12278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12306,
											"end": 12307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12302,
											"end": 12308,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12296,
											"end": 12309,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12283,
											"end": 12363,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12368,
											"end": 12585,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 12368,
											"end": 12585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12434,
											"end": 12435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12478,
											"end": 12488,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12473,
											"end": 12476,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12469,
											"end": 12489,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12459,
											"end": 12490,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12513,
											"end": 12517,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12510,
											"end": 12511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12503,
											"end": 12518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12541,
											"end": 12545,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12538,
											"end": 12539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12546,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12585,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12590,
											"end": 13012,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 12590,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12680,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12722,
											"end": 12727,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12757,
											"end": 12764,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12755,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12744,
											"end": 12765,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12816,
											"end": 12820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12808,
											"end": 12814,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 12804,
											"end": 12821,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12795,
											"end": 12822,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12794,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12792,
											"end": 12794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12825,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12825,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 12825,
											"end": 12843,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12825,
											"end": 12843,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12825,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 12873,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12861,
											"end": 12883,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12858,
											"end": 12860,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12858,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12858,
											"end": 12860,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12895,
											"end": 12911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12895,
											"end": 12911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12895,
											"end": 12911,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 12895,
											"end": 12911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12858,
											"end": 12860,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 12858,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12996,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12996,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12996,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12996,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12934,
											"end": 12949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12934,
											"end": 12949,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12934,
											"end": 12949,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 12934,
											"end": 12949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12736,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12740,
											"end": 12743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 13012,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 13012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 13012,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 13012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 13012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 13012,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13017,
											"end": 13148,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 13017,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13077,
											"end": 13082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 13133,
											"end": 13141,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13232,
											"end": 13240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13274,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13287,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13287,
											"end": 13292,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13321,
											"end": 13325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13358,
											"end": 13359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13372,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13372,
											"end": 13377,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13403,
											"end": 13407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13422,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13416,
											"end": 13475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13475,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13416,
											"end": 13475,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13490,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13484,
											"end": 13614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13614,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13484,
											"end": 13614,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13396,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13396,
											"end": 13614,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13475,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13416,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13446,
											"end": 13447,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13437,
											"end": 13447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13460,
											"end": 13465,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13614,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13484,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13521,
											"end": 13524,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 13511,
											"end": 13519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13508,
											"end": 13525,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13505,
											"end": 13507,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13505,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13505,
											"end": 13507,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13584,
											"end": 13585,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13570,
											"end": 13586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13586,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 13599,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13599,
											"end": 13604,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13396,
											"end": 13614,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13396,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13396,
											"end": 13614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13698,
											"end": 13700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13688,
											"end": 13696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13701,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13679,
											"end": 13682,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 13673,
											"end": 13677,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13670,
											"end": 13683,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13666,
											"end": 13702,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13660,
											"end": 13662,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 13650,
											"end": 13658,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13647,
											"end": 13663,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13644,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 13636,
											"end": 13640,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13633,
											"end": 13645,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13629,
											"end": 13664,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13626,
											"end": 13703,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13735,
											"end": 13754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13735,
											"end": 13754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13735,
											"end": 13754,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 13767,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 13767,
											"end": 13772,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13814,
											"end": 13848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 13839,
											"end": 13847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13814,
											"end": 13848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 13814,
											"end": 13848,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13814,
											"end": 13848,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 13814,
											"end": 13848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13884,
											"end": 13890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13880,
											"end": 13881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13876,
											"end": 13882,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 13891,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13863,
											"end": 13870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13892,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13933,
											"end": 13953,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13959,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13212,
											"end": 13959,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13964,
											"end": 14132,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 13964,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14070,
											"end": 14071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14066,
											"end": 14067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14068,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14072,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14056,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14073,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14047,
											"end": 14048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14040,
											"end": 14049,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14033,
											"end": 14050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14074,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14117,
											"end": 14126,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14016,
											"end": 14132,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14137,
											"end": 14262,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 14137,
											"end": 14262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14206,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14202,
											"end": 14203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14199,
											"end": 14207,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14196,
											"end": 14198,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14210,
											"end": 14228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14247,
											"end": 14256,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14247,
											"end": 14256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14186,
											"end": 14262,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14267,
											"end": 14402,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 14267,
											"end": 14402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14327,
											"end": 14344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14327,
											"end": 14344,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 14324,
											"end": 14326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14394,
											"end": 14395,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14383,
											"end": 14396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14383,
											"end": 14396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14314,
											"end": 14402,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14407,
											"end": 14534,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14407,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14468,
											"end": 14478,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14463,
											"end": 14466,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14459,
											"end": 14479,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14456,
											"end": 14457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14449,
											"end": 14480,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14499,
											"end": 14503,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14496,
											"end": 14497,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14489,
											"end": 14504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14520,
											"end": 14521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14513,
											"end": 14528,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14671,
											"end": 14798,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 14671,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14732,
											"end": 14742,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14727,
											"end": 14730,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14723,
											"end": 14743,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14713,
											"end": 14744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14767,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 14760,
											"end": 14761,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14753,
											"end": 14768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14787,
											"end": 14791,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14784,
											"end": 14785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14777,
											"end": 14792,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 14934,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14803,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14878,
											"end": 14909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14878,
											"end": 14909,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 14925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14921,
											"end": 14922,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14914,
											"end": 14926,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"checkAdminAddress()": "cad5b0f7",
							"deposit(uint256)": "b6b55f25",
							"feeAnyone()": "3b5ef2ad",
							"getBalance(address)": "f8b2cb4f",
							"initialSaleInfor(address,address,address,uint256[9])": "8f1eae4c",
							"owner()": "8da5cb5b",
							"ownerClaimAndRefundToken()": "8edf18e6",
							"presaleStatus()": "acfb2355",
							"renounceOwnership()": "715018a6",
							"saleInfor()": "18856a2f",
							"saleTotalSupply()": "12e5d0b9",
							"status()": "200d2ed2",
							"totalFee()": "1df4ccfc",
							"transferOwnership(address)": "f2fde38b",
							"userClaimEmergency()": "ab33985a",
							"userClaimWhenSaleSuccess()": "ce441b18",
							"userFee(address)": "56c5f349",
							"userRefundEmergency()": "95661e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAdminAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAnyone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerClaimAndRefundToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberBuyer\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOwnerClaimSaleToken\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOwnerRefundBaseToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"saleIsBaseToken\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenForSale\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userClaimEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userClaimWhenSaleSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userRefundEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0x53554df5d14e61953b28bed3385ff0cd009ac6d87c7af5093f197e4232def6b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83118f0b5db4068ba7e61cd40a1ed84dbae42f4ea62f20f3aff6f22c3292763\",\"dweb:/ipfs/QmPNk4PS7gP7RSMxeXEQXq19gGJF2jc9rs5pssWpynJx1E\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2445,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2337,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 772,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)749_storage)"
							},
							{
								"astId": 776,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 779,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(PresaleStatus)767_storage"
							},
							{
								"astId": 782,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleTotalSupply",
								"offset": 0,
								"slot": "11",
								"type": "t_struct(SaleTotalSupply)740_storage"
							},
							{
								"astId": 785,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "13",
								"type": "t_struct(SaleInfor)735_storage"
							},
							{
								"astId": 788,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "25",
								"type": "t_contract(IERC20)663"
							},
							{
								"astId": 790,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "feeAnyone",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 793,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "admins",
								"offset": 0,
								"slot": "27",
								"type": "t_struct(AddressSet)2042_storage"
							},
							{
								"astId": 795,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "totalFee",
								"offset": 0,
								"slot": "29",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ERC20)585": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)663": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)749_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)749_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)2042_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2041,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1741_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(BuyerInfo)749_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 742,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 744,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 746,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 748,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(PresaleStatus)767_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 751,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 753,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 755,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 757,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 759,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numberBuyer",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 761,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isOwnerClaimSaleToken",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 763,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isOwnerRefundBaseToken",
										"offset": 1,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 766,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "admin",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(SaleInfor)735_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 710,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 713,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(ERC20)585"
									},
									{
										"astId": 716,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(ERC20)585"
									},
									{
										"astId": 718,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 720,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 722,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 724,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 726,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 728,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 730,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 732,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleIsBaseToken",
										"offset": 0,
										"slot": "10",
										"type": "t_bool"
									},
									{
										"astId": 734,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "amountTokenForSale",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(SaleTotalSupply)740_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleTotalSupply",
								"members": [
									{
										"astId": 737,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "hardCap",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 739,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "softCap",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1741_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1736,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1740,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO DUP12 0xDB BYTE 0xC4 0x22 CALLDATACOPY 0x2B 0xFC DUP6 DIFFICULTY 0xAC 0x4F SWAP2 CODESIZE 0x4B BYTE 0xC8 0xB2 0xAC CALLCODE 0xE6 MSTORE 0xAB 0xD6 0xB8 0x2E 0xCA EXP 0x24 0x27 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "1265:11783:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1265:11783:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO DUP12 0xDB BYTE 0xC4 0x22 CALLDATACOPY 0x2B 0xFC DUP6 DIFFICULTY 0xAC 0x4F SWAP2 CODESIZE 0x4B BYTE 0xC8 0xB2 0xAC CALLCODE 0xE6 MSTORE 0xAB 0xD6 0xB8 0x2E 0xCA EXP 0x24 0x27 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "1265:11783:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033",
									".code": [
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2337,
								"contract": "Utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2445,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/SafeMath.sol\":497:7008  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/SafeMath.sol\":497:7008  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xEC 0xC5 CALL PUSH18 0xB47A76A08F28CB37D60F5553F35402888369 0xA8 SWAP13 STATICCALL 0xA6 0xAF CODECOPY 0xDE RETURNDATASIZE 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "497:6511:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;497:6511:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xEC 0xC5 CALL PUSH18 0xB47A76A08F28CB37D60F5553F35402888369 0xA8 SWAP13 STATICCALL 0xA6 0xAF CODECOPY 0xDE RETURNDATASIZE 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "497:6511:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033",
									".code": [
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2097  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2097  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD7 SWAP7 NOT PUSH3 0x224ED4 0x1E MSTORE8 SELFDESTRUCT DUP6 0xB1 0xDB PUSH3 0xF14EA1 CREATE2 0xB6 PUSH3 0xA15DC4 CALLER 0x2B 0xEB SWAP4 CALL PUSH3 0x5AC164 PUSH20 0x6F6C634300080500330000000000000000000000 ",
							"sourceMap": "244:1853:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1853:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD7 SWAP7 NOT PUSH3 0x224ED4 0x1E MSTORE8 SELFDESTRUCT DUP6 0xB1 0xDB PUSH3 0xF14EA1 CREATE2 0xB6 PUSH3 0xA15DC4 CALLER 0x2B 0xEB SWAP4 CALL PUSH3 0x5AC164 PUSH20 0x6F6C634300080500330000000000000000000000 ",
							"sourceMap": "244:1853:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033",
									".code": [
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:143:34:\n    |\n143 |         if(!checkAdminAddress()) {\n    |                                  ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5042,
					"file": "Ethereum/Presale.sol",
					"start": 4801
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:149:9:\n    |\n149 |         uint256 remainingByUser = saleInfor.maxSpendPerBuyer - buyer.baseDeposit;\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5324,
					"file": "Ethereum/Presale.sol",
					"start": 5052
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:152:9:\n    |\n152 |         require(real_amount_in <= allowance, \"Sale is success\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5390,
					"file": "Ethereum/Presale.sol",
					"start": 5335
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:153:9:\n    |\n153 |         uint256 tokenSold = (real_amount_in.\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5581,
					"file": "Ethereum/Presale.sol",
					"start": 5401
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:156:9:\n    |\n156 |         buyer.baseDeposit += amount_in;\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6062,
					"file": "Ethereum/Presale.sol",
					"start": 5609
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:166:9:\n    |\n166 |         if(!saleInfor.saleIsBaseToken) {\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6324,
					"file": "Ethereum/Presale.sol",
					"start": 6073
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1730
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "135:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "159:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 1731,
							"src": "191:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "1442:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1442:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1451:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1451:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1459:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1459:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "225:1197:0",
								"text": " @dev Implementation of the {IERC20} interface.\nz\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								1730
							],
							"name": "ERC20",
							"nameLocation": "1433:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1517:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1481:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1500:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1591:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1535:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1535:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1554:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1573:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1627:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1611:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1663:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1648:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1648:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1690:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1675:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1675:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2074:60:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2085:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2085:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2109:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2109:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1706:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2030:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2051:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:0"
									},
									"scope": 585,
									"src": "2018:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2273:31:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2284:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2142:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2213:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2240:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2217:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2258:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2258:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:0"
									},
									"scope": 585,
									"src": "2204:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2494:33:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2505:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2312:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2432:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2461:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2479:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:15:0"
									},
									"scope": 585,
									"src": "2423:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3233:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3251:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3244:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2535:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3175:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3183:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:9:0"
									},
									"scope": 585,
									"src": "3166:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3396:38:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3414:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3407:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3269:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3335:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3369:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3346:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:9:0"
									},
									"scope": 585,
									"src": "3326:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3580:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3591:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3442:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3506:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3553:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3524:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3516:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3515:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:9:0"
									},
									"scope": 585,
									"src": "3497:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3915:108:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3934:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3926:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3926:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "3942:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3942:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3926:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3982:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3965:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3965:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "4004:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3632:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3839:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3891:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3848:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3909:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:6:0"
									},
									"scope": 585,
									"src": "3830:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4184:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4202:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4202:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4202:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4195:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4031:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4095:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4157:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4113:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4105:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4120:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4175:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:9:0"
									},
									"scope": 585,
									"src": "4086:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4646:112:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4665:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4657:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4657:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "4673:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4673:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4657:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4705:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4696:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4696:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4739:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4245:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4566:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4622:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4599:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4591:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4573:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:6:0"
									},
									"scope": 585,
									"src": "4557:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5475:158:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5494:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5486:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5486:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "5504:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5486:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5543:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5558:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5527:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5527:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5527:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5592:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5576:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5576:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5576:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5614:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4766:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5347:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5451:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5393:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5359:76:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5468:6:0"
									},
									"scope": 585,
									"src": "5338:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6136:144:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6155:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "6147:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6147:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "6163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6163:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6147:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6195:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6221:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6211:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6211:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6211:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6186:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6186:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6186:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6261:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5641:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6051:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6077:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6094:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6086:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6130:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:6:0"
									},
									"scope": 585,
									"src": "6042:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6882:337:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6901:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6893:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6893:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "6909:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6893:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6940:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6932:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6959:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6932:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "7003:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7023:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7003:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7040:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6995:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6995:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "7091:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "7125:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "7132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7141:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "7160:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7141:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "7116:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7116:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "7116:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7200:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6288:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6792:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6818:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6810:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6835:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6827:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6876:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:6:0"
									},
									"scope": 585,
									"src": "6783:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7810:559:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7829:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7837:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7837:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7829:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7849:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7821:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7821:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7908:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7914:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7914:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7908:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7926:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7900:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8004:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7977:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7977:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7977:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8036:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "8028:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8050:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "8060:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8050:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8028:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "8084:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8099:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8107:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "8076:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "8159:75:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8184:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8194:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8184:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8202:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "8216:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8202:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8184:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8184:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8244:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8254:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8244:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8261:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8244:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8244:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8300:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8280:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8350:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8324:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8324:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7227:465:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7707:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7735:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7727:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7758:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7716:76:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7810:0:0"
									},
									"scope": 585,
									"src": "7698:671:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8721:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8759:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8751:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8740:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8763:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8732:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8732:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8839:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8831:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8831:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8831:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8810:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8810:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8872:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8888:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8872:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8872:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8905:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8905:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8927:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8905:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8905:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8958:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8958:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8949:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8949:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8944:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9019:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9019:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8999:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8999:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8377:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8665:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8670:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8721:0:0"
									},
									"scope": 585,
									"src": "8656:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9453:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9491:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9483:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9483:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9483:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9472:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9495:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9464:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9464:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9544:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9544:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9544:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9614:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9606:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9631:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9606:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9668:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9686:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9668:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9694:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9660:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9742:81:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9777:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9767:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9788:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9788:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9767:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9767:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9833:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9849:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9833:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9833:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9899:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9891:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9891:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9891:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9873:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9873:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9868:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9960:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9952:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9952:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9952:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9923:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9923:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9923:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "9063:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9397:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9428:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9420:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9453:0:0"
									},
									"scope": 585,
									"src": "9388:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10534:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10553:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10570:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10562:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10562:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10562:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10553:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10574:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10545:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10545:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10632:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10643:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10643:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10632:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10655:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10624:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10624:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10705:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10717:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10705:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10705:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10705:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10705:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10766:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10757:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10757:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10752:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9987:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10426:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10469:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10503:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10434:82:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10534:0:0"
									},
									"scope": 585,
									"src": "10417:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "11212:329:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11231:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "11223:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "11260:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "11267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11250:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11250:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11223:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "11290:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11315:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11315:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11310:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11310:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11310:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11290:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "11286:248:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "11329:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11352:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11372:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11352:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11380:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11344:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11344:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11427:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11465:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11472:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11481:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11500:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11481:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11456:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11456:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11456:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10805:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11097:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11123:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11181:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11173:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11112:82:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11212:0:0"
									},
									"scope": 585,
									"src": "11088:453:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12264:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11549:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12150:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12189:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12212:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12204:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12233:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12225:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12170:76:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12264:0:0"
									},
									"scope": 585,
									"src": "12141:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12992:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "12274:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12879:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12917:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12909:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12940:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12932:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12961:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12953:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12898:76:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12992:0:0"
									},
									"scope": 585,
									"src": "12870:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1424:11573:0",
							"usedErrors": []
						}
					],
					"src": "108:12889:0"
				},
				"id": 0
			},
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "220:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nameLocation": "409:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "418:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "440:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "460:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:1"
									},
									"src": "403:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nameLocation": "646:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "655:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "678:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "703:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:1"
									},
									"src": "640:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:1"
									},
									"scope": 663,
									"src": "800:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "1002:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:1"
									},
									"scope": 663,
									"src": "943:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "1027:208:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1250:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1267:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1259:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1279:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1271:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1305:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1305:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:6:1"
									},
									"scope": 663,
									"src": "1241:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1319:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1604:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1622:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1614:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1637:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1629:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1669:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:9:1"
									},
									"scope": 663,
									"src": "1595:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1686:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2356:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2372:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2364:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2389:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2381:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2415:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2415:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:6:1"
									},
									"scope": 663,
									"src": "2347:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2429:295:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2739:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2785:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2814:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2806:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:76:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2846:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2846:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:6:1"
									},
									"scope": 663,
									"src": "2730:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "210:2645:1",
							"usedErrors": []
						}
					],
					"src": "109:2748:1"
				},
				"id": 1
			},
			"ERC20/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "140:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "316:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "431:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:2"
									},
									"scope": 688,
									"src": "392:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "559:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:2"
									},
									"scope": 688,
									"src": "518:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "698:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:2"
									},
									"scope": 688,
									"src": "655:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "288:422:2",
							"usedErrors": []
						}
					],
					"src": "113:599:2"
				},
				"id": 2
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"Context": [
							1730
						],
						"ERC20": [
							585
						],
						"EnumerableSet": [
							2329
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						],
						"Ownable": [
							2434
						],
						"Presale": [
							1708
						],
						"ReentrancyGuard": [
							2474
						],
						"SafeMath": [
							2786
						],
						"TransferHelper": [
							2978
						]
					},
					"id": 1709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:3"
						},
						{
							"absolutePath": "ERC20/ERC20.sol",
							"file": "../ERC20/ERC20.sol",
							"id": 691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 586,
							"src": "120:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 2475,
							"src": "150:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 2979,
							"src": "190:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 2330,
							"src": "229:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 2435,
							"src": "267:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 696,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 1731,
							"src": "299:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/SafeMath.sol",
							"file": "../Utils/SafeMath.sol",
							"id": 697,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1709,
							"sourceUnit": 2787,
							"src": "331:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 698,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2474,
										"src": "390:15:3"
									},
									"id": 699,
									"nodeType": "InheritanceSpecifier",
									"src": "390:15:3"
								},
								{
									"baseName": {
										"id": 700,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2434,
										"src": "407:7:3"
									},
									"id": 701,
									"nodeType": "InheritanceSpecifier",
									"src": "407:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1708,
							"linearizedBaseContracts": [
								1708,
								2434,
								1730,
								2474
							],
							"name": "Presale",
							"nameLocation": "379:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 705,
									"libraryName": {
										"id": 702,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2329,
										"src": "427:13:3"
									},
									"nodeType": "UsingForDirective",
									"src": "421:49:3",
									"typeName": {
										"id": 704,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 703,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2042,
											"src": "445:24:3"
										},
										"referencedDeclaration": 2042,
										"src": "445:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 708,
									"libraryName": {
										"id": 706,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2786,
										"src": "482:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "476:27:3",
									"typeName": {
										"id": 707,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 735,
									"members": [
										{
											"constant": false,
											"id": 710,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "555:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "539:28:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 709,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "539:15:3",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 713,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "584:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "578:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ERC20_$585",
												"typeString": "contract ERC20"
											},
											"typeName": {
												"id": 712,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 711,
													"name": "ERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "578:5:3"
												},
												"referencedDeclaration": 585,
												"src": "578:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 716,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "610:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "604:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ERC20_$585",
												"typeString": "contract ERC20"
											},
											"typeName": {
												"id": 715,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 714,
													"name": "ERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "604:5:3"
												},
												"referencedDeclaration": 585,
												"src": "604:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 718,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "638:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "630:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 717,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "630:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 720,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "667:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "659:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 719,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 722,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "695:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "687:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 721,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "687:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 724,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "721:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "713:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 723,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 726,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "756:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "748:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 725,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "748:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 728,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "791:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "783:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 727,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "783:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 730,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "819:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "811:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 729,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 732,
											"mutability": "mutable",
											"name": "saleIsBaseToken",
											"nameLocation": "843:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "838:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 731,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "838:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 734,
											"mutability": "mutable",
											"name": "amountTokenForSale",
											"nameLocation": "877:18:3",
											"nodeType": "VariableDeclaration",
											"scope": 735,
											"src": "869:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 733,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "869:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "518:9:3",
									"nodeType": "StructDefinition",
									"scope": 1708,
									"src": "511:392:3",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.SaleTotalSupply",
									"id": 740,
									"members": [
										{
											"constant": false,
											"id": 737,
											"mutability": "mutable",
											"name": "hardCap",
											"nameLocation": "957:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 740,
											"src": "949:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 736,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "949:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 739,
											"mutability": "mutable",
											"name": "softCap",
											"nameLocation": "983:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 740,
											"src": "975:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 738,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "975:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleTotalSupply",
									"nameLocation": "922:15:3",
									"nodeType": "StructDefinition",
									"scope": 1708,
									"src": "915:83:3",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 749,
									"members": [
										{
											"constant": false,
											"id": 742,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "1042:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 749,
											"src": "1034:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 741,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 744,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "1072:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 749,
											"src": "1064:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 743,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1064:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 746,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "1101:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 749,
											"src": "1093:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 745,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1093:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 748,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1132:18:3",
											"nodeType": "VariableDeclaration",
											"scope": 749,
											"src": "1124:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 747,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "1013:9:3",
									"nodeType": "StructDefinition",
									"scope": 1708,
									"src": "1006:152:3",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 767,
									"members": [
										{
											"constant": false,
											"id": 751,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "1206:18:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1198:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 750,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1198:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 753,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "1243:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1235:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 752,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1235:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 755,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1276:18:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1268:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 754,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1268:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 757,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1313:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1305:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 756,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1305:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 759,
											"mutability": "mutable",
											"name": "numberBuyer",
											"nameLocation": "1349:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1341:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 758,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1341:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 761,
											"mutability": "mutable",
											"name": "isOwnerClaimSaleToken",
											"nameLocation": "1376:21:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1371:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 760,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1371:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 763,
											"mutability": "mutable",
											"name": "isOwnerRefundBaseToken",
											"nameLocation": "1413:22:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1408:27:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 762,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1408:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 766,
											"mutability": "mutable",
											"name": "admin",
											"nameLocation": "1456:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "1446:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 765,
												"nodeType": "ArrayTypeName",
												"src": "1446:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "1173:13:3",
									"nodeType": "StructDefinition",
									"scope": 1708,
									"src": "1166:303:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 772,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1518:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1481:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$749_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 771,
										"keyType": {
											"id": 768,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$749_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 770,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 769,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 749,
												"src": "1500:9:3"
											},
											"referencedDeclaration": 749,
											"src": "1500:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 776,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1569:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1534:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 775,
										"keyType": {
											"id": 773,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1542:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1534:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 774,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1553:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 779,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1604:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1583:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 778,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 777,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 767,
											"src": "1583:13:3"
										},
										"referencedDeclaration": 767,
										"src": "1583:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$767_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "12e5d0b9",
									"id": 782,
									"mutability": "mutable",
									"name": "saleTotalSupply",
									"nameLocation": "1647:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1624:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleTotalSupply_$740_storage",
										"typeString": "struct Presale.SaleTotalSupply"
									},
									"typeName": {
										"id": 781,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 780,
											"name": "SaleTotalSupply",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 740,
											"src": "1624:15:3"
										},
										"referencedDeclaration": 740,
										"src": "1624:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleTotalSupply_$740_storage_ptr",
											"typeString": "struct Presale.SaleTotalSupply"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 785,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1686:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1669:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 784,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 783,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 735,
											"src": "1669:9:3"
										},
										"referencedDeclaration": 735,
										"src": "1669:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$735_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 788,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1716:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1702:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$663",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 787,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 786,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 663,
											"src": "1702:6:3"
										},
										"referencedDeclaration": 663,
										"src": "1702:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$663",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b5ef2ad",
									"id": 790,
									"mutability": "mutable",
									"name": "feeAnyone",
									"nameLocation": "1742:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1727:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 789,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1791:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1758:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$2042_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 792,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 791,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2042,
											"src": "1758:24:3"
										},
										"referencedDeclaration": 2042,
										"src": "1758:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1df4ccfc",
									"id": 795,
									"mutability": "mutable",
									"name": "totalFee",
									"nameLocation": "1820:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1708,
									"src": "1805:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1805:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "1858:82:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 800,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "1893:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1893:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 798,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "1877:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$2042_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2123,
																"src": "1877:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2042_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2042_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1877:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061646d696e",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1908:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															},
															"value": "Not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1869:51:3"
											},
											{
												"id": 806,
												"nodeType": "PlaceholderStatement",
												"src": "1931:1:3"
											}
										]
									},
									"id": 808,
									"name": "onlyAdmin",
									"nameLocation": "1846:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1855:2:3"
									},
									"src": "1837:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1976:100:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 811,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "1995:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1995:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 813,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "2011:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "presaleOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "2011:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1995:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792070726573616c65206f776e6572",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2035:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab",
																"typeString": "literal_string \"Only presale owner\""
															},
															"value": "Only presale owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab",
																"typeString": "literal_string \"Only presale owner\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1987:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1987:69:3"
											},
											{
												"id": 819,
												"nodeType": "PlaceholderStatement",
												"src": "2067:1:3"
											}
										]
									},
									"id": 821,
									"name": "onlyPresaleOwner",
									"nameLocation": "1957:16:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:3"
									},
									"src": "1948:128:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "2109:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "2128:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2128:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 826,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "2144:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "presaleOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "2144:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2128:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742073616c65206f776e6572",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															},
															"value": "Not sale owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2120:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2120:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "2120:65:3"
											},
											{
												"id": 832,
												"nodeType": "PlaceholderStatement",
												"src": "2196:1:3"
											}
										]
									},
									"id": 834,
									"name": "onlySaleOwner",
									"nameLocation": "2093:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2106:2:3"
									},
									"src": "2084:121:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "2235:230:3",
										"statements": [
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "2246:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$663",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2259:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 838,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "2253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2253:49:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"src": "2246:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$663",
														"typeString": "contract IERC20"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "2246:56:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836436362343165656441356130373330373646334537644331363134433138356235664134316544",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2324:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 843,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2313:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2042_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2069,
														"src": "2313:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2042_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2042_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "2313:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307834663042313262424634304663313832353539383232413562316442364433346462433345303136",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2389:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 849,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2378:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2042_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2069,
														"src": "2378:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2042_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2042_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "2378:54:3"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 855,
														"name": "feeAnyone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "2443:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2455:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "2443:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "2443:14:3"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2224:2:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 1708,
									"src": "2213:252:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "2643:1020:3",
										"statements": [
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 875,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2654:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "2654:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 878,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2679:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2654:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "2654:38:3"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 881,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2703:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "2703:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 884,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "2725:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"src": "2703:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2703:32:3"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 887,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2746:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 716,
														"src": "2746:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 890,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "2768:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"src": "2746:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "2746:32:3"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 893,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2789:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "2789:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 896,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "2812:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 898,
															"indexExpression": {
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2818:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2812:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2823:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 903,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 785,
																							"src": "2842:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 904,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "saleToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 713,
																						"src": "2842:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 902,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "2836:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2836:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "2836:35:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2836:37:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2828:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 900,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2828:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2828:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2823:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2812:62:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2789:85:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "2789:85:3"
											},
											{
												"expression": {
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 913,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2885:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2885:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 916,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2907:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 918,
														"indexExpression": {
															"hexValue": "31",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2913:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2907:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2885:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "2885:30:3"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 921,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2926:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 722,
														"src": "2926:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 924,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2946:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 926,
														"indexExpression": {
															"hexValue": "32",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2952:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2946:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "2926:28:3"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 929,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2965:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2965:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 932,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2994:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 934,
														"indexExpression": {
															"hexValue": "33",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3000:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2994:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2965:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "2965:37:3"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 937,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3013:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 726,
														"src": "3013:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 940,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3042:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 942,
															"indexExpression": {
																"hexValue": "34",
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3048:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3042:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3053:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 947,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 785,
																							"src": "3073:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 948,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "baseToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 716,
																						"src": "3073:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 946,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3067:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3067:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3067:35:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3067:37:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3059:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 944,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3059:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3059:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3053:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3042:63:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3013:92:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "3013:92:3"
											},
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 957,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3116:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3116:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 960,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3138:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 962,
														"indexExpression": {
															"hexValue": "35",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3144:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3138:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3116:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "3116:30:3"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 965,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3157:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "3157:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 968,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3178:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 970,
														"indexExpression": {
															"hexValue": "36",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3184:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3178:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3157:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "3157:29:3"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 973,
															"name": "saleTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "3197:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleTotalSupply_$740_storage",
																"typeString": "struct Presale.SaleTotalSupply storage ref"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "hardCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 737,
														"src": "3197:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 976,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 978,
															"indexExpression": {
																"hexValue": "37",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3229:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3223:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3234:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 983,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 785,
																							"src": "3254:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 984,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "baseToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 716,
																						"src": "3254:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 982,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3248:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3248:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3248:35:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3248:37:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3240:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 980,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3240:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3240:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3234:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3223:63:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3197:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "3197:89:3"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 993,
															"name": "saleTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "3297:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleTotalSupply_$740_storage",
																"typeString": "struct Presale.SaleTotalSupply storage ref"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "softCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 739,
														"src": "3297:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 996,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3323:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 998,
															"indexExpression": {
																"hexValue": "38",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3329:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3323:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3334:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1003,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 785,
																							"src": "3353:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 1004,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "baseToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 716,
																						"src": "3353:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 1002,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3347:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3347:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3347:35:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3347:37:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3339:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3339:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3339:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3334:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3323:62:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3297:88:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3297:88:3"
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1013,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3396:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 732,
														"src": "3396:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1018,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "3432:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3424:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3424:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3424:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1022,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "3449:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "baseToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 716,
																	"src": "3449:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3441:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1020,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3441:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3441:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3424:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3396:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "3396:73:3"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1028,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3480:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "3480:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1034,
																		"name": "saleTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "3536:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleTotalSupply_$740_storage",
																			"typeString": "struct Presale.SaleTotalSupply storage ref"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hardCap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 737,
																	"src": "3536:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1031,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "3511:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 718,
																	"src": "3511:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2680,
																"src": "3511:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3511:49:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3603:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1041,
																									"name": "saleInfor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 785,
																									"src": "3622:9:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																										"typeString": "struct Presale.SaleInfor storage ref"
																									}
																								},
																								"id": 1042,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "baseToken",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 716,
																								"src": "3622:19:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							],
																							"id": 1040,
																							"name": "ERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 585,
																							"src": "3616:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																								"typeString": "type(contract ERC20)"
																							}
																						},
																						"id": 1043,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3616:26:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					},
																					"id": 1044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 74,
																					"src": "3616:35:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3616:37:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3608:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1038,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3608:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3608:46:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3603:51:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1048,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3602:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3511:144:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3480:175:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "3480:175:3"
											}
										]
									},
									"functionSelector": "8f1eae4c",
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "2482:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "2525:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2509:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "2555:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2549:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 864,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 863,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "2549:5:3"
													},
													"referencedDeclaration": 585,
													"src": "2549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "2582:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2576:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 866,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "2576:5:3"
													},
													"referencedDeclaration": 585,
													"src": "2576:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "2621:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "2603:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2603:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 871,
													"length": {
														"hexValue": "39",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2611:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "2603:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:135:3"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2643:0:3"
									},
									"scope": 1708,
									"src": "2473:1190:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "3719:290:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1058,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3733:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1060,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3751:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "3751:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3733:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "3825:177:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1066,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3843:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3843:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1068,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "3861:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 722,
																	"src": "3861:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3843:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1076,
																"nodeType": "Block",
																"src": "3938:53:3",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3964:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 1057,
																		"id": 1075,
																		"nodeType": "Return",
																		"src": "3957:8:3"
																	}
																]
															},
															"id": 1077,
															"nodeType": "IfStatement",
															"src": "3840:151:3",
															"trueBody": {
																"id": 1073,
																"nodeType": "Block",
																"src": "3880:54:3",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3906:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 1057,
																		"id": 1072,
																		"nodeType": "Return",
																		"src": "3899:8:3"
																	}
																]
															}
														}
													]
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "3730:272:3",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "3772:49:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3794:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1057,
															"id": 1064,
															"nodeType": "Return",
															"src": "3787:8:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "3681:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3687:2:3"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "3710:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:9:3"
									},
									"scope": 1708,
									"src": "3672:337:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "4073:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1088,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "4107:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4107:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1086,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4091:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2042_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2123,
														"src": "4091:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2042_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2042_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1091,
												"nodeType": "Return",
												"src": "4084:36:3"
											}
										]
									},
									"functionSelector": "cad5b0f7",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAdminAddress",
									"nameLocation": "4027:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4044:2:3"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "4067:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4067:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:6:3"
									},
									"scope": 1708,
									"src": "4018:110:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "4200:2143:3",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "4289:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4271:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1101,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1100,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 749,
																"src": "4271:9:3"
															},
															"referencedDeclaration": 749,
															"src": "4271:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"baseExpression": {
														"id": 1103,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "4297:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$749_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1106,
													"indexExpression": {
														"expression": {
															"id": 1104,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4307:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4307:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4297:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$749_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4271:47:3"
											},
											{
												"assignments": [
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "amount_in",
														"nameLocation": "4337:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4329:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4329:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"id": 1110,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "4349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4329:27:3"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "real_amount_in",
														"nameLocation": "4375:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4367:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4367:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"id": 1114,
													"name": "amount_in",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1109,
													"src": "4392:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4367:34:3"
											},
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4420:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4412:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4412:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"hexValue": "30",
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4426:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4412:15:3"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "fullPercenFee",
														"nameLocation": "4446:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4438:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4438:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"hexValue": "31303030",
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4462:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4438:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4485:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4485:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1127,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "4498:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4485:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c656173652070726f76696465206e617669746520636f696e",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4514:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773",
																"typeString": "literal_string \"Please provide navite coin\""
															},
															"value": "Please provide navite coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773",
																"typeString": "literal_string \"Please provide navite coin\""
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4477:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4477:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "4477:66:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "4562:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1134,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "4580:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "minSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 724,
																"src": "4580:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4562:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682076616c7565",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4626:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															},
															"value": "Not enough value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4554:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:101:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "4554:101:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1141,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "4674:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1142,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "4692:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "maxSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 726,
																"src": "4692:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4674:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f766572666c6f772076616c7565",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4738:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c",
																"typeString": "literal_string \"Overflow value\""
															},
															"value": "Overflow value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c",
																"typeString": "literal_string \"Overflow value\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4666:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4666:99:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "4666:99:3"
											},
											{
												"condition": {
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4779:20:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1148,
															"name": "checkAdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "4780:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4780:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "4776:266:3",
												"trueBody": {
													"id": 1172,
													"nodeType": "Block",
													"src": "4801:241:3",
													"statements": [
														{
															"expression": {
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1151,
																	"name": "real_amount_in",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "4816:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1162,
																			"name": "fullPercenFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "4952:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"id": 1158,
																							"name": "real_amount_in",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1113,
																							"src": "4900:14:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"id": 1154,
																											"name": "feeAnyone",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 790,
																											"src": "4853:9:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 1152,
																											"name": "fullPercenFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1121,
																											"src": "4835:13:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1153,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2665,
																										"src": "4835:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1155,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4835:28:3",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1156,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4834:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1157,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2680,
																						"src": "4834:65:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4834:81:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1160,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4833:83:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2695,
																		"src": "4833:118:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4833:133:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4816:150:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "4816:150:3"
														},
														{
															"expression": {
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1166,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "4981:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1167,
																		"name": "amount_in",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "4987:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1168,
																		"name": "real_amount_in",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "4999:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4987:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4981:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1171,
															"nodeType": "ExpressionStatement",
															"src": "4981:32:3"
														}
													]
												}
											},
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "remainingByUser",
														"nameLocation": "5060:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "5052:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5052:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1176,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5078:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 726,
														"src": "5078:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1178,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "5107:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "5107:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5078:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5052:72:3"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "remainingByPool",
														"nameLocation": "5143:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "5135:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5135:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1184,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5161:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "5161:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1186,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5192:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalBaseCollected",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "5192:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5161:63:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5135:89:3"
											},
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "5243:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "5235:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5235:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1192,
															"name": "remainingByUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "5255:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1193,
															"name": "remainingByPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5273:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5255:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1196,
														"name": "remainingByUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "5309:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5255:69:3",
													"trueExpression": {
														"id": 1195,
														"name": "remainingByPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "5291:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5235:89:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1200,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "5343:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1201,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "5361:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5343:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652069732073756363657373",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5372:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374",
																"typeString": "literal_string \"Sale is success\""
															},
															"value": "Sale is success"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374",
																"typeString": "literal_string \"Sale is success\""
															}
														],
														"id": 1199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5335:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "5335:55:3"
											},
											{
												"assignments": [
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1207,
														"mutability": "mutable",
														"name": "tokenSold",
														"nameLocation": "5409:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "5401:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1206,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5401:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5527:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1218,
																									"name": "saleInfor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 785,
																									"src": "5547:9:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																										"typeString": "struct Presale.SaleInfor storage ref"
																									}
																								},
																								"id": 1219,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "baseToken",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 716,
																								"src": "5547:19:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							],
																							"id": 1217,
																							"name": "ERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 585,
																							"src": "5541:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																								"typeString": "type(contract ERC20)"
																							}
																						},
																						"id": 1220,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5541:26:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					},
																					"id": 1221,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 74,
																					"src": "5541:35:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5541:37:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5533:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1215,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5533:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5533:46:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5527:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1210,
																				"name": "saleInfor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 785,
																				"src": "5471:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																					"typeString": "struct Presale.SaleInfor storage ref"
																				}
																			},
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tokenPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 718,
																			"src": "5471:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1208,
																			"name": "real_amount_in",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "5422:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2680,
																		"src": "5422:48:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5422:70:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2695,
																"src": "5422:104:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5422:158:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1226,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5421:160:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5401:180:3"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1228,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "5609:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "5609:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1231,
														"name": "amount_in",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "5630:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5609:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "5609:30:3"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1234,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "5650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 744,
														"src": "5650:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1237,
														"name": "tokenSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "5670:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5650:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "5650:29:3"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1240,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5690:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBaseCollected",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "5690:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1243,
														"name": "real_amount_in",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "5726:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5690:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "5690:50:3"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1246,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5751:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenSold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "5751:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1249,
														"name": "tokenSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "5783:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5751:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "5751:41:3"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5803:27:3",
													"subExpression": {
														"expression": {
															"id": 1252,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5803:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numberBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 759,
														"src": "5803:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "5803:27:3"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "userFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "5841:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1260,
														"indexExpression": {
															"expression": {
																"id": 1258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5849:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5849:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5841:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1261,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5864:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5841:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "5841:26:3"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1264,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "5878:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1265,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5890:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5878:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "5878:15:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1268,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5909:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 732,
														"src": "5909:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1270,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "5938:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1271,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "5955:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5938:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"expression": {
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5962:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5962:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5938:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5909:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "5906:156:3",
												"trueBody": {
													"id": 1291,
													"nodeType": "Block",
													"src": "5973:89:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1283,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6017:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "6017:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1285,
																				"name": "real_amount_in",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "6029:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6017:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1287,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "6046:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6017:32:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1279,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5996:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5996:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5988:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1277,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5988:8:3",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5988:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "5988:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5988:62:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1290,
															"nodeType": "ExpressionStatement",
															"src": "5988:62:3"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6076:26:3",
													"subExpression": {
														"expression": {
															"id": 1293,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "6077:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 732,
														"src": "6077:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "6073:251:3",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "6104:220:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1301,
																					"name": "saleInfor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "6177:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																						"typeString": "struct Presale.SaleInfor storage ref"
																					}
																				},
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "baseToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 716,
																				"src": "6177:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6169:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1299,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6169:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6169:28:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1304,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6216:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6216:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1308,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6253:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Presale_$1708",
																					"typeString": "contract Presale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Presale_$1708",
																					"typeString": "contract Presale"
																				}
																			],
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6245:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1306,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6245:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6245:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1310,
																			"name": "real_amount_in",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "6277:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1311,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "6294:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6277:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1296,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2978,
																		"src": "6119:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2978_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2921,
																	"src": "6119:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6119:193:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "ExpressionStatement",
															"src": "6119:193:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2473,
												"src": "4187:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4187:12:3"
										}
									],
									"name": "deposit",
									"nameLocation": "4145:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4161:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4153:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:17:3"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4200:0:3"
									},
									"scope": 1708,
									"src": "4136:2207:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "6403:827:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1324,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "6422:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6422:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6434:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6422:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652073756365737373",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6437:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41",
																"typeString": "literal_string \"Sale sucesss\""
															},
															"value": "Sale sucesss"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41",
																"typeString": "literal_string \"Sale sucesss\""
															}
														],
														"id": 1323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6414:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6414:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "6414:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1332,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "6472:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenSold",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 753,
																	"src": "6472:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1334,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "6503:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 755,
																	"src": "6503:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6472:63:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6538:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6472:67:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6558:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															},
															"value": "All token has been withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6464:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6464:134:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "6464:134:3"
											},
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "6627:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1423,
														"src": "6609:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1343,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1342,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 749,
																"src": "6609:9:3"
															},
															"referencedDeclaration": 749,
															"src": "6609:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1349,
												"initialValue": {
													"baseExpression": {
														"id": 1345,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "6635:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$749_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1348,
													"indexExpression": {
														"expression": {
															"id": 1346,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6645:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6645:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6635:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$749_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6609:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1351,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "6675:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 744,
																"src": "6675:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1353,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "6694:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalTokenWithDraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "6694:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520636c61696d20616c6c206f722068617665206e6f7420626f7567687420796574",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6720:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4",
																"typeString": "literal_string \"You claim all or have not bought yet\""
															},
															"value": "You claim all or have not bought yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4",
																"typeString": "literal_string \"You claim all or have not bought yet\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6667:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6667:92:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "6667:92:3"
											},
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "amountClaim",
														"nameLocation": "6778:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1423,
														"src": "6770:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6770:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6922:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6914:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1376,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6914:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6914:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1371,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "6864:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tokenOwner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 744,
																			"src": "6864:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1366,
																								"name": "saleInfor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 785,
																								"src": "6812:9:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																									"typeString": "struct Presale.SaleInfor storage ref"
																								}
																							},
																							"id": 1367,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "claimFee",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 730,
																							"src": "6812:18:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 1363,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6802:4:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"id": 1362,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "6794:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1361,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "6794:7:3",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1364,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6794:13:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2665,
																						"src": "6794:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6794:37:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1369,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6793:39:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2680,
																		"src": "6793:70:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6793:88:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1374,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6792:90:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2695,
														"src": "6792:121:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6792:136:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6770:158:3"
											},
											{
												"expression": {
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1382,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "6939:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "6939:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1385,
														"name": "amountClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "6975:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6939:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "6939:47:3"
											},
											{
												"expression": {
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1388,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "6997:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "6997:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1391,
														"name": "amountClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "7029:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6997:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "6997:43:3"
											},
											{
												"expression": {
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1394,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "7051:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "7051:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7072:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7051:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "7051:22:3"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1400,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "7084:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 744,
														"src": "7084:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7103:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7084:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "7084:20:3"
											},
											{
												"expression": {
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1406,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "7115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 746,
														"src": "7115:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1409,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7136:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7136:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7115:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "7115:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7198:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7198:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "amountClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "7210:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1414,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "7168:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 713,
																	"src": "7168:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1413,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "7162:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7162:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "7162:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7162:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "7162:60:3"
											}
										]
									},
									"functionSelector": "ab33985a",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2473,
												"src": "6390:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6390:12:3"
										}
									],
									"name": "userClaimEmergency",
									"nameLocation": "6360:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6378:2:3"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6403:0:3"
									},
									"scope": 1708,
									"src": "6351:879:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "7291:807:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1430,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "7310:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7310:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7322:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7310:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652073756365737373",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7325:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41",
																"typeString": "literal_string \"Sale sucesss\""
															},
															"value": "Sale sucesss"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_889f3e86a9951bfad2140f6dc5924dd7f98edb776cbbf33fc4908c6b5d4cff41",
																"typeString": "literal_string \"Sale sucesss\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7302:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7302:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "7302:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1438,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "7359:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBaseCollected",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 751,
																	"src": "7359:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1440,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "7394:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBaseWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 757,
																	"src": "7394:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7359:66:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7428:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7359:70:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7448:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															},
															"value": "All token has been withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7351:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7351:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "7351:137:3"
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "7518:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "7500:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1448,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 749,
																"src": "7500:9:3"
															},
															"referencedDeclaration": 749,
															"src": "7500:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"baseExpression": {
														"id": 1451,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "7526:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$749_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1454,
													"indexExpression": {
														"expression": {
															"id": 1452,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7536:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7536:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7526:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$749_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7500:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1457,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "7566:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "baseDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 742,
																"src": "7566:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7586:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7566:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520726566756e6420616c6c206f722068617665206e6f7420626f7567687420796574",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7589:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910",
																"typeString": "literal_string \"You refund all or have not bought yet\""
															},
															"value": "You refund all or have not bought yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910",
																"typeString": "literal_string \"You refund all or have not bought yet\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7558:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7558:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "7558:71:3"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "amountRefund",
														"nameLocation": "7648:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "7640:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7640:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1486,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7799:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1481,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7799:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7799:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1476,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "7742:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "baseDeposit",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 742,
																			"src": "7742:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1471,
																								"name": "saleInfor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 785,
																								"src": "7683:9:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																									"typeString": "struct Presale.SaleInfor storage ref"
																								}
																							},
																							"id": 1472,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "refundFee",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 728,
																							"src": "7683:19:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 1468,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7673:4:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"id": 1467,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "7665:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1466,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "7665:7:3",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1469,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7665:13:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1470,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2665,
																						"src": "7665:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7665:38:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1474,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7664:40:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2680,
																		"src": "7664:77:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7664:96:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1479,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7663:98:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2695,
														"src": "7663:135:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7663:150:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7640:173:3"
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1487,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "7824:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1488,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "7836:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "baseDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 742,
															"src": "7836:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1490,
															"name": "amountRefund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "7856:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7836:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7824:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "7824:44:3"
											},
											{
												"expression": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1494,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "7879:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBaseWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 757,
														"src": "7879:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1497,
														"name": "amountRefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "7914:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7879:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "7879:47:3"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1500,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "7937:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "7937:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7958:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7937:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "7937:22:3"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1506,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "7970:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 744,
														"src": "7970:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7989:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7970:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "7970:20:3"
											},
											{
												"expression": {
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1512,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "8001:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 746,
														"src": "8001:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1515,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8022:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8022:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8001:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "8001:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1525,
															"name": "amountRefund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "8077:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1521,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8056:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8056:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8048:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1519,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8048:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8048:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8048:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8048:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "8048:42:3"
											}
										]
									},
									"functionSelector": "95661e70",
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1427,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1426,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2473,
												"src": "7278:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "7278:12:3"
										}
									],
									"name": "userRefundEmergency",
									"nameLocation": "7247:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7266:2:3"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7291:0:3"
									},
									"scope": 1708,
									"src": "7238:860:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "8180:681:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8259:36:3",
															"subExpression": {
																"expression": {
																	"id": 1537,
																	"name": "presaleStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8260:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																		"typeString": "struct Presale.PresaleStatus storage ref"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isOwnerClaimSaleToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 761,
																"src": "8260:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8297:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb",
																"typeString": "literal_string \"Nothing for owner claim token\""
															},
															"value": "Nothing for owner claim token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb",
																"typeString": "literal_string \"Nothing for owner claim token\""
															}
														],
														"id": 1536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8251:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8251:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "8251:78:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8348:37:3",
															"subExpression": {
																"expression": {
																	"id": 1544,
																	"name": "presaleStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8349:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																		"typeString": "struct Presale.PresaleStatus storage ref"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isOwnerRefundBaseToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 763,
																"src": "8349:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8387:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e",
																"typeString": "literal_string \"Nothing for owner refund token\""
															},
															"value": "Nothing for owner refund token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e",
																"typeString": "literal_string \"Nothing for owner refund token\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8340:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8340:80:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "8340:80:3"
											},
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "amountOwnerClaimToken",
														"nameLocation": "8439:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 1602,
														"src": "8431:29:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8431:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1559,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8508:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1708",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1708",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8500:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1557,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8500:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8500:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1553,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "8469:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 713,
																	"src": "8469:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1552,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "8463:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8463:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "8463:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8463:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8431:83:3"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "amountOwnerRefundNativeCoin",
														"nameLocation": "8533:27:3",
														"nodeType": "VariableDeclaration",
														"scope": 1602,
														"src": "8525:35:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8525:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1567,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8571:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Presale_$1708",
																	"typeString": "contract Presale"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Presale_$1708",
																	"typeString": "contract Presale"
																}
															],
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8563:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8563:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8563:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8563:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8525:59:3"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1571,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8595:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isOwnerClaimSaleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "8595:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8633:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8595:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "8595:42:3"
											},
											{
												"expression": {
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1577,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "8648:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "8648:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8679:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8648:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "8648:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1588,
																"name": "saleInfor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "8727:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																	"typeString": "struct Presale.SaleInfor storage ref"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "presaleOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "8727:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1590,
															"name": "amountOwnerClaimToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "8751:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1584,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "8697:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 713,
																	"src": "8697:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1583,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "8691:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8691:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "8691:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8691:82:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "8691:82:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1599,
															"name": "amountOwnerRefundNativeCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "8825:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1595,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "8792:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "presaleOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 710,
																	"src": "8792:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8784:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8784:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8784:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8784:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8784:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "8784:69:3"
											}
										]
									},
									"functionSelector": "8edf18e6",
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1531,
												"name": "onlyPresaleOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 821,
												"src": "8151:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "8151:16:3"
										},
										{
											"id": 1534,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1533,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2473,
												"src": "8168:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "8168:12:3"
										}
									],
									"name": "ownerClaimAndRefundToken",
									"nameLocation": "8115:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8139:2:3"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8180:0:3"
									},
									"scope": 1708,
									"src": "8106:755:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "8914:684:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1607,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "8994:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenSold",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 753,
																	"src": "8994:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1609,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "9025:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 755,
																	"src": "9025:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8994:63:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9060:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8994:67:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9080:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															},
															"value": "All token has been withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															}
														],
														"id": 1606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8986:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8986:134:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "8986:134:3"
											},
											{
												"assignments": [
													1619
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "9149:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1678,
														"src": "9131:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1618,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1617,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 749,
																"src": "9131:9:3"
															},
															"referencedDeclaration": 749,
															"src": "9131:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"baseExpression": {
														"id": 1620,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "9157:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$749_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1623,
													"indexExpression": {
														"expression": {
															"id": 1621,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9167:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9167:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9157:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$749_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9131:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1626,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "9197:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 744,
																"src": "9197:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1628,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "9216:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalTokenWithDraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "9216:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9197:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520636c61696d20616c6c206f722068617665206e6f7420626f7567687420796574",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9242:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4",
																"typeString": "literal_string \"You claim all or have not bought yet\""
															},
															"value": "You claim all or have not bought yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4",
																"typeString": "literal_string \"You claim all or have not bought yet\""
															}
														],
														"id": 1625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9189:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9189:92:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "9189:92:3"
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1634,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "9292:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$767_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "9292:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1637,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "9328:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 744,
														"src": "9328:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9292:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "9292:52:3"
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1641,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9355:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "9355:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1644,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "9387:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 744,
														"src": "9387:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9355:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "9355:48:3"
											},
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1648,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "9414:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 742,
														"src": "9414:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9435:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9414:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "9414:22:3"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1654,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "9447:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 744,
														"src": "9447:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9466:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9447:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "9447:20:3"
											},
											{
												"expression": {
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1660,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "9478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 746,
														"src": "9478:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1663,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9499:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9499:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "9478:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1672,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9561:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9561:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1674,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "9573:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$749_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 744,
															"src": "9573:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1668,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9531:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$735_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 713,
																	"src": "9531:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1667,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "9525:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9525:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "9525:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9525:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "9525:65:3"
											}
										]
									},
									"functionSelector": "ce441b18",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userClaimWhenSaleSuccess",
									"nameLocation": "8878:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8902:2:3"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8914:0:3"
									},
									"scope": 1708,
									"src": "8869:729:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "9675:42:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1686,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "9693:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "9693:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1685,
												"id": 1688,
												"nodeType": "Return",
												"src": "9686:23:3"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "9615:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "9634:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "9626:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9626:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9625:18:3"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "9666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:9:3"
									},
									"scope": 1708,
									"src": "9606:111:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "9766:70:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1701,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9814:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$1708",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$1708",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9806:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1699,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9806:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9806:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "9806:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1695,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9785:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9785:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9777:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1693,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9777:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9777:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9777:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9777:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "9777:51:3"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "9737:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9746:2:3"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9766:0:3"
									},
									"scope": 1708,
									"src": "9728:108:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1709,
							"src": "370:9469:3",
							"usedErrors": []
						}
					],
					"src": "93:9746:3"
				},
				"id": 3
			},
			"Utils/Context.sol": {
				"ast": {
					"absolutePath": "Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1730
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1711,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730
							],
							"name": "Context",
							"nameLocation": "641:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "718:36:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1716,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1718,
												"nodeType": "Return",
												"src": "729:17:4"
											}
										]
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 1730,
									"src": "656:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "829:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1725,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1727,
												"nodeType": "Return",
												"src": "840:15:4"
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:4"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "813:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:4"
									},
									"scope": 1730,
									"src": "762:101:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1731,
							"src": "623:243:4",
							"usedErrors": []
						}
					],
					"src": "89:779:4"
				},
				"id": 4
			},
			"Utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2329
						]
					},
					"id": 2330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "145:1118:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 2329,
							"linearizedBaseContracts": [
								2329
							],
							"name": "EnumerableSet",
							"nameLocation": "1273:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1741,
									"members": [
										{
											"constant": false,
											"id": 1736,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1809:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 1741,
											"src": "1799:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1735,
												"nodeType": "ArrayTypeName",
												"src": "1799:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1740,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1980:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 1741,
											"src": "1952:36:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1739,
												"keyType": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1952:27:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1750:3:5",
									"nodeType": "StructDefinition",
									"scope": 2329,
									"src": "1743:253:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "2243:345:5",
										"statements": [
											{
												"condition": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2258:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1753,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "2269:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "2274:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1752,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "2259:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1780,
													"nodeType": "Block",
													"src": "2542:39:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1751,
															"id": 1779,
															"nodeType": "Return",
															"src": "2557:12:5"
														}
													]
												},
												"id": 1781,
												"nodeType": "IfStatement",
												"src": "2254:327:5",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "2282:254:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1762,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "2314:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1757,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "2297:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1736,
																		"src": "2297:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2297:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1764,
															"nodeType": "ExpressionStatement",
															"src": "2297:23:5"
														},
														{
															"expression": {
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1765,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "2458:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1740,
																		"src": "2458:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1769,
																	"indexExpression": {
																		"id": 1767,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "2471:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2458:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1770,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "2480:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1736,
																		"src": "2480:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2480:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1774,
															"nodeType": "ExpressionStatement",
															"src": "2458:40:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1751,
															"id": 1776,
															"nodeType": "Return",
															"src": "2513:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "2004:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2183:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2200:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2188:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1744,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1743,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2188:3:5"
													},
													"referencedDeclaration": 1741,
													"src": "2188:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2213:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2205:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:5"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2237:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2237:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:6:5"
									},
									"scope": 2329,
									"src": "2174:414:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "2836:1348:5",
										"statements": [
											{
												"assignments": [
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2956:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1866,
														"src": "2948:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2948:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1800,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1796,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "2969:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "2969:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1799,
													"indexExpression": {
														"id": 1798,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "2982:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1801,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "3005:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3019:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3005:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1864,
													"nodeType": "Block",
													"src": "4138:39:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4160:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1793,
															"id": 1863,
															"nodeType": "Return",
															"src": "4153:12:5"
														}
													]
												},
												"id": 1865,
												"nodeType": "IfStatement",
												"src": "3001:1176:5",
												"trueBody": {
													"id": 1861,
													"nodeType": "Block",
													"src": "3022:1110:5",
													"statements": [
														{
															"assignments": [
																1805
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1805,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3388:13:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1861,
																	"src": "3380:21:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1804,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3380:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1809,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1806,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "3404:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3404:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3380:38:5"
														},
														{
															"assignments": [
																1811
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1811,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3441:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1861,
																	"src": "3433:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1810,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3433:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1817,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1812,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1787,
																			"src": "3453:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1736,
																		"src": "3453:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3453:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3453:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3433:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1818,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "3496:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1819,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "3509:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3496:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1845,
															"nodeType": "IfStatement",
															"src": "3492:405:5",
															"trueBody": {
																"id": 1844,
																"nodeType": "Block",
																"src": "3524:373:5",
																"statements": [
																	{
																		"assignments": [
																			1822
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1822,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1844,
																				"src": "3543:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1821,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1827,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1823,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1787,
																					"src": "3563:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1824,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1736,
																				"src": "3563:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1826,
																			"indexExpression": {
																				"id": 1825,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1811,
																				"src": "3575:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:5"
																	},
																	{
																		"expression": {
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1828,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1787,
																						"src": "3688:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1831,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1736,
																					"src": "3688:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1832,
																				"indexExpression": {
																					"id": 1830,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1805,
																					"src": "3700:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3688:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1833,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1822,
																				"src": "3717:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3688:38:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1835,
																		"nodeType": "ExpressionStatement",
																		"src": "3688:38:5"
																	},
																	{
																		"expression": {
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1836,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1787,
																						"src": "3802:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1839,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1740,
																					"src": "3802:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1840,
																				"indexExpression": {
																					"id": 1838,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1822,
																					"src": "3815:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3802:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1841,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "3828:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3802:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1843,
																		"nodeType": "ExpressionStatement",
																		"src": "3802:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1846,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1787,
																			"src": "3978:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1736,
																		"src": "3978:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3978:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1852,
															"nodeType": "ExpressionStatement",
															"src": "3978:17:5"
														},
														{
															"expression": {
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4066:26:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1853,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1787,
																			"src": "4073:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1740,
																		"src": "4073:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1856,
																	"indexExpression": {
																		"id": 1855,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "4086:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4073:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1858,
															"nodeType": "ExpressionStatement",
															"src": "4066:26:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4116:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1793,
															"id": 1860,
															"nodeType": "Return",
															"src": "4109:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "2596:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2773:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2793:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "2781:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1785,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2781:3:5"
													},
													"referencedDeclaration": 1741,
													"src": "2781:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "2798:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:32:5"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "2830:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:5"
									},
									"scope": 2329,
									"src": "2764:1420:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "4349:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1878,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "4367:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1740,
															"src": "4367:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1881,
														"indexExpression": {
															"id": 1880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "4380:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4367:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4390:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4367:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1877,
												"id": 1884,
												"nodeType": "Return",
												"src": "4360:31:5"
											}
										]
									},
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4279:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4301:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "4289:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "4289:3:5"
													},
													"referencedDeclaration": 1741,
													"src": "4289:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4314:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "4306:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:32:5"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "4343:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:6:5"
									},
									"scope": 2329,
									"src": "4270:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "4550:44:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1895,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "4568:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1736,
														"src": "4568:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4568:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1894,
												"id": 1898,
												"nodeType": "Return",
												"src": "4561:25:5"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "4407:72:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4494:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4514:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "4502:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1888,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "4502:3:5"
													},
													"referencedDeclaration": 1741,
													"src": "4502:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:17:5"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "4541:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:9:5"
									},
									"scope": 2329,
									"src": "4485:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "5024:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1911,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "5042:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1736,
														"src": "5042:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1914,
													"indexExpression": {
														"id": 1913,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "5054:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5042:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1910,
												"id": 1915,
												"nodeType": "Return",
												"src": "5035:25:5"
											}
										]
									},
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "4602:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4957:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4973:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4961:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1902,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "4961:3:5"
													},
													"referencedDeclaration": 1741,
													"src": "4961:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4986:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4978:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:32:5"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "5015:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:5"
									},
									"scope": 2329,
									"src": "4948:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "5692:37:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1927,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "5710:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1736,
													"src": "5710:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1926,
												"id": 1929,
												"nodeType": "Return",
												"src": "5703:18:5"
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "5076:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5627:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5647:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "5635:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1919,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "5635:3:5"
													},
													"referencedDeclaration": 1741,
													"src": "5635:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:17:5"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "5674:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1923,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1924,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:18:5"
									},
									"scope": 2329,
									"src": "5618:111:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1935,
									"members": [
										{
											"constant": false,
											"id": 1934,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5791:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1935,
											"src": "5787:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1933,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1932,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1741,
													"src": "5787:3:5"
												},
												"referencedDeclaration": 1741,
												"src": "5787:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5765:10:5",
									"nodeType": "StructDefinition",
									"scope": 2329,
									"src": "5758:47:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "6059:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1947,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "6082:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "6082:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "6094:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1946,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "6077:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1945,
												"id": 1951,
												"nodeType": "Return",
												"src": "6070:30:5"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "5813:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5992:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6015:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5996:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1938,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1937,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "5996:10:5"
													},
													"referencedDeclaration": 1935,
													"src": "5996:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6028:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6020:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1940,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:39:5"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:5"
									},
									"scope": 2329,
									"src": "5983:125:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "6363:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1965,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "6389:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "6389:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "6401:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1964,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "6381:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1963,
												"id": 1969,
												"nodeType": "Return",
												"src": "6374:33:5"
											}
										]
									},
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "6116:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6293:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6319:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "6300:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1955,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "6300:10:5"
													},
													"referencedDeclaration": 1935,
													"src": "6300:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "6324:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1958,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:39:5"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "6357:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6357:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:6:5"
									},
									"scope": 2329,
									"src": "6284:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "6587:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1983,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "6615:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "6615:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1985,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "6627:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1982,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "6605:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1981,
												"id": 1987,
												"nodeType": "Return",
												"src": "6598:35:5"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "6423:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6510:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6538:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "6519:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1973,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "6519:10:5"
													},
													"referencedDeclaration": 1935,
													"src": "6519:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6551:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "6543:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1976,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:39:5"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "6581:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:6:5"
									},
									"scope": 2329,
									"src": "6501:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "6799:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1999,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "6825:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "6825:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1998,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "6817:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1997,
												"id": 2002,
												"nodeType": "Return",
												"src": "6810:26:5"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "6649:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6736:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6762:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "6743:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1991,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "6743:10:5"
													},
													"referencedDeclaration": 1935,
													"src": "6743:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6742:24:5"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "6790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:5"
									},
									"scope": 2329,
									"src": "6727:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "7281:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2016,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "7303:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "7303:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2018,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "7315:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "7299:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2020,
												"nodeType": "Return",
												"src": "7292:29:5"
											}
										]
									},
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "6852:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7207:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7229:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "7210:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "7210:10:5"
													},
													"referencedDeclaration": 1935,
													"src": "7210:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "7234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:39:5"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "7272:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:9:5"
									},
									"scope": 2329,
									"src": "7198:131:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "7960:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2033,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "7986:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "7986:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2032,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "7978:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2036,
												"nodeType": "Return",
												"src": "7971:26:5"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "7337:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7888:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7914:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "7895:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2024,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "7895:10:5"
													},
													"referencedDeclaration": 1935,
													"src": "7895:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1935_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:24:5"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "7942:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2028,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7942:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2029,
													"nodeType": "ArrayTypeName",
													"src": "7942:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:18:5"
									},
									"scope": 2329,
									"src": "7879:126:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2042,
									"members": [
										{
											"constant": false,
											"id": 2041,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8067:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2042,
											"src": "8063:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2040,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2039,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1741,
													"src": "8063:3:5"
												},
												"referencedDeclaration": 1741,
												"src": "8063:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8041:10:5",
									"nodeType": "StructDefinition",
									"scope": 2329,
									"src": "8034:47:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "8335:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2054,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "8358:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2041,
															"src": "8358:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2062,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2048,
																					"src": "8394:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8386:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2060,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8386:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8378:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2058,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8378:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8370:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2056,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8370:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8370:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2053,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "8353:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2052,
												"id": 2067,
												"nodeType": "Return",
												"src": "8346:57:5"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "8089:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8268:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8291:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "8272:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2045,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2044,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "8272:10:5"
													},
													"referencedDeclaration": 2042,
													"src": "8272:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8304:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "8296:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:39:5"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "8329:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8329:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:6:5"
									},
									"scope": 2329,
									"src": "8259:152:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "8666:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2081,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "8692:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2041,
															"src": "8692:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2089,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2075,
																					"src": "8728:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8720:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2087,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8720:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8720:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8712:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2085,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8712:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8712:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8704:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8704:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8704:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2080,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "8684:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2079,
												"id": 2094,
												"nodeType": "Return",
												"src": "8677:60:5"
											}
										]
									},
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "8419:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8596:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8622:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8603:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2071,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "8603:10:5"
													},
													"referencedDeclaration": 2042,
													"src": "8603:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8635:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8627:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8602:39:5"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8660:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:5"
									},
									"scope": 2329,
									"src": "8587:158:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "8917:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2108,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "8945:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2041,
															"src": "8945:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2116,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2102,
																					"src": "8981:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8973:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2114,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8973:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8973:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8965:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2112,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8965:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8965:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2110,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2107,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "8935:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2121,
												"nodeType": "Return",
												"src": "8928:62:5"
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "8753:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8840:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8868:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "8849:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2098,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "8849:10:5"
													},
													"referencedDeclaration": 2042,
													"src": "8849:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8881:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "8873:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:39:5"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "8911:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8911:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:6:5"
									},
									"scope": 2329,
									"src": "8831:167:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "9156:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2133,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "9182:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2041,
															"src": "9182:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2132,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "9174:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2131,
												"id": 2136,
												"nodeType": "Return",
												"src": "9167:26:5"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "9006:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9093:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9119:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "9100:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2125,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "9100:10:5"
													},
													"referencedDeclaration": 2042,
													"src": "9100:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:24:5"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "9147:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9146:9:5"
									},
									"scope": 2329,
									"src": "9084:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "9638:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2156,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2142,
																						"src": "9684:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2157,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2041,
																					"src": "9684:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1741_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 2158,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "9696:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1741_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2155,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1917,
																				"src": "9680:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9680:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9672:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2153,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9672:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9672:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9664:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2151,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9664:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9664:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9656:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2149,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2148,
												"id": 2163,
												"nodeType": "Return",
												"src": "9649:56:5"
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "9209:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "9567:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2140,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "9567:10:5"
													},
													"referencedDeclaration": 2042,
													"src": "9567:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "9591:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:5"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "9629:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:5"
									},
									"scope": 2329,
									"src": "9555:158:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "10344:229:5",
										"statements": [
											{
												"assignments": [
													2179
												],
												"declarations": [
													{
														"constant": false,
														"id": 2179,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10372:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "10355:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2177,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10355:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2178,
															"nodeType": "ArrayTypeName",
															"src": "10355:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2184,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2181,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "10388:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2041,
															"src": "10388:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2180,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "10380:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10355:44:5"
											},
											{
												"assignments": [
													2189
												],
												"declarations": [
													{
														"constant": false,
														"id": 2189,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10427:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "10410:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2187,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10410:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2188,
															"nodeType": "ArrayTypeName",
															"src": "10410:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2190,
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10499:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10514:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10524:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2189,
														"isOffset": false,
														"isSlot": false,
														"src": "10514:6:5",
														"valueSize": 1
													},
													{
														"declaration": 2179,
														"isOffset": false,
														"isSlot": false,
														"src": "10524:5:5",
														"valueSize": 1
													}
												],
												"id": 2191,
												"nodeType": "InlineAssembly",
												"src": "10490:50:5"
											},
											{
												"expression": {
													"id": 2192,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2189,
													"src": "10559:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2174,
												"id": 2193,
												"nodeType": "Return",
												"src": "10552:13:5"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "9721:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10272:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10298:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "10279:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2167,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "10279:10:5"
													},
													"referencedDeclaration": 2042,
													"src": "10279:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2042_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:24:5"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "10326:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2171,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10326:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2172,
													"nodeType": "ArrayTypeName",
													"src": "10326:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:18:5"
									},
									"scope": 2329,
									"src": "10263:310:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2199,
									"members": [
										{
											"constant": false,
											"id": 2198,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10629:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "10625:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2197,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2196,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1741,
													"src": "10625:3:5"
												},
												"referencedDeclaration": 1741,
												"src": "10625:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1741_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10606:7:5",
									"nodeType": "StructDefinition",
									"scope": 2329,
									"src": "10599:44:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "10894:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2211,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "10917:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2198,
															"src": "10917:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "10937:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10929:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2213,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10929:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10929:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2210,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "10912:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2218,
												"nodeType": "Return",
												"src": "10905:39:5"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "10651:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10830:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10850:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "10834:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2201,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "10834:7:5"
													},
													"referencedDeclaration": 2199,
													"src": "10834:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10863:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "10855:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:36:5"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "10888:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10888:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:6:5"
									},
									"scope": 2329,
									"src": "10821:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "11204:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2232,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "11230:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2198,
															"src": "11230:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2236,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "11250:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11242:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2234,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11242:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11242:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2231,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "11222:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2230,
												"id": 2239,
												"nodeType": "Return",
												"src": "11215:42:5"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "10960:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11137:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11160:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "11144:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2222,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "11144:7:5"
													},
													"referencedDeclaration": 2199,
													"src": "11144:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11173:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "11165:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:36:5"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "11198:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11198:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:6:5"
									},
									"scope": 2329,
									"src": "11128:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "11434:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2253,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "11462:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2198,
															"src": "11462:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "11482:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11474:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2255,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11474:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11474:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2252,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "11452:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2251,
												"id": 2260,
												"nodeType": "Return",
												"src": "11445:44:5"
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "11273:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11360:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11385:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "11369:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2243,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "11369:7:5"
													},
													"referencedDeclaration": 2199,
													"src": "11369:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11398:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "11390:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11390:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:36:5"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "11428:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11428:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11427:6:5"
									},
									"scope": 2329,
									"src": "11351:146:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "11652:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2272,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "11678:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2198,
															"src": "11678:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2271,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "11670:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2275,
												"nodeType": "Return",
												"src": "11663:26:5"
											}
										]
									},
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "11505:72:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11592:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11615:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "11599:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2264,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "11599:7:5"
													},
													"referencedDeclaration": 2199,
													"src": "11599:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:21:5"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "11643:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11642:9:5"
									},
									"scope": 2329,
									"src": "11583:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "12131:57:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2291,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2281,
																		"src": "12161:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2198,
																	"src": "12161:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1741_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2293,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "12173:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1741_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2290,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "12157:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12157:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12149:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12149:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2287,
												"id": 2296,
												"nodeType": "Return",
												"src": "12142:38:5"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "11705:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12060:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12079:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "12063:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2279,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "12063:7:5"
													},
													"referencedDeclaration": 2199,
													"src": "12063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12092:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "12084:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:36:5"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "12122:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:9:5"
									},
									"scope": 2329,
									"src": "12051:137:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2327,
										"nodeType": "Block",
										"src": "12816:229:5",
										"statements": [
											{
												"assignments": [
													2312
												],
												"declarations": [
													{
														"constant": false,
														"id": 2312,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12844:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 2327,
														"src": "12827:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2310,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12827:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2311,
															"nodeType": "ArrayTypeName",
															"src": "12827:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2317,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2314,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "12860:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2198,
															"src": "12860:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1741_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2313,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "12852:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1741_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12827:44:5"
											},
											{
												"assignments": [
													2322
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12899:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2327,
														"src": "12882:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2320,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2321,
															"nodeType": "ArrayTypeName",
															"src": "12882:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2323,
												"nodeType": "VariableDeclarationStatement",
												"src": "12882:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12971:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12986:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12996:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2322,
														"isOffset": false,
														"isSlot": false,
														"src": "12986:6:5",
														"valueSize": 1
													},
													{
														"declaration": 2312,
														"isOffset": false,
														"isSlot": false,
														"src": "12996:5:5",
														"valueSize": 1
													}
												],
												"id": 2324,
												"nodeType": "InlineAssembly",
												"src": "12962:50:5"
											},
											{
												"expression": {
													"id": 2325,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2322,
													"src": "13031:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2307,
												"id": 2326,
												"nodeType": "Return",
												"src": "13024:13:5"
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "12196:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12747:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12770:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "12754:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2300,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2199,
														"src": "12754:7:5"
													},
													"referencedDeclaration": 2199,
													"src": "12754:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2199_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:21:5"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "12798:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2304,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2305,
													"nodeType": "ArrayTypeName",
													"src": "12798:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:18:5"
									},
									"scope": 2329,
									"src": "12738:307:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2330,
							"src": "1265:11783:5",
							"usedErrors": []
						}
					],
					"src": "118:12930:5"
				},
				"id": 5
			},
			"Utils/Ownable.sol": {
				"ast": {
					"absolutePath": "Utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1730
						],
						"Ownable": [
							2434
						]
					},
					"id": 2435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:6"
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "./Context.sol",
							"id": 2332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2435,
							"sourceUnit": 1731,
							"src": "117:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2334,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "680:7:6"
									},
									"id": 2335,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2333,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:6",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2434,
							"linearizedBaseContracts": [
								2434,
								1730
							],
							"name": "Ownable",
							"nameLocation": "669:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2337,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 2434,
									"src": "695:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2336,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2343,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "753:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "784:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:6"
									},
									"src": "726:84:6"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "931:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2348,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "961:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2347,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "942:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "942:32:6"
											}
										]
									},
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:6",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2353,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:6"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:6"
									},
									"scope": 2434,
									"src": "917:65:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "1118:32:6",
										"statements": [
											{
												"expression": {
													"id": 2359,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2337,
													"src": "1136:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2360,
												"nodeType": "Return",
												"src": "1129:13:6"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:6"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "1109:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:6"
									},
									"scope": 2434,
									"src": "1063:87:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "1264:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2366,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "1283:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2368,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "1294:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:6"
											},
											{
												"id": 2374,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:6"
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2376,
									"name": "onlyOwner",
									"nameLocation": "1252:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:6"
									},
									"src": "1243:120:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "1768:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2383,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2382,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "1779:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:6"
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:6",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2379,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2376,
												"src": "1758:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1723:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:6"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:6"
									},
									"scope": 2434,
									"src": "1714:103:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "2042:131:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2399,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "2061:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2400,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2409,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "2156:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2408,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "2137:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:6"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2376,
												"src": "2032:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1981:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2007:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "1999:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:6"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:6"
									},
									"scope": 2434,
									"src": "1972:201:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "2396:128:6",
										"statements": [
											{
												"assignments": [
													2420
												],
												"declarations": [
													{
														"constant": false,
														"id": 2420,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2415:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2432,
														"src": "2407:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2422,
												"initialValue": {
													"id": 2421,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2337,
													"src": "2426:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:6"
											},
											{
												"expression": {
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2423,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "2443:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2424,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "2452:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2428,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "2497:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2429,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "2507:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2427,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2343,
														"src": "2476:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2431,
												"nodeType": "EmitStatement",
												"src": "2471:45:6"
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2342:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2369:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2361:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:6"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:6"
									},
									"scope": 2434,
									"src": "2333:191:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2435,
							"src": "651:1876:6",
							"usedErrors": []
						}
					],
					"src": "90:2437:6"
				},
				"id": 6
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2474
						]
					},
					"id": 2475,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2437,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2474,
							"linearizedBaseContracts": [
								2474
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2440,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2474,
									"src": "1694:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2438,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2439,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2443,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2474,
									"src": "1742:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2442,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2445,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2474,
									"src": "1788:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "1834:41:7",
										"statements": [
											{
												"expression": {
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2448,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "1845:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2449,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2440,
														"src": "1855:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2451,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:7"
											}
										]
									},
									"id": 2453,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:7"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:7"
									},
									"scope": 2474,
									"src": "1820:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "2285:433:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2457,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "2376:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2458,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "2387:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:7"
											},
											{
												"expression": {
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2463,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "2509:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2464,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "2519:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:7"
											},
											{
												"id": 2467,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:7"
											},
											{
												"expression": {
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2468,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "2688:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2469,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2440,
														"src": "2698:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2471,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:7"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 2473,
									"name": "nonReentrant",
									"nameLocation": "2270:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:7"
									},
									"src": "2261:457:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2475,
							"src": "894:1827:7",
							"usedErrors": []
						}
					],
					"src": "100:2621:7"
				},
				"id": 7
			},
			"Utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "Utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2786
						]
					},
					"id": 2787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2476,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2477,
								"nodeType": "StructuredDocumentation",
								"src": "294:201:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2786,
							"linearizedBaseContracts": [
								2786
							],
							"name": "SafeMath",
							"nameLocation": "505:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "738:146:8",
										"statements": [
											{
												"id": 2507,
												"nodeType": "UncheckedBlock",
												"src": "749:128:8",
												"statements": [
													{
														"assignments": [
															2490
														],
														"declarations": [
															{
																"constant": false,
																"id": 2490,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "782:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 2507,
																"src": "774:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2489,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "774:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2494,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2491,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2480,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2492,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2482,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "774:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2495,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2490,
																"src": "810:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2496,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2480,
																"src": "814:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2502,
														"nodeType": "IfStatement",
														"src": "806:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "825:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "832:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2500,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "824:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2488,
															"id": 2501,
															"nodeType": "Return",
															"src": "817:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "857:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2504,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "863:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2505,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "856:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2488,
														"id": 2506,
														"nodeType": "Return",
														"src": "849:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "521:135:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "671:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "686:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "678:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "697:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "689:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:22:8"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "723:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "729:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:8"
									},
									"scope": 2786,
									"src": "662:222:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "1112:118:8",
										"statements": [
											{
												"id": 2535,
												"nodeType": "UncheckedBlock",
												"src": "1123:100:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2521,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2514,
																"src": "1152:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2522,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "1156:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1152:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2528,
														"nodeType": "IfStatement",
														"src": "1148:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1167:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1174:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1166:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2520,
															"id": 2527,
															"nodeType": "Return",
															"src": "1159:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2530,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2512,
																		"src": "1205:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2531,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2514,
																		"src": "1209:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1205:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2533,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1198:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2520,
														"id": 2534,
														"nodeType": "Return",
														"src": "1191:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "892:138:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1045:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1060:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1052:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1071:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1063:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:22:8"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1097:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1103:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:15:8"
									},
									"scope": 2786,
									"src": "1036:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "1461:427:8",
										"statements": [
											{
												"id": 2577,
												"nodeType": "UncheckedBlock",
												"src": "1472:409:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2549,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2540,
																"src": "1734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1734:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2556,
														"nodeType": "IfStatement",
														"src": "1730:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1756:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2554,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2548,
															"id": 2555,
															"nodeType": "Return",
															"src": "1742:16:8"
														}
													},
													{
														"assignments": [
															2558
														],
														"declarations": [
															{
																"constant": false,
																"id": 2558,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1781:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 2577,
																"src": "1773:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2557,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1773:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2562,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2559,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2540,
																"src": "1785:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2560,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2542,
																"src": "1789:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1785:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1773:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2563,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "1809:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2564,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2540,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1809:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2566,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2542,
																"src": "1818:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1809:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2572,
														"nodeType": "IfStatement",
														"src": "1805:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1829:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2570,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1828:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2548,
															"id": 2571,
															"nodeType": "Return",
															"src": "1821:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1861:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2574,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "1867:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2575,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1860:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2548,
														"id": 2576,
														"nodeType": "Return",
														"src": "1853:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "1238:141:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1394:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1409:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "1401:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "1412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:22:8"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "1446:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "1452:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:15:8"
									},
									"scope": 2786,
									"src": "1385:503:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2606,
										"nodeType": "Block",
										"src": "2120:119:8",
										"statements": [
											{
												"id": 2605,
												"nodeType": "UncheckedBlock",
												"src": "2131:101:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2584,
																"src": "2160:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2160:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2598,
														"nodeType": "IfStatement",
														"src": "2156:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2176:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2183:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2596,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2175:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2590,
															"id": 2597,
															"nodeType": "Return",
															"src": "2168:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2208:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2600,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2582,
																		"src": "2214:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2601,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2584,
																		"src": "2218:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2214:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2603,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2207:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2590,
														"id": 2604,
														"nodeType": "Return",
														"src": "2200:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "1896:142:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2053:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2068:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2060:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2079:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2071:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:22:8"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2105:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2105:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2111:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:15:8"
									},
									"scope": 2786,
									"src": "2044:195:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2634,
										"nodeType": "Block",
										"src": "2481:119:8",
										"statements": [
											{
												"id": 2633,
												"nodeType": "UncheckedBlock",
												"src": "2492:101:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2619,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2612,
																"src": "2521:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2521:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2626,
														"nodeType": "IfStatement",
														"src": "2517:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2537:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2544:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2536:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2618,
															"id": 2625,
															"nodeType": "Return",
															"src": "2529:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2628,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2610,
																		"src": "2575:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2629,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "2579:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2575:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2631,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2568:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2618,
														"id": 2632,
														"nodeType": "Return",
														"src": "2561:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2608,
										"nodeType": "StructuredDocumentation",
										"src": "2247:152:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2414:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2429:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "2421:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2440:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "2432:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:22:8"
									},
									"returnParameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "2466:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "2472:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:15:8"
									},
									"scope": 2786,
									"src": "2405:195:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "2914:31:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2645,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2638,
														"src": "2932:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2646,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "2936:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2644,
												"id": 2648,
												"nodeType": "Return",
												"src": "2925:12:8"
											}
										]
									},
									"documentation": {
										"id": 2636,
										"nodeType": "StructuredDocumentation",
										"src": "2608:233:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2856:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2868:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "2860:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2879:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "2871:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:22:8"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "2905:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:9:8"
									},
									"scope": 2786,
									"src": "2847:98:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "3295:31:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2660,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "3313:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2661,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2655,
														"src": "3317:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3313:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2659,
												"id": 2663,
												"nodeType": "Return",
												"src": "3306:12:8"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "2953:269:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3237:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3249:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3241:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3260:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3252:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:22:8"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3286:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:9:8"
									},
									"scope": 2786,
									"src": "3228:98:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "3652:31:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2675,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2668,
														"src": "3670:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2676,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2670,
														"src": "3674:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2674,
												"id": 2678,
												"nodeType": "Return",
												"src": "3663:12:8"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "3334:245:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3594:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3606:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "3598:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3617:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "3609:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:22:8"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "3643:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:8"
									},
									"scope": 2786,
									"src": "3585:98:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2694,
										"nodeType": "Block",
										"src": "4051:31:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2690,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "4069:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2691,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "4073:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2689,
												"id": 2693,
												"nodeType": "Return",
												"src": "4062:12:8"
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "3691:287:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3993:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "3997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "4008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:22:8"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "4042:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:9:8"
									},
									"scope": 2786,
									"src": "3984:98:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "4616:31:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2705,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2698,
														"src": "4634:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2706,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2700,
														"src": "4638:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4634:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2704,
												"id": 2708,
												"nodeType": "Return",
												"src": "4627:12:8"
											}
										]
									},
									"documentation": {
										"id": 2696,
										"nodeType": "StructuredDocumentation",
										"src": "4090:453:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4558:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4570:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "4562:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4581:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "4573:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:22:8"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "4607:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:9:8"
									},
									"scope": 2786,
									"src": "4549:98:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2734,
										"nodeType": "Block",
										"src": "5255:111:8",
										"statements": [
											{
												"id": 2733,
												"nodeType": "UncheckedBlock",
												"src": "5266:93:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2723,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2715,
																		"src": "5299:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2724,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2713,
																		"src": "5304:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5299:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2726,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "5307:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2722,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5291:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2728,
														"nodeType": "ExpressionStatement",
														"src": "5291:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2729,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "5342:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2730,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "5346:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2721,
														"id": 2732,
														"nodeType": "Return",
														"src": "5335:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2711,
										"nodeType": "StructuredDocumentation",
										"src": "4655:465:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5135:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5157:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5149:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5177:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5169:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5203:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5189:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5189:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:84:8"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5246:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:9:8"
									},
									"scope": 2786,
									"src": "5126:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "5993:110:8",
										"statements": [
											{
												"id": 2758,
												"nodeType": "UncheckedBlock",
												"src": "6004:92:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2740,
																		"src": "6037:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6041:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6037:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "6044:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6029:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6029:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2753,
														"nodeType": "ExpressionStatement",
														"src": "6029:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2738,
																"src": "6079:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2740,
																"src": "6083:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6079:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2746,
														"id": 2757,
														"nodeType": "Return",
														"src": "6072:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2736,
										"nodeType": "StructuredDocumentation",
										"src": "5374:484:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5873:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5895:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "5887:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "5907:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5941:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "5927:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5927:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:84:8"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "5984:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:9:8"
									},
									"scope": 2786,
									"src": "5864:239:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2784,
										"nodeType": "Block",
										"src": "6895:110:8",
										"statements": [
											{
												"id": 2783,
												"nodeType": "UncheckedBlock",
												"src": "6906:92:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "6939:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6943:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6939:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2767,
																	"src": "6946:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6931:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6931:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2778,
														"nodeType": "ExpressionStatement",
														"src": "6931:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2763,
																"src": "6981:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "6985:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6981:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2771,
														"id": 2782,
														"nodeType": "Return",
														"src": "6974:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2761,
										"nodeType": "StructuredDocumentation",
										"src": "6111:649:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6775:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6797:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "6789:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6817:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "6809:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6809:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6843:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "6829:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6829:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:84:8"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "6886:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:9:8"
									},
									"scope": 2786,
									"src": "6766:239:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2787,
							"src": "497:6511:8",
							"usedErrors": []
						}
					],
					"src": "110:6898:8"
				},
				"id": 8
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							2978
						]
					},
					"id": 2979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2788,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2789,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:9",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 2978,
							"linearizedBaseContracts": [
								2978
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "380:284:9",
										"statements": [
											{
												"assignments": [
													2799,
													2801
												],
												"declarations": [
													{
														"constant": false,
														"id": 2799,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2831,
														"src": "392:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2798,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2801,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2831,
														"src": "406:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2800,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2811,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 2807,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2793,
																	"src": "487:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2808,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2795,
																	"src": "491:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2804,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2802,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "427:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2813,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "541:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2814,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2801,
																					"src": "553:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2820,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2801,
																					"src": "584:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2822,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2821,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:9",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2823,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2818,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2826,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 2812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "519:137:9"
											}
										]
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "305:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "329:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "350:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:9"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:9"
									},
									"scope": 2978,
									"src": "274:390:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "780:285:9",
										"statements": [
											{
												"assignments": [
													2842,
													2844
												],
												"declarations": [
													{
														"constant": false,
														"id": 2842,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "797:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2874,
														"src": "792:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2841,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "792:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2844,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "819:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2874,
														"src": "806:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2843,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "806:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2854,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "875:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 2850,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2836,
																	"src": "887:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2851,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "891:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2847,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "852:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "852:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "852:45:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2845,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2834,
															"src": "827:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "827:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "791:117:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2856,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "941:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2857,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2844,
																					"src": "953:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "953:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "968:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "953:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2863,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2844,
																					"src": "984:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2865,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "991:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2864,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "991:4:9",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2866,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "990:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2861,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "973:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "973:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "973:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "953:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2869,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "952:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "941:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1013:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 2855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "919:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:138:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2873,
												"nodeType": "ExpressionStatement",
												"src": "919:138:9"
											}
										]
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "682:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "713:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "705:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "737:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "729:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "758:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "750:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:76:9"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:9"
									},
									"scope": 2978,
									"src": "673:392:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2920,
										"nodeType": "Block",
										"src": "1207:296:9",
										"statements": [
											{
												"assignments": [
													2887,
													2889
												],
												"declarations": [
													{
														"constant": false,
														"id": 2887,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1224:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2920,
														"src": "1219:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2886,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1219:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2889,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1246:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2920,
														"src": "1233:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2888,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1233:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2900,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1302:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 2895,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2879,
																	"src": "1314:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2896,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2881,
																	"src": "1320:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2897,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2883,
																	"src": "1324:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2892,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1279:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1279:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1279:51:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2890,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "1254:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1254:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:123:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2902,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "1374:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2903,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2889,
																					"src": "1386:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1386:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1401:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1386:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2909,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2889,
																					"src": "1417:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2911,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1424:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2910,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1424:4:9",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2912,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1423:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2907,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1406:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1406:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1406:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1386:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1385:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1374:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 2901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:143:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "1352:143:9"
											}
										]
									},
									"id": 2921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1082:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1117:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "1109:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1141:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "1133:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1164:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "1156:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1185:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "1177:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:99:9"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:9"
									},
									"scope": 2978,
									"src": "1073:430:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2976,
										"nodeType": "Block",
										"src": "1694:400:9",
										"statements": [
											{
												"condition": {
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1709:8:9",
													"subExpression": {
														"id": 2932,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "1710:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2974,
													"nodeType": "Block",
													"src": "1770:317:9",
													"statements": [
														{
															"assignments": [
																2942,
																2944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2942,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1791:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2974,
																	"src": "1786:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2941,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1786:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2944,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1813:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2974,
																	"src": "1800:17:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2943,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1800:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2954,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 2949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1873:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 2950,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "1885:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 2951,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2927,
																				"src": "1889:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2947,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1850:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1850:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1850:45:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2945,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2923,
																		"src": "1821:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1821:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:89:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1785:125:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2956,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "1951:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 2968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2960,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 2957,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2944,
																								"src": "1963:4:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 2958,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "1963:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2959,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1978:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "1963:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 2963,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2944,
																								"src": "1994:4:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 2965,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2001:4:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 2964,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2001:4:9",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 2966,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2000:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 2961,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1983:3:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 2962,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "1983:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 2967,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1983:24:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1963:44:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 2969,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1962:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1951:57:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2027:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 2955,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1925:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:150:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2973,
															"nodeType": "ExpressionStatement",
															"src": "1925:150:9"
														}
													]
												},
												"id": 2975,
												"nodeType": "IfStatement",
												"src": "1705:382:9",
												"trueBody": {
													"id": 2940,
													"nodeType": "Block",
													"src": "1719:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2937,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "1746:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2934,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "1734:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1734:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1734:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2939,
															"nodeType": "ExpressionStatement",
															"src": "1734:18:9"
														}
													]
												}
											}
										]
									},
									"id": 2977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1556:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1596:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "1588:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1628:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "1612:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "1641:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1670:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2977,
												"src": "1665:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2928,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1665:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:107:9"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:9"
									},
									"scope": 2978,
									"src": "1547:547:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2979,
							"src": "244:1853:9",
							"usedErrors": []
						}
					],
					"src": "35:2064:9"
				},
				"id": 9
			}
		}
	}
}